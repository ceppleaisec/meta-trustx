#
# INCLUDE HISTORY:
#
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/layer.conf
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/layer.conf
# /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf
# /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/layer.conf
# /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf
# /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/layer.conf
# /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/layer.conf
# /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf includes:
#   /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/distro/include/virt_security_flags.inc
# /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/layer.conf
# /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/layer.conf
# /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/layer.conf
# /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/layer.conf
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/layer.conf
# conf/bitbake.conf includes:
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/abi_version.conf
#   conf/site.conf
#   conf/auto.conf
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/multiconfig/default.conf
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/genericx86-64.conf includes:
#     /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc includes:
#       /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i686.inc includes:
#         /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i586.inc includes:
#           /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc
#     /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc includes:
#       /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc
#       /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine-sdk/x86_64.conf
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf includes:
#     /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf includes:
#       /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/poky-world-exclude.inc
#       /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc
#       /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/yocto-uninative.inc
#       /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf includes:
#     /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc
#     /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-versions.inc
#     /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc
#     /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc
#     /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc
#     /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc
#     /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/uninative-flags.inc
#     /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/init-manager-mdev-busybox.inc
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/sanity.conf
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass includes:
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/patch.bbclass includes:
#     /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/terminal.bbclass
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/staging.bbclass
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/mirrors.bbclass
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/utils.bbclass
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/utility-tasks.bbclass
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/metadata_scm.bbclass
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/logging.bbclass
# /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/classes/sanity-meta-virt.bbclass
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/poky-sanity.bbclass
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/uninative.bbclass
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_ipk.bbclass includes:
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass includes:
#     /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/packagedata.bbclass
#     /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/chrpath.bbclass
#     /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_pkgdata.bbclass
#     /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/buildstats.bbclass
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/image-mklibs.bbclass includes:
#   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/linuxloader.bbclass
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/image-prelink.bbclass
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/debian.bbclass
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/devshell.bbclass
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/license.bbclass
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/remove-libtool.bbclass
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/blacklist.bbclass
# /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sanity.bbclass
#
# $ABIEXTENSION [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:125
#     [_defaultval] ""
#   postdot /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:23
#     "${@bb.utils.contains('TUNE_FEATURES', 'mx32', 'x32', '' ,d)}"
#   override[class-nativesdk]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine-sdk/x86_64.conf:2
#     ""
# pre-expansion value:
#   "${@bb.utils.contains('TUNE_FEATURES', 'mx32', 'x32', '' ,d)}"
ABIEXTENSION=""
#
# $ABIEXTENSION_class-nativesdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine-sdk/x86_64.conf:2
#     ""
ABIEXTENSION_class-nativesdk=""
#
# $ALLOW_EMPTY [5 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:62
#     [doc] "Specifies if an output package should still be produced if it is empty."
#   override[defaultpkgname-dbg]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:329
#     "1"
#   override[defaultpkgname-dbg]:rename from ALLOW_EMPTY_${PN}-dbg data.py:104 [expandKeys]
#     "1"
#   override[defaultpkgname-dev]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:320
#     "1"
#   override[defaultpkgname-dev]:rename from ALLOW_EMPTY_${PN}-dev data.py:104 [expandKeys]
#     "1"
# pre-expansion value:
#   "None"
#
# $ALLOW_EMPTY_defaultpkgname-dbg [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:329
#     "1"
#   rename from ALLOW_EMPTY_${PN}-dbg data.py:104 [expandKeys]
#     "1"
# pre-expansion value:
#   "1"
ALLOW_EMPTY_defaultpkgname-dbg="1"
#
# $ALLOW_EMPTY_defaultpkgname-dev [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:320
#     "1"
#   rename from ALLOW_EMPTY_${PN}-dev data.py:104 [expandKeys]
#     "1"
# pre-expansion value:
#   "1"
ALLOW_EMPTY_defaultpkgname-dev="1"
#
# $ALL_MULTILIB_PACKAGE_ARCHS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:53
#     "${@all_multilib_tune_values(d, 'PACKAGE_ARCHS')}"
ALL_MULTILIB_PACKAGE_ARCHS="all any noarch x86_64 core2-64 genericx86_64"
#
# $ALL_QA
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:46
#     "${WARN_QA} ${ERROR_QA}"
ALL_QA="    libdir xorg-driver-abi             textrel  incompatible-license files-invalid                             infodir build-deps src-uri-bad              symlink-to-sysroot multilib             invalid-packageconfig host-user-contaminated uppercase-pn patch-fuzz              dev-so debug-deps dev-deps debug-files arch pkgconfig la             perms dep-cmp pkgvarcheck perm-config perm-line perm-link             split-strip packages-list pkgv-undefined var-undefined             version-going-backwards expanded-d invalid-chars             license-checksum dev-elf file-rdeps configure-unsafe             configure-gettext perllocalpod              already-stripped compile-host-path install-host-path                     installed-vs-shipped ldflags pn-overrides rpaths staticdev                     unknown-configure-option useless-rpaths"
#
# $ALTERNATIVE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:63
#     [doc] "Lists commands in a package that need an alternative binary naming scheme."
#
# $ALTERNATIVE_LINK_NAME
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:64
#     [doc] "Used by the alternatives system to map duplicated commands to actual locations."
#
# $ALTERNATIVE_PRIORITY
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:65
#     [doc] "Used by the alternatives system to create default priorities for duplicated commands."
#
# $ALTERNATIVE_TARGET
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:66
#     [doc] "Used by the alternatives system to create default link locations for duplicated commands."
#
# $APACHE_MIRROR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:635
#     "https://archive.apache.org/dist"
APACHE_MIRROR="https://archive.apache.org/dist"
#
# $AR [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:524
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:524
#     "${HOST_PREFIX}gcc-ar"
# pre-expansion value:
#   "${HOST_PREFIX}gcc-ar"
export AR="x86_64-poky-linux-musl-gcc-ar"
#
# $ARCH_DEFAULT_KERNELIMAGETYPE [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:41
#     "zImage"
#   override[x86]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:42
#     "bzImage"
#   override[x86-64]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:43
#     "bzImage"
# pre-expansion value:
#   "bzImage"
ARCH_DEFAULT_KERNELIMAGETYPE="bzImage"
#
# $ARCH_DEFAULT_KERNELIMAGETYPE_x86
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:42
#     "bzImage"
ARCH_DEFAULT_KERNELIMAGETYPE_x86="bzImage"
#
# $ARCH_DEFAULT_KERNELIMAGETYPE_x86-64
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:43
#     "bzImage"
ARCH_DEFAULT_KERNELIMAGETYPE_x86-64="bzImage"
#
# $AS [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:525
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:525
#     "${HOST_PREFIX}as ${HOST_AS_ARCH}"
# pre-expansion value:
#   "${HOST_PREFIX}as ${HOST_AS_ARCH}"
export AS="x86_64-poky-linux-musl-as  "
#
# $ASNEEDED
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:595
#     "-Wl,--as-needed"
ASNEEDED="-Wl,--as-needed"
#
# $ASSUME_PROVIDED [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:195
#     "    bzip2-native     chrpath-native     file-native     findutils-native     gawk-native     git-native     grep-native     diffstat-native     patch-native     libgcc-native     hostperl-runtime-native     hostpython-runtime-native     tar-native     virtual/libintl-native     virtual/libiconv-native     virtual/crypt-native     texinfo-native     bash-native     sed-native     wget-native     "
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:67
#     [doc] "List of packages (recipes actually) that are assumed to be implicitly available. BitBake does not build these packages."
# pre-expansion value:
#   "    bzip2-native     chrpath-native     file-native     findutils-native     gawk-native     git-native     grep-native     diffstat-native     patch-native     libgcc-native     hostperl-runtime-native     hostpython-runtime-native     tar-native     virtual/libintl-native     virtual/libiconv-native     virtual/crypt-native     texinfo-native     bash-native     sed-native     wget-native     "
ASSUME_PROVIDED="    bzip2-native     chrpath-native     file-native     findutils-native     gawk-native     git-native     grep-native     diffstat-native     patch-native     libgcc-native     hostperl-runtime-native     hostpython-runtime-native     tar-native     virtual/libintl-native     virtual/libiconv-native     virtual/crypt-native     texinfo-native     bash-native     sed-native     wget-native     "
#
# $ASSUME_SHLIBS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:68
#     [doc] "List of shlib:package[_version] mappings. Useful for lib packages in ASSUME_PROVIDED, for which automatic shlib dependency tracking does not work."
#
# $AUTHOR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:69
#     [doc] "Email address used to contact the original author(s) in order to send patches and forward bugs."
#
# $AUTOREV [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:675
#     "${@bb.fetch2.get_autorev(d)}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:676
#     [vardepvalue] "${SRCPV}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:71
#     [doc] "When SRCREV is set to the value of this variable, it specifies to use the latest source revision in the repository."
# pre-expansion value:
#   "${@bb.fetch2.get_autorev(d)}"
AUTOREV="AUTOINC"
#
# $AUTO_LIBNAME_PKGS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/debian.bbclass:12
#     "${PACKAGES}"
AUTO_LIBNAME_PKGS="defaultpkgname-src defaultpkgname-dbg defaultpkgname-staticdev defaultpkgname-dev defaultpkgname-doc defaultpkgname-locale  defaultpkgname"
#
# $AUTO_SYSLINUXMENU
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:70
#     [doc] "Enables creating an automatic menu for the syslinux bootloader."
#
# $AVAILABLE_LICENSES [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:72
#     [doc] "List of licenses found in the directories specified by COMMON_LICENSE_DIR and LICENSE_PATH."
#   immediate /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/license.bbclass:282
#     "${@' '.join(available_licenses(d))}"
# pre-expansion value:
#   "AAL AFL-1.2 AFL-2.0 AFL-2.1 AFL-3.0 AGPL-3.0 AMD ANTLR-PD APL-1.0 APSL-1.0 APSL-1.1 APSL-1.2 APSL-2.0 Adobe Apache-1.0 Apache-1.1 Apache-2.0 Apache-2.0-with-LLVM-exception Arphic-Public-License Artistic-1.0 Artistic-2.0 BSD BSD-0-Clause BSD-1-Clause BSD-2-Clause BSD-3-Clause BSD-4-Clause BSL-1.0 BitstreamVera CATOSL-1.1 CC-BY-1.0 CC-BY-2.0 CC-BY-2.5 CC-BY-3.0 CC-BY-NC-1.0 CC-BY-NC-2.0 CC-BY-NC-2.5 CC-BY-NC-3.0 CC-BY-NC-ND-1.0 CC-BY-NC-ND-2.0 CC-BY-NC-ND-2.5 CC-BY-NC-ND-3.0 CC-BY-NC-SA-1.0 CC-BY-NC-SA-2.0 CC-BY-NC-SA-2.5 CC-BY-NC-SA-3.0 CC-BY-ND-1.0 CC-BY-ND-2.0 CC-BY-ND-2.5 CC-BY-ND-3.0 CC-BY-SA-1.0 CC-BY-SA-2.0 CC-BY-SA-2.5 CC-BY-SA-3.0 CC-BY-SA-4.0 CC0-1.0 CDDL-1.0 CDS CECILL-1.0 CECILL-2.0 CECILL-B CECILL-C CPAL-1.0 CPL-1.0 CUA-OPL-1.0 CUP ClArtistic DMTF DSSSL ECL-1.0 ECL-2.0 EDL-1.0 EFL-1.0 EFL-2.0 EPL-1.0 EPL-2.0 EUDatagrid EUPL-1.0 EUPL-1.1 Entessa ErlPL-1.1 FLTK FSF-Unlimited Fair Frameworx-1.0 FreeType GD GFDL-1.1 GFDL-1.2 GFDL-1.3 GPL-1.0 GPL-2-with-bison-exception GPL-2.0 GPL-2.0-with-GCC-exception GPL-2.0-with-OpenSSL-exception GPL-2.0-with-autoconf-exception GPL-2.0-with-classpath-exception GPL-2.0-with-font-exception GPL-2.0-with-lmbench-restriction GPL-3.0 GPL-3.0-with-GCC-exception GPL-3.0-with-autoconf-exception HDF5 HPND ICU IPA IPL-1.0 ISC ImageMagick Intel-ACPI JLEX Khronos Kilgard LGPL-2.0 LGPL-2.1 LGPL-3.0 LLNL LPL-1.02 LPPL-1.0 LPPL-1.1 LPPL-1.2 LPPL-1.3c Libpng MIT MPL-1.0 MPL-1.1 MPL-2.0 MS-PL MS-RL ManishSingh Mini-XML-License MirOS Motosoto Multics NASA-1.3 NCSA NGPL NPOSL-3.0 NTP Nauman NewRelic Nokia OASIS OCLC-2.0 ODbL-1.0 OFL-1.0 OFL-1.1 OGPL OGTSL OLDAP-2.8 OSL-1.0 OSL-2.0 OSL-3.0 OpenLDAP OpenSSL PD PHP-3.0 ParaTypeFFL-1.3 PostgreSQL Proprietary Python-2.0 QPL-1.0 QWTv1.0 RHeCos-1 RHeCos-1.1 RPL-1.5 RPSL-1.0 RSCPL RXTXv2.1 Ruby SAX-PD SGI-1 SMAIL_GPL SPL-1.0 SSPL-1 SUN Simple-2.0 Sleepycat SugarCRM-1 SugarCRM-1.1.3 TLWG UCB UFL Unicode VSL-1.0 W3C WXwindows Watcom-1.0 X11 XFree86-1.0 XFree86-1.1 XSL Xnet YPL-1.1 ZPL-1.1 ZPL-2.0 ZPL-2.1 Zimbra-1.3 Zlib bzip2 copyleft-next-0.3.0 eCos-2.0 flite gSOAP-1 gSOAP-1.3b gnuplot iozone3 nbench-byte netperf pkgconf radvd read-edid safec tcl ttf-mplus unRAR unfs3 vim zsh"
AVAILABLE_LICENSES="AAL AFL-1.2 AFL-2.0 AFL-2.1 AFL-3.0 AGPL-3.0 AMD ANTLR-PD APL-1.0 APSL-1.0 APSL-1.1 APSL-1.2 APSL-2.0 Adobe Apache-1.0 Apache-1.1 Apache-2.0 Apache-2.0-with-LLVM-exception Arphic-Public-License Artistic-1.0 Artistic-2.0 BSD BSD-0-Clause BSD-1-Clause BSD-2-Clause BSD-3-Clause BSD-4-Clause BSL-1.0 BitstreamVera CATOSL-1.1 CC-BY-1.0 CC-BY-2.0 CC-BY-2.5 CC-BY-3.0 CC-BY-NC-1.0 CC-BY-NC-2.0 CC-BY-NC-2.5 CC-BY-NC-3.0 CC-BY-NC-ND-1.0 CC-BY-NC-ND-2.0 CC-BY-NC-ND-2.5 CC-BY-NC-ND-3.0 CC-BY-NC-SA-1.0 CC-BY-NC-SA-2.0 CC-BY-NC-SA-2.5 CC-BY-NC-SA-3.0 CC-BY-ND-1.0 CC-BY-ND-2.0 CC-BY-ND-2.5 CC-BY-ND-3.0 CC-BY-SA-1.0 CC-BY-SA-2.0 CC-BY-SA-2.5 CC-BY-SA-3.0 CC-BY-SA-4.0 CC0-1.0 CDDL-1.0 CDS CECILL-1.0 CECILL-2.0 CECILL-B CECILL-C CPAL-1.0 CPL-1.0 CUA-OPL-1.0 CUP ClArtistic DMTF DSSSL ECL-1.0 ECL-2.0 EDL-1.0 EFL-1.0 EFL-2.0 EPL-1.0 EPL-2.0 EUDatagrid EUPL-1.0 EUPL-1.1 Entessa ErlPL-1.1 FLTK FSF-Unlimited Fair Frameworx-1.0 FreeType GD GFDL-1.1 GFDL-1.2 GFDL-1.3 GPL-1.0 GPL-2-with-bison-exception GPL-2.0 GPL-2.0-with-GCC-exception GPL-2.0-with-OpenSSL-exception GPL-2.0-with-autoconf-exception GPL-2.0-with-classpath-exception GPL-2.0-with-font-exception GPL-2.0-with-lmbench-restriction GPL-3.0 GPL-3.0-with-GCC-exception GPL-3.0-with-autoconf-exception HDF5 HPND ICU IPA IPL-1.0 ISC ImageMagick Intel-ACPI JLEX Khronos Kilgard LGPL-2.0 LGPL-2.1 LGPL-3.0 LLNL LPL-1.02 LPPL-1.0 LPPL-1.1 LPPL-1.2 LPPL-1.3c Libpng MIT MPL-1.0 MPL-1.1 MPL-2.0 MS-PL MS-RL ManishSingh Mini-XML-License MirOS Motosoto Multics NASA-1.3 NCSA NGPL NPOSL-3.0 NTP Nauman NewRelic Nokia OASIS OCLC-2.0 ODbL-1.0 OFL-1.0 OFL-1.1 OGPL OGTSL OLDAP-2.8 OSL-1.0 OSL-2.0 OSL-3.0 OpenLDAP OpenSSL PD PHP-3.0 ParaTypeFFL-1.3 PostgreSQL Proprietary Python-2.0 QPL-1.0 QWTv1.0 RHeCos-1 RHeCos-1.1 RPL-1.5 RPSL-1.0 RSCPL RXTXv2.1 Ruby SAX-PD SGI-1 SMAIL_GPL SPL-1.0 SSPL-1 SUN Simple-2.0 Sleepycat SugarCRM-1 SugarCRM-1.1.3 TLWG UCB UFL Unicode VSL-1.0 W3C WXwindows Watcom-1.0 X11 XFree86-1.0 XFree86-1.1 XSL Xnet YPL-1.1 ZPL-1.1 ZPL-2.0 ZPL-2.1 Zimbra-1.3 Zlib bzip2 copyleft-next-0.3.0 eCos-2.0 flite gSOAP-1 gSOAP-1.3b gnuplot iozone3 nbench-byte netperf pkgconf radvd read-edid safec tcl ttf-mplus unRAR unfs3 vim zsh"
#
# $AVAILTUNES [8 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:38
#     "x86"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:44
#     "x86-64"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:50
#     "x86-64-x32"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i586.inc:10
#     "i586"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i686.inc:23
#     "i686"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:19
#     "core2-32"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:26
#     "core2-64"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:33
#     "core2-64-x32"
# pre-expansion value:
#   " x86 x86-64 x86-64-x32 i586 i686 core2-32 core2-64 core2-64-x32"
AVAILTUNES=" x86 x86-64 x86-64-x32 i586 i686 core2-32 core2-64 core2-64-x32"
#
# $B [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:372
#     "${S}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:76
#     [doc] "The Build Directory. The OpenEmbedded build system places generated objects into the Build Directory during a recipe's build process."
# pre-expansion value:
#   "${S}"
B="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/defaultpkgname-1.0"
#
# $BAD_RECOMMENDATIONS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:77
#     [doc] "A list of packages not to install despite being recommended by a recipe. Support for this variable exists only when using the IPK or RPM packaging backends."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:840
#     ""
# pre-expansion value:
#   ""
BAD_RECOMMENDATIONS=""
#
# $BASEDEPENDS [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:76
#     ""
#   override[class-target]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:77
#     "${@base_dep_prepend(d)}"
#   override[class-nativesdk]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:78
#     "${@base_dep_prepend(d)}"
# pre-expansion value:
#   "${@base_dep_prepend(d)}"
BASEDEPENDS="virtual/x86_64-poky-linux-musl-gcc virtual/x86_64-poky-linux-musl-compilerlibs virtual/libc"
#
# $BASEDEPENDS_class-nativesdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:78
#     "${@base_dep_prepend(d)}"
BASEDEPENDS_class-nativesdk="virtual/x86_64-poky-linux-musl-gcc virtual/x86_64-poky-linux-musl-compilerlibs virtual/libc"
#
# $BASEDEPENDS_class-target
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:77
#     "${@base_dep_prepend(d)}"
BASEDEPENDS_class-target="virtual/x86_64-poky-linux-musl-gcc virtual/x86_64-poky-linux-musl-compilerlibs virtual/libc"
#
# $BASELIB [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:12
#     "lib"
#   override[powerpc64]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:13
#     "lib64"
# pre-expansion value:
#   "lib"
BASELIB="lib"
#
# $BASELIB_powerpc64
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:13
#     "lib64"
BASELIB_powerpc64="lib64"
#
# $BASE_DEFAULT_DEPS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:74
#     "virtual/${TARGET_PREFIX}gcc virtual/${TARGET_PREFIX}compilerlibs virtual/libc"
BASE_DEFAULT_DEPS="virtual/x86_64-poky-linux-musl-gcc virtual/x86_64-poky-linux-musl-compilerlibs virtual/libc"
#
# $BASE_LIB_tune-core2-32
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:21
#     "lib"
BASE_LIB_tune-core2-32="lib"
#
# $BASE_LIB_tune-core2-64
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:28
#     "lib64"
BASE_LIB_tune-core2-64="lib64"
#
# $BASE_LIB_tune-core2-64-x32
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:35
#     "libx32"
BASE_LIB_tune-core2-64-x32="libx32"
#
# $BASE_LIB_tune-i586
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i586.inc:12
#     "lib"
BASE_LIB_tune-i586="lib"
#
# $BASE_LIB_tune-i686
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i686.inc:25
#     "lib"
BASE_LIB_tune-i686="lib"
#
# $BASE_LIB_tune-x86
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:40
#     "lib"
BASE_LIB_tune-x86="lib"
#
# $BASE_LIB_tune-x86-64
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:46
#     "lib64"
BASE_LIB_tune-x86-64="lib64"
#
# $BASE_LIB_tune-x86-64-x32
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:52
#     "libx32"
BASE_LIB_tune-x86-64-x32="libx32"
#
# $BASE_WORKDIR
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:367
#     "${TMPDIR}/work"
BASE_WORKDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work"
#
# $BBCLASSEXTEND
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:83
#     [doc] "Allows you to extend a recipe so that it builds variants of the software. Common variants for recipes are 'native', 'cross', 'nativesdk' and multilibs."
#
# $BBFILES [34 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf:6
#     ""
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:4
#     "${LAYERDIR}/recipes-*/*/*.bb"
#   set data_smart.py:966 [expandVarref]
#     " /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/recipes-*/*/*.bb"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/layer.conf:6
#     "${LAYERDIR}/recipes-*/*/*.bb             ${LAYERDIR}/recipes-*/*/*.bbappend"
#   set data_smart.py:966 [expandVarref]
#     " /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/recipes-*/*/*.bb /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bbappend"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/layer.conf:6
#     "${LAYERDIR}/recipes-*/*/*.bb             ${LAYERDIR}/recipes-*/*/*.bbappend"
#   set data_smart.py:966 [expandVarref]
#     " /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/recipes-*/*/*.bb /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bbappend /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bbappend"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:15
#     "${LAYERDIR}/recipes-*/*/*.bb ${LAYERDIR}/recipes-*/*/*.bbappend"
#   set data_smart.py:966 [expandVarref]
#     " /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/recipes-*/*/*.bb /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bbappend /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bbappend"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/layer.conf:5
#     "${LAYERDIR}/recipes*/*/*.bb ${LAYERDIR}/recipes*/*/*.bbappend"
#   set data_smart.py:966 [expandVarref]
#     " /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/recipes-*/*/*.bb /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bbappend /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bbappend"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:6
#     "${LAYERDIR}/recipes-*/*/*.bb             ${LAYERDIR}/recipes-*/*/*.bbappend"
#   set data_smart.py:966 [expandVarref]
#     " /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/recipes-*/*/*.bb /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bbappend /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bb             /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bbappend"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/layer.conf:6
#     "${LAYERDIR}/recipes-*/*/*.bb 	${LAYERDIR}/recipes-*/*/*.bbappend"
#   set data_smart.py:966 [expandVarref]
#     " /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/recipes-*/*/*.bb /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bbappend /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bb             /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/recipes-*/*/*.bb 	/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/recipes-*/*/*.bbappend"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/layer.conf:6
#     "${LAYERDIR}/recipes-*/*/*.bb 	${LAYERDIR}/recipes-*/*/*.bbappend"
#   set data_smart.py:966 [expandVarref]
#     " /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/recipes-*/*/*.bb /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bbappend /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bb             /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/recipes-*/*/*.bb 	/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/recipes-*/*/*.bb 	/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/recipes-*/*/*.bbappend"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:5
#     "${LAYERDIR}/recipes*/*/*.bb ${LAYERDIR}/recipes*/*/*.bbappend"
#   set data_smart.py:966 [expandVarref]
#     " /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/recipes-*/*/*.bb /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bbappend /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bb             /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/recipes-*/*/*.bb 	/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/recipes-*/*/*.bb 	/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/recipes*/*/*.bbappend"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/layer.conf:6
#     "${LAYERDIR}/recipes-*/*/*.bb             ${LAYERDIR}/recipes-*/*/*.bbappend"
#   set data_smart.py:966 [expandVarref]
#     " /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/recipes-*/*/*.bb /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bbappend /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bb             /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/recipes-*/*/*.bb 	/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/recipes-*/*/*.bb 	/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/recipes*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/recipes-*/*/*.bb             /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/recipes-*/*/*.bbappend"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/layer.conf:5
#     "${LAYERDIR}/recipes*/*/*.bb ${LAYERDIR}/recipes*/*/*.bbappend"
#   set data_smart.py:966 [expandVarref]
#     " /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/recipes-*/*/*.bb /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bbappend /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bb             /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/recipes-*/*/*.bb 	/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/recipes-*/*/*.bb 	/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/recipes*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/recipes-*/*/*.bb             /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-java/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-java/recipes*/*/*.bbappend"
#   immediate /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/layer.conf:5
#     "${BBFILES} ${LAYERDIR}/recipes-*/*/*.bb            ${LAYERDIR}/recipes-*/*/*.bbappend 	   ${LAYERDIR}/images/*.bb*"
#   immediate /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/layer.conf:5
#     "${BBFILES} ${LAYERDIR}/recipes-*/*/*.bb            ${LAYERDIR}/recipes-*/*/*.bbappend 	   ${LAYERDIR}/images/*.bb*"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/layer.conf:6
#     "${LAYERDIR}/recipes-*/*/*.bb             ${LAYERDIR}/recipes-*/*/*.bbappend"
#   set data_smart.py:966 [expandVarref]
#     " /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/recipes-*/*/*.bb /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bbappend /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bb             /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/recipes-*/*/*.bb 	/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/recipes-*/*/*.bb 	/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/recipes*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/recipes-*/*/*.bb             /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-java/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-java/recipes*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/recipes-*/*/*.bb            /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/recipes-*/*/*.bbappend 	   /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/images/*.bb* /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/recipes-*/*/*.bb            /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/recipes-*/*/*.bbappend 	   /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/images/*.bb* /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/recipes-*/*/*.bbappend"
#   append cookerdata.py:391 [parseConfigurationFiles]
#     " /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/openembedded-layer/*/*/*.bb"
#   append cookerdata.py:391 [parseConfigurationFiles]
#     " /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/openembedded-layer/*/*/*.bbappend"
#   append cookerdata.py:391 [parseConfigurationFiles]
#     " /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/networking-layer/*/*/*.bb"
#   append cookerdata.py:391 [parseConfigurationFiles]
#     " /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/networking-layer/*/*/*.bbappend"
#   append cookerdata.py:391 [parseConfigurationFiles]
#     " /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/virtualization-layer/recipes*/*/*.bb"
#   append cookerdata.py:391 [parseConfigurationFiles]
#     " /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/virtualization-layer/recipes*/*/*.bbappend"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:87
#     [doc] "List of recipe files used by BitBake to build software."
# pre-expansion value:
#   " /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/recipes-*/*/*.bb /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bbappend /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bb             /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/recipes-*/*/*.bb 	/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/recipes-*/*/*.bb 	/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/recipes*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/recipes-*/*/*.bb             /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-java/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-java/recipes*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/recipes-*/*/*.bb            /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/recipes-*/*/*.bbappend 	   /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/images/*.bb* /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/recipes-*/*/*.bb            /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/recipes-*/*/*.bbappend 	   /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/images/*.bb* /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/openembedded-layer/*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/openembedded-layer/*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/networking-layer/*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/networking-layer/*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/virtualization-layer/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/virtualization-layer/recipes*/*/*.bbappend"
BBFILES=" /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/recipes-*/*/*.bb /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/recipes-*/*/*.bbappend /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/recipes*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bb             /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/recipes-*/*/*.bb 	/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/recipes-*/*/*.bb 	/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/recipes*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/recipes-*/*/*.bb             /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-java/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-java/recipes*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/recipes-*/*/*.bb            /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/recipes-*/*/*.bbappend 	   /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/images/*.bb* /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/recipes-*/*/*.bb            /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/recipes-*/*/*.bbappend 	   /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/images/*.bb* /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/recipes-*/*/*.bb             /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/recipes-*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/openembedded-layer/*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/openembedded-layer/*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/networking-layer/*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/networking-layer/*/*/*.bbappend /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/virtualization-layer/recipes*/*/*.bb /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/virtualization-layer/recipes*/*/*.bbappend"
#
# $BBFILES_DYNAMIC [2 operations]
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/layer.conf:14
#     "openembedded-layer:${LAYERDIR}/dynamic-layers/openembedded-layer/*/*/*.bb                     openembedded-layer:${LAYERDIR}/dynamic-layers/openembedded-layer/*/*/*.bbappend                     networking-layer:${LAYERDIR}/dynamic-layers/networking-layer/*/*/*.bb                     networking-layer:${LAYERDIR}/dynamic-layers/networking-layer/*/*/*.bbappend                     virtualization-layer:${LAYERDIR}/dynamic-layers/virtualization-layer/recipes*/*/*.bb                     virtualization-layer:${LAYERDIR}/dynamic-layers/virtualization-layer/recipes*/*/*.bbappend                    "
#   set data_smart.py:966 [expandVarref]
#     " openembedded-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/openembedded-layer/*/*/*.bb                     openembedded-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/openembedded-layer/*/*/*.bbappend                     networking-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/networking-layer/*/*/*.bb                     networking-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/networking-layer/*/*/*.bbappend                     virtualization-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/virtualization-layer/recipes*/*/*.bb                     virtualization-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/virtualization-layer/recipes*/*/*.bbappend                    "
# pre-expansion value:
#   " openembedded-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/openembedded-layer/*/*/*.bb                     openembedded-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/openembedded-layer/*/*/*.bbappend                     networking-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/networking-layer/*/*/*.bb                     networking-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/networking-layer/*/*/*.bbappend                     virtualization-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/virtualization-layer/recipes*/*/*.bb                     virtualization-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/virtualization-layer/recipes*/*/*.bbappend                    "
BBFILES_DYNAMIC=" openembedded-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/openembedded-layer/*/*/*.bb                     openembedded-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/openembedded-layer/*/*/*.bbappend                     networking-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/networking-layer/*/*/*.bb                     networking-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/networking-layer/*/*/*.bbappend                     virtualization-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/virtualization-layer/recipes*/*/*.bb                     virtualization-layer:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/dynamic-layers/virtualization-layer/recipes*/*/*.bbappend                    "
#
# $BBFILE_COLLECTIONS [15 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:6
#     "core"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/layer.conf:8
#     "yocto"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/layer.conf:8
#     "yoctobsp"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:17
#     "openembedded-layer"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/layer.conf:7
#     "meta-python"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:8
#     "networking-layer"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/layer.conf:8
#     "perl-layer"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/layer.conf:8
#     "filesystems-layer"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:7
#     "virtualization-layer"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/layer.conf:16
#     "selinux"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/layer.conf:7
#     "meta-java"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/layer.conf:8
#     "trustx-layer"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/layer.conf:8
#     "trustx-intel"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/layer.conf:8
#     "meta-appends"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:84
#     [doc] "Lists the names of configured layers. These names are used to find the other BBFILE_* variables."
# pre-expansion value:
#   " core yocto yoctobsp openembedded-layer meta-python networking-layer perl-layer filesystems-layer virtualization-layer selinux meta-java trustx-layer trustx-intel meta-appends"
BBFILE_COLLECTIONS=" core yocto yoctobsp openembedded-layer meta-python networking-layer perl-layer filesystems-layer virtualization-layer selinux meta-java trustx-layer trustx-intel meta-appends"
#
# $BBFILE_PATTERN [21 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:85
#     [doc] "Variable that expands to match files from BBFILES in a particular layer. This variable is used in the layer.conf file and must be suffixed with the name of a layer."
#   override[core]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:7
#     "^${LAYERDIR}/"
#   override[core]:set data_smart.py:966 [expandVarref]
#     "^/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/"
#   override[yocto]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/layer.conf:9
#     "^${LAYERDIR}/"
#   override[yocto]:set data_smart.py:966 [expandVarref]
#     "^/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/"
#   override[yoctobsp]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/layer.conf:9
#     "^${LAYERDIR}/"
#   override[yoctobsp]:set data_smart.py:966 [expandVarref]
#     "^/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/"
#   override[openembedded-layer]:immediate /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:18
#     "^${LAYERDIR}/"
#   override[meta-python]:immediate /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/layer.conf:8
#     "^${LAYERDIR}/"
#   override[networking-layer]:immediate /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:9
#     "^${LAYERDIR}/"
#   override[perl-layer]:immediate /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/layer.conf:9
#     "^${LAYERDIR}/"
#   override[filesystems-layer]:set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/layer.conf:9
#     "^${LAYERDIR}/"
#   override[filesystems-layer]:set data_smart.py:966 [expandVarref]
#     "^/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/"
#   override[virtualization-layer]:immediate /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:8
#     "^${LAYERDIR}/"
#   override[selinux]:set /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/layer.conf:17
#     "^${LAYERDIR}/"
#   override[selinux]:set data_smart.py:966 [expandVarref]
#     "^/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/"
#   override[meta-java]:immediate /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/layer.conf:8
#     "^${LAYERDIR}/"
#   override[trustx-layer]:immediate /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/layer.conf:9
#     "^${LAYERDIR}/"
#   override[trustx-intel]:immediate /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/layer.conf:9
#     "^${LAYERDIR}/"
#   override[meta-appends]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/layer.conf:9
#     "^${LAYERDIR}/"
#   override[meta-appends]:set data_smart.py:966 [expandVarref]
#     "^/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/"
# pre-expansion value:
#   "None"
#
# $BBFILE_PATTERN_core [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:7
#     "^${LAYERDIR}/"
#   set data_smart.py:966 [expandVarref]
#     "^/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/"
# pre-expansion value:
#   "^/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/"
BBFILE_PATTERN_core="^/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/"
#
# $BBFILE_PATTERN_filesystems-layer [2 operations]
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/layer.conf:9
#     "^${LAYERDIR}/"
#   set data_smart.py:966 [expandVarref]
#     "^/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/"
# pre-expansion value:
#   "^/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/"
BBFILE_PATTERN_filesystems-layer="^/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/"
#
# $BBFILE_PATTERN_meta-appends [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/layer.conf:9
#     "^${LAYERDIR}/"
#   set data_smart.py:966 [expandVarref]
#     "^/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/"
# pre-expansion value:
#   "^/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/"
BBFILE_PATTERN_meta-appends="^/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/"
#
# $BBFILE_PATTERN_meta-java
#   immediate /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/layer.conf:8
#     "^${LAYERDIR}/"
BBFILE_PATTERN_meta-java="^/home/epple/projects/ramdisk/tme_usb_token/meta-java/"
#
# $BBFILE_PATTERN_meta-python
#   immediate /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/layer.conf:8
#     "^${LAYERDIR}/"
BBFILE_PATTERN_meta-python="^/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/"
#
# $BBFILE_PATTERN_networking-layer
#   immediate /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:9
#     "^${LAYERDIR}/"
BBFILE_PATTERN_networking-layer="^/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/"
#
# $BBFILE_PATTERN_openembedded-layer
#   immediate /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:18
#     "^${LAYERDIR}/"
BBFILE_PATTERN_openembedded-layer="^/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/"
#
# $BBFILE_PATTERN_perl-layer
#   immediate /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/layer.conf:9
#     "^${LAYERDIR}/"
BBFILE_PATTERN_perl-layer="^/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/"
#
# $BBFILE_PATTERN_selinux [2 operations]
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/layer.conf:17
#     "^${LAYERDIR}/"
#   set data_smart.py:966 [expandVarref]
#     "^/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/"
# pre-expansion value:
#   "^/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/"
BBFILE_PATTERN_selinux="^/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/"
#
# $BBFILE_PATTERN_trustx-intel
#   immediate /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/layer.conf:9
#     "^${LAYERDIR}/"
BBFILE_PATTERN_trustx-intel="^/home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/"
#
# $BBFILE_PATTERN_trustx-layer
#   immediate /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/layer.conf:9
#     "^${LAYERDIR}/"
BBFILE_PATTERN_trustx-layer="^/home/epple/projects/ramdisk/tme_usb_token/meta-trustx/"
#
# $BBFILE_PATTERN_virtualization-layer
#   immediate /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:8
#     "^${LAYERDIR}/"
BBFILE_PATTERN_virtualization-layer="^/home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/"
#
# $BBFILE_PATTERN_yocto [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/layer.conf:9
#     "^${LAYERDIR}/"
#   set data_smart.py:966 [expandVarref]
#     "^/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/"
# pre-expansion value:
#   "^/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/"
BBFILE_PATTERN_yocto="^/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/"
#
# $BBFILE_PATTERN_yoctobsp [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/layer.conf:9
#     "^${LAYERDIR}/"
#   set data_smart.py:966 [expandVarref]
#     "^/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/"
# pre-expansion value:
#   "^/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/"
BBFILE_PATTERN_yoctobsp="^/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/"
#
# $BBFILE_PRIORITY [15 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:86
#     [doc] "Assigns the priority for recipe files in each layer. Setting this variable allows you to prioritize a layer against other layers that contain the same recipe."
#   override[core]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:8
#     "5"
#   override[yocto]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/layer.conf:10
#     "5"
#   override[yoctobsp]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/layer.conf:10
#     "5"
#   override[openembedded-layer]:set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:24
#     "6"
#   override[meta-python]:set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/layer.conf:9
#     "7"
#   override[networking-layer]:set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:10
#     "5"
#   override[perl-layer]:set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/layer.conf:10
#     "6"
#   override[filesystems-layer]:set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/layer.conf:10
#     "6"
#   override[virtualization-layer]:set /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:9
#     "8"
#   override[selinux]:set /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/layer.conf:18
#     "5"
#   override[meta-java]:set /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/layer.conf:9
#     "10"
#   override[trustx-layer]:immediate /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/layer.conf:10
#     "8"
#   override[trustx-intel]:immediate /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/layer.conf:10
#     "8"
#   override[meta-appends]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/layer.conf:10
#     "6"
# pre-expansion value:
#   "None"
#
# $BBFILE_PRIORITY_core
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:8
#     "5"
BBFILE_PRIORITY_core="5"
#
# $BBFILE_PRIORITY_filesystems-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/layer.conf:10
#     "6"
BBFILE_PRIORITY_filesystems-layer="6"
#
# $BBFILE_PRIORITY_meta-appends
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/layer.conf:10
#     "6"
BBFILE_PRIORITY_meta-appends="6"
#
# $BBFILE_PRIORITY_meta-java
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/layer.conf:9
#     "10"
BBFILE_PRIORITY_meta-java="10"
#
# $BBFILE_PRIORITY_meta-python
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/layer.conf:9
#     "7"
BBFILE_PRIORITY_meta-python="7"
#
# $BBFILE_PRIORITY_networking-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:10
#     "5"
BBFILE_PRIORITY_networking-layer="5"
#
# $BBFILE_PRIORITY_openembedded-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:24
#     "6"
BBFILE_PRIORITY_openembedded-layer="6"
#
# $BBFILE_PRIORITY_perl-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/layer.conf:10
#     "6"
BBFILE_PRIORITY_perl-layer="6"
#
# $BBFILE_PRIORITY_selinux
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/layer.conf:18
#     "5"
BBFILE_PRIORITY_selinux="5"
#
# $BBFILE_PRIORITY_trustx-intel
#   immediate /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/layer.conf:10
#     "8"
BBFILE_PRIORITY_trustx-intel="8"
#
# $BBFILE_PRIORITY_trustx-layer
#   immediate /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/layer.conf:10
#     "8"
BBFILE_PRIORITY_trustx-layer="8"
#
# $BBFILE_PRIORITY_virtualization-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:9
#     "8"
BBFILE_PRIORITY_virtualization-layer="8"
#
# $BBFILE_PRIORITY_yocto
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/layer.conf:10
#     "5"
BBFILE_PRIORITY_yocto="5"
#
# $BBFILE_PRIORITY_yoctobsp
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/layer.conf:10
#     "5"
BBFILE_PRIORITY_yoctobsp="5"
#
# $BBINCLUDED
#   set cookerdata.py:437 [parseConfigurationFiles]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/layer.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/conf/distro/include/virt_security_flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/virt_security_flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/virt_security_flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/virt_security_flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/distro/include/virt_security_flags.inc /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/distro/include/virt_security_flags.inc /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/distro/include/virt_security_flags.inc /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/distro/include/virt_security_flags.inc /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/distro/include/virt_security_flags.inc /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/distro/include/virt_security_flags.inc /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/distro/include/virt_security_flags.inc /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/layer.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/layer.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/bitbake.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bitbake.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/abi_version.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/abi_version.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/abi_version.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/abi_version.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/site.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/site.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/site.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/site.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/site.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/site.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/auto.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/auto.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/auto.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/auto.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/auto.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/auto.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/local.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/local.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/multiconfig/default.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/multiconfig/default.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/multiconfig/default.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/multiconfig/default.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/machine/genericx86-64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine/genericx86-64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine/genericx86-64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/genericx86-64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/genericx86-64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/conf/machine/include/tune-core2.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine/include/tune-core2.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine/include/tune-core2.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/conf/machine/include/tune-i686.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine/include/tune-i686.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine/include/tune-i686.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i686.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/conf/machine/include/tune-i586.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine/include/tune-i586.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine/include/tune-i586.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i586.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/conf/machine/include/x86/arch-x86.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine/include/x86/arch-x86.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine/include/x86/arch-x86.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/conf/machine/include/genericx86-common.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine/include/genericx86-common.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine/include/genericx86-common.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/genericx86-common.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/conf/machine/include/x86-base.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine/include/x86-base.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine/include/x86-base.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/conf/machine/include/qemuboot-x86.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine/include/qemuboot-x86.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine/include/qemuboot-x86.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/machine-sdk/x86_64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine-sdk/x86_64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine-sdk/x86_64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine-sdk/x86_64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/distro/poky-tiny.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/conf/distro/poky.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/conf/distro/include/poky-world-exclude.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/poky-world-exclude.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/conf/distro/include/no-static-libs.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/no-static-libs.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/no-static-libs.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/conf/distro/include/yocto-uninative.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/yocto-uninative.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/yocto-uninative.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/yocto-uninative.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/conf/distro/include/security_flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/security_flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/security_flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/distro/defaultsetup.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/defaultsetup.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/defaultsetup.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/conf/distro/include/default-providers.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/default-providers.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/default-providers.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/conf/distro/include/default-versions.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/default-versions.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/default-versions.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-versions.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/conf/distro/include/default-distrovars.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/default-distrovars.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/default-distrovars.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/conf/distro/include/maintainers.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/maintainers.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/maintainers.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/conf/distro/include/tcmode-default.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/tcmode-default.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/tcmode-default.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/conf/distro/include/tclibc-musl.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/tclibc-musl.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/tclibc-musl.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/conf/distro/include/uninative-flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/uninative-flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/uninative-flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/uninative-flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/conf/distro/include/init-manager-mdev-busybox.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/init-manager-mdev-busybox.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/init-manager-mdev-busybox.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/init-manager-mdev-busybox.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/documentation.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/documentation.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/documentation.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/licenses.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/licenses.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/licenses.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/sanity.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/sanity.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/sanity.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/sanity.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/base.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/base.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/patch.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/patch.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/patch.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/terminal.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/terminal.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/terminal.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/staging.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/staging.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/staging.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/mirrors.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/mirrors.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/mirrors.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/utils.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/utils.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/utils.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/utility-tasks.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/utility-tasks.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/utility-tasks.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/metadata_scm.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/metadata_scm.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/metadata_scm.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/logging.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/logging.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/logging.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/sanity-meta-virt.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/sanity-meta-virt.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sanity-meta-virt.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/classes/sanity-meta-virt.bbclass /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/classes/sanity-meta-virt.bbclass /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/classes/sanity-meta-virt.bbclass /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/classes/sanity-meta-virt.bbclass /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/classes/sanity-meta-virt.bbclass /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/classes/sanity-meta-virt.bbclass /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/classes/sanity-meta-virt.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/poky-sanity.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/uninative.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/uninative.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/uninative.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/package_ipk.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/package_ipk.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_ipk.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/package.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/package.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/packagedata.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/packagedata.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/packagedata.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/chrpath.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/chrpath.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/chrpath.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/package_pkgdata.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/package_pkgdata.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_pkgdata.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/insane.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/insane.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/buildstats.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/buildstats.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/buildstats.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/image-mklibs.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/image-mklibs.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/image-mklibs.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/linuxloader.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/linuxloader.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/linuxloader.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/image-prelink.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/image-prelink.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/image-prelink.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/debian.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/debian.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/debian.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/devshell.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/devshell.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/devshell.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/sstate.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/sstate.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/license.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/license.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/license.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/remove-libtool.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/remove-libtool.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/remove-libtool.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/blacklist.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/blacklist.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/blacklist.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/sanity.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/sanity.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sanity.bbclass"
BBINCLUDED="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/layer.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/conf/distro/include/virt_security_flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/virt_security_flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/virt_security_flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/virt_security_flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/distro/include/virt_security_flags.inc /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/distro/include/virt_security_flags.inc /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/distro/include/virt_security_flags.inc /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/distro/include/virt_security_flags.inc /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/distro/include/virt_security_flags.inc /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/distro/include/virt_security_flags.inc /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/distro/include/virt_security_flags.inc /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/layer.conf /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/layer.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/layer.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/bitbake.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bitbake.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/abi_version.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/abi_version.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/abi_version.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/abi_version.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/site.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/site.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/site.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/site.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/site.conf /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/site.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/site.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/auto.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/auto.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/auto.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/auto.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/auto.conf /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/auto.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/auto.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/local.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/local.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/multiconfig/default.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/multiconfig/default.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/multiconfig/default.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/multiconfig/default.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/machine/genericx86-64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine/genericx86-64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine/genericx86-64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/genericx86-64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/genericx86-64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/conf/machine/include/tune-core2.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine/include/tune-core2.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine/include/tune-core2.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/conf/machine/include/tune-i686.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine/include/tune-i686.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine/include/tune-i686.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i686.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/conf/machine/include/tune-i586.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine/include/tune-i586.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine/include/tune-i586.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i586.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/conf/machine/include/x86/arch-x86.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine/include/x86/arch-x86.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine/include/x86/arch-x86.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/conf/machine/include/genericx86-common.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine/include/genericx86-common.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine/include/genericx86-common.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/genericx86-common.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/conf/machine/include/x86-base.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine/include/x86-base.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine/include/x86-base.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/conf/machine/include/qemuboot-x86.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine/include/qemuboot-x86.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine/include/qemuboot-x86.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/machine-sdk/x86_64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/machine-sdk/x86_64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/machine-sdk/x86_64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine-sdk/x86_64.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/distro/poky-tiny.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/conf/distro/poky.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/conf/distro/include/poky-world-exclude.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/poky-world-exclude.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/conf/distro/include/no-static-libs.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/no-static-libs.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/no-static-libs.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/conf/distro/include/yocto-uninative.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/yocto-uninative.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/yocto-uninative.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/yocto-uninative.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/conf/distro/include/security_flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/security_flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/security_flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/distro/defaultsetup.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/defaultsetup.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/defaultsetup.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/conf/distro/include/default-providers.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/default-providers.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/default-providers.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/conf/distro/include/default-versions.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/default-versions.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/default-versions.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-versions.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/conf/distro/include/default-distrovars.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/default-distrovars.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/default-distrovars.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/conf/distro/include/maintainers.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/maintainers.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/maintainers.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/conf/distro/include/tcmode-default.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/tcmode-default.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/tcmode-default.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/conf/distro/include/tclibc-musl.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/tclibc-musl.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/tclibc-musl.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/conf/distro/include/uninative-flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/uninative-flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/uninative-flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/uninative-flags.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/conf/distro/include/init-manager-mdev-busybox.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/init-manager-mdev-busybox.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/distro/include/init-manager-mdev-busybox.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/init-manager-mdev-busybox.inc /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/documentation.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/documentation.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/documentation.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/licenses.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/licenses.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/licenses.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/conf/sanity.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/sanity.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/sanity.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/sanity.conf /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/base.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/base.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/patch.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/patch.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/patch.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/terminal.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/terminal.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/terminal.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/staging.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/staging.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/staging.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/mirrors.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/mirrors.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/mirrors.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/utils.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/utils.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/utils.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/utility-tasks.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/utility-tasks.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/utility-tasks.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/metadata_scm.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/metadata_scm.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/metadata_scm.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/logging.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/logging.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/logging.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/sanity-meta-virt.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/sanity-meta-virt.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sanity-meta-virt.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/classes/sanity-meta-virt.bbclass /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/classes/sanity-meta-virt.bbclass /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/classes/sanity-meta-virt.bbclass /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/classes/sanity-meta-virt.bbclass /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/classes/sanity-meta-virt.bbclass /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/classes/sanity-meta-virt.bbclass /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/classes/sanity-meta-virt.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/poky-sanity.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/uninative.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/uninative.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/uninative.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/package_ipk.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/package_ipk.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_ipk.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/package.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/package.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/packagedata.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/packagedata.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/packagedata.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/chrpath.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/chrpath.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/chrpath.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/package_pkgdata.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/package_pkgdata.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_pkgdata.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/insane.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/insane.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/buildstats.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/buildstats.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/buildstats.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/image-mklibs.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/image-mklibs.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/image-mklibs.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/linuxloader.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/linuxloader.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/linuxloader.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/image-prelink.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/image-prelink.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/image-prelink.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/debian.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/debian.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/debian.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/devshell.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/devshell.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/devshell.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/sstate.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/sstate.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/license.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/license.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/license.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/remove-libtool.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/remove-libtool.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/remove-libtool.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/blacklist.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/blacklist.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/blacklist.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/sanity.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/classes/sanity.bbclass /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sanity.bbclass"
#
# $BBINCLUDELOGS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:31
#     [_defaultval] "yes"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:88
#     [doc] "Variable that controls how BitBake displays logs on build failure."
# pre-expansion value:
#   "yes"
BBINCLUDELOGS="yes"
#
# $BBINCLUDELOGS_LINES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:89
#     [doc] "Amount of log lines printed on failure."
#
# $BBLAYERS [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf:23
#     "   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp   /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe   /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python   /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking   /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl   /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems   /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization   /home/epple/projects/ramdisk/tme_usb_token/meta-selinux   /home/epple/projects/ramdisk/tme_usb_token/meta-java   /home/epple/projects/ramdisk/tme_usb_token/meta-trustx   /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel   /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends   "
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:90
#     [doc] "Lists the layers to enable during the build. This variable is defined in the bblayers.conf configuration file."
# pre-expansion value:
#   "   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp   /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe   /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python   /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking   /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl   /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems   /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization   /home/epple/projects/ramdisk/tme_usb_token/meta-selinux   /home/epple/projects/ramdisk/tme_usb_token/meta-java   /home/epple/projects/ramdisk/tme_usb_token/meta-trustx   /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel   /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends   "
BBLAYERS="   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky   /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp   /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe   /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python   /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking   /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl   /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems   /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization   /home/epple/projects/ramdisk/tme_usb_token/meta-selinux   /home/epple/projects/ramdisk/tme_usb_token/meta-java   /home/epple/projects/ramdisk/tme_usb_token/meta-trustx   /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel   /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends   "
#
# $BBLAYERS_CONF_UPDATE_FUNCS [2 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/classes/poky-sanity.bbclass:46
#     "conf/bblayers.conf:POKY_BBLAYERS_CONF_VERSION:REQUIRED_POKY_BBLAYERS_CONF_VERSION:poky_update_bblayersconf"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sanity.bbclass:35
#     "     conf/bblayers.conf:LCONF_VERSION:LAYER_CONF_VERSION:oecore_update_bblayers     conf/local.conf:CONF_VERSION:LOCALCONF_VERSION:oecore_update_localconf     conf/site.conf:SCONF_VERSION:SITE_CONF_VERSION:oecore_update_siteconf "
# pre-expansion value:
#   " conf/bblayers.conf:POKY_BBLAYERS_CONF_VERSION:REQUIRED_POKY_BBLAYERS_CONF_VERSION:poky_update_bblayersconf      conf/bblayers.conf:LCONF_VERSION:LAYER_CONF_VERSION:oecore_update_bblayers     conf/local.conf:CONF_VERSION:LOCALCONF_VERSION:oecore_update_localconf     conf/site.conf:SCONF_VERSION:SITE_CONF_VERSION:oecore_update_siteconf "
BBLAYERS_CONF_UPDATE_FUNCS=" conf/bblayers.conf:POKY_BBLAYERS_CONF_VERSION:REQUIRED_POKY_BBLAYERS_CONF_VERSION:poky_update_bblayersconf      conf/bblayers.conf:LCONF_VERSION:LAYER_CONF_VERSION:oecore_update_bblayers     conf/local.conf:CONF_VERSION:LOCALCONF_VERSION:oecore_update_localconf     conf/site.conf:SCONF_VERSION:SITE_CONF_VERSION:oecore_update_siteconf "
#
# $BBLAYERS_FETCH_DIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:629
#     [_defaultval] "${COREBASE}"
BBLAYERS_FETCH_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky"
#
# $BBLAYERS_LAYERINDEX_NAME_core
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:17
#     "openembedded-core"
BBLAYERS_LAYERINDEX_NAME_core="openembedded-core"
#
# $BBLAYERS_LAYERINDEX_URL
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:628
#     [_defaultval] "https://layers.openembedded.org/layerindex/"
BBLAYERS_LAYERINDEX_URL="https://layers.openembedded.org/layerindex/"
#
# $BBMASK
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:91
#     [doc] "Prevents BitBake from processing specific recipes or recipe append files."
#
# $BBMULTICONFIG
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:288
#     "container installer"
BBMULTICONFIG="container installer"
#
# $BBPATH [29 operations]
#   from env data.py:112 [inheritFromOS]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf:5
#     "${TOPDIR}"
#   postdot /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:2
#     ":${LAYERDIR}"
#   set data_smart.py:966 [expandVarref]
#     "${TOPDIR}:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta"
#   predot /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/layer.conf:2
#     "${LAYERDIR}:"
#   set data_smart.py:966 [expandVarref]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky:${TOPDIR}:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta"
#   postdot /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/layer.conf:2
#     ":${LAYERDIR}"
#   set data_smart.py:966 [expandVarref]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky:${TOPDIR}:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp"
#   postdot /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:12
#     ":${LAYERDIR}"
#   set data_smart.py:966 [expandVarref]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky:${TOPDIR}:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe"
#   postdot /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/layer.conf:2
#     ":${LAYERDIR}"
#   set data_smart.py:966 [expandVarref]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky:${TOPDIR}:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python"
#   postdot /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:2
#     ":${LAYERDIR}"
#   set data_smart.py:966 [expandVarref]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky:${TOPDIR}:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking"
#   postdot /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/layer.conf:2
#     ":${LAYERDIR}"
#   set data_smart.py:966 [expandVarref]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky:${TOPDIR}:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl"
#   postdot /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/layer.conf:2
#     ":${LAYERDIR}"
#   set data_smart.py:966 [expandVarref]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky:${TOPDIR}:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems"
#   postdot /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:2
#     ":${LAYERDIR}"
#   set data_smart.py:966 [expandVarref]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky:${TOPDIR}:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems:/home/epple/projects/ramdisk/tme_usb_token/meta-virtualization"
#   postdot /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/layer.conf:2
#     ":${LAYERDIR}"
#   set data_smart.py:966 [expandVarref]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky:${TOPDIR}:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems:/home/epple/projects/ramdisk/tme_usb_token/meta-virtualization:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux"
#   postdot /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/layer.conf:2
#     ":${LAYERDIR}"
#   set data_smart.py:966 [expandVarref]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky:${TOPDIR}:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems:/home/epple/projects/ramdisk/tme_usb_token/meta-virtualization:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux:/home/epple/projects/ramdisk/tme_usb_token/meta-java"
#   immediate /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/layer.conf:1
#     "${BBPATH}:${LAYERDIR}"
#   immediate /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/layer.conf:1
#     "${BBPATH}:${LAYERDIR}"
#   postdot /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/layer.conf:2
#     ":${LAYERDIR}"
#   set data_smart.py:966 [expandVarref]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems:/home/epple/projects/ramdisk/tme_usb_token/meta-virtualization:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux:/home/epple/projects/ramdisk/tme_usb_token/meta-java:/home/epple/projects/ramdisk/tme_usb_token/meta-trustx:/home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:92
#     [doc] "Used by BitBake to locate .bbclass and configuration files. This variable is analogous to the PATH variable."
# pre-expansion value:
#   "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems:/home/epple/projects/ramdisk/tme_usb_token/meta-virtualization:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux:/home/epple/projects/ramdisk/tme_usb_token/meta-java:/home/epple/projects/ramdisk/tme_usb_token/meta-trustx:/home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends"
BBPATH="/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl:/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems:/home/epple/projects/ramdisk/tme_usb_token/meta-virtualization:/home/epple/projects/ramdisk/tme_usb_token/meta-selinux:/home/epple/projects/ramdisk/tme_usb_token/meta-java:/home/epple/projects/ramdisk/tme_usb_token/meta-trustx:/home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends"
#
# $BBSERVER
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:93
#     [doc] "Points to the server that runs memory-resident BitBake."
#
# $BB_CMDLINE
#   set cooker.py:372 [initConfigurationData]
#     "['/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/bitbake/bin/bitbake', '-e']"
BB_CMDLINE="['/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/bitbake/bin/bitbake', '-e']"
#
# $BB_CONSOLELOG [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:864
#     "${LOG_DIR}/cooker/${MACHINE}/${DATETIME}.log"
#   set cooker.py:370 [initConfigurationData]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/log/cooker/genericx86-64/20200408102023.log"
# pre-expansion value:
#   "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/log/cooker/genericx86-64/20200408102023.log"
BB_CONSOLELOG="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/log/cooker/genericx86-64/20200408102023.log"
#
# $BB_CURRENT_MC
#   set cookerdata.py:334 [parseConfigurationFiles]
#     "default"
BB_CURRENT_MC="default"
#
# $BB_DANGLINGAPPENDS_WARNONLY
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:78
#     [doc] "Defines how BitBake handles situations where an append file (.bbappend) has no corresponding recipe file (.bb)."
#
# $BB_DEFAULT_TASK
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:1
#     "build"
BB_DEFAULT_TASK="build"
#
# $BB_DISKMON_DIRS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:205
#     [_defaultval] "    STOPTASKS,${TMPDIR},1G,100K     STOPTASKS,${DL_DIR},1G,100K     STOPTASKS,${SSTATE_DIR},1G,100K     STOPTASKS,/tmp,100M,100K     ABORT,${TMPDIR},100M,1K     ABORT,${DL_DIR},100M,1K     ABORT,${SSTATE_DIR},100M,1K     ABORT,/tmp,10M,1K"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:79
#     [doc] "Monitors disk space and available inodes during the build and allows you to control the build based on these parameters."
# pre-expansion value:
#   "    STOPTASKS,${TMPDIR},1G,100K     STOPTASKS,${DL_DIR},1G,100K     STOPTASKS,${SSTATE_DIR},1G,100K     STOPTASKS,/tmp,100M,100K     ABORT,${TMPDIR},100M,1K     ABORT,${DL_DIR},100M,1K     ABORT,${SSTATE_DIR},100M,1K     ABORT,/tmp,10M,1K"
BB_DISKMON_DIRS="    STOPTASKS,/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp,1G,100K     STOPTASKS,/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/downloads,1G,100K     STOPTASKS,/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache,1G,100K     STOPTASKS,/tmp,100M,100K     ABORT,/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp,100M,1K     ABORT,/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/downloads,100M,1K     ABORT,/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache,100M,1K     ABORT,/tmp,10M,1K"
#
# $BB_DISKMON_WARNINTERVAL
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:80
#     [doc] "Defines the disk space and free inode warning intervals. To set these intervals, define the variable in the conf/local.conf file in the Build Directory."
#
# $BB_ENV_EXTRAWHITE
#   from env data.py:112 [inheritFromOS]
#     "ALL_PROXY BBPATH_EXTRA BB_NO_NETWORK BB_NUMBER_THREADS BB_SETSCENE_ENFORCE BB_SRCREV_POLICY DISTRO FTPS_PROXY FTP_PROXY GIT_PROXY_COMMAND HTTPS_PROXY HTTP_PROXY MACHINE NO_PROXY PARALLEL_MAKE SCREENDIR SDKMACHINE SOCKS5_PASSWD SOCKS5_USER SSH_AGENT_PID SSH_AUTH_SOCK STAMPS_DIR TCLIBC TCMODE all_proxy ftp_proxy ftps_proxy http_proxy https_proxy no_proxy "
BB_ENV_EXTRAWHITE="ALL_PROXY BBPATH_EXTRA BB_NO_NETWORK BB_NUMBER_THREADS BB_SETSCENE_ENFORCE BB_SRCREV_POLICY DISTRO FTPS_PROXY FTP_PROXY GIT_PROXY_COMMAND HTTPS_PROXY HTTP_PROXY MACHINE NO_PROXY PARALLEL_MAKE SCREENDIR SDKMACHINE SOCKS5_PASSWD SOCKS5_USER SSH_AGENT_PID SSH_AUTH_SOCK STAMPS_DIR TCLIBC TCMODE all_proxy ftp_proxy ftps_proxy http_proxy https_proxy no_proxy "
#
# $BB_GENERATE_MIRROR_TARBALLS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:26
#     [_defaultval] "0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:81
#     [doc] "Causes tarballs of the Git repositories to be placed in the DL_DIR directory."
# pre-expansion value:
#   "0"
BB_GENERATE_MIRROR_TARBALLS="0"
#
# $BB_HASHBASE_WHITELIST
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:876
#     "TMPDIR FILE PATH PWD BB_TASKHASH BBPATH BBSERVER DL_DIR     SSTATE_DIR THISDIR FILESEXTRAPATHS FILE_DIRNAME HOME LOGNAME SHELL TERM     USER FILESPATH STAGING_DIR_HOST STAGING_DIR_TARGET COREBASE PRSERV_HOST     STAMPS_DIR PRSERV_DUMPDIR PRSERV_DUMPFILE PRSERV_LOCKDOWN PARALLEL_MAKE     CCACHE_DIR EXTERNAL_TOOLCHAIN CCACHE CCACHE_NOHASHDIR LICENSE_PATH SDKPKGSUFFIX     WARN_QA ERROR_QA WORKDIR STAMPCLEAN PKGDATA_DIR BUILD_ARCH SSTATE_PKGARCH     BB_WORKERCONTEXT BB_LIMITEDDEPS BB_UNIHASH extend_recipe_sysroot DEPLOY_DIR     SSTATE_HASHEQUIV_METHOD SSTATE_HASHEQUIV_REPORT_TASKDATA     SSTATE_HASHEQUIV_OWNER CCACHE_TOP_DIR BB_HASHSERVE"
BB_HASHBASE_WHITELIST="TMPDIR FILE PATH PWD BB_TASKHASH BBPATH BBSERVER DL_DIR     SSTATE_DIR THISDIR FILESEXTRAPATHS FILE_DIRNAME HOME LOGNAME SHELL TERM     USER FILESPATH STAGING_DIR_HOST STAGING_DIR_TARGET COREBASE PRSERV_HOST     STAMPS_DIR PRSERV_DUMPDIR PRSERV_DUMPFILE PRSERV_LOCKDOWN PARALLEL_MAKE     CCACHE_DIR EXTERNAL_TOOLCHAIN CCACHE CCACHE_NOHASHDIR LICENSE_PATH SDKPKGSUFFIX     WARN_QA ERROR_QA WORKDIR STAMPCLEAN PKGDATA_DIR BUILD_ARCH SSTATE_PKGARCH     BB_WORKERCONTEXT BB_LIMITEDDEPS BB_UNIHASH extend_recipe_sysroot DEPLOY_DIR     SSTATE_HASHEQUIV_METHOD SSTATE_HASHEQUIV_REPORT_TASKDATA     SSTATE_HASHEQUIV_OWNER CCACHE_TOP_DIR BB_HASHSERVE"
#
# $BB_HASHCHECK_FUNCTION
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:819
#     "sstate_checkhashes"
BB_HASHCHECK_FUNCTION="sstate_checkhashes"
#
# $BB_HASHCONFIG_WHITELIST [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:882
#     "${BB_HASHBASE_WHITELIST} DATE TIME SSH_AGENT_PID     SSH_AUTH_SOCK PSEUDO_BUILD BB_ENV_EXTRAWHITE DISABLE_SANITY_CHECKS     PARALLEL_MAKE BB_NUMBER_THREADS BB_ORIGENV BB_INVALIDCONF BBINCLUDED     GIT_PROXY_COMMAND ALL_PROXY all_proxy NO_PROXY no_proxy FTP_PROXY ftp_proxy     HTTP_PROXY http_proxy HTTPS_PROXY https_proxy SOCKS5_USER SOCKS5_PASSWD     BB_SETSCENE_ENFORCE BB_CMDLINE BB_SERVER_TIMEOUT"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/uninative.bbclass:13
#     "NATIVELSBSTRING SSTATEPOSTUNPACKFUNCS BUILD_LDFLAGS"
# pre-expansion value:
#   "${BB_HASHBASE_WHITELIST} DATE TIME SSH_AGENT_PID     SSH_AUTH_SOCK PSEUDO_BUILD BB_ENV_EXTRAWHITE DISABLE_SANITY_CHECKS     PARALLEL_MAKE BB_NUMBER_THREADS BB_ORIGENV BB_INVALIDCONF BBINCLUDED     GIT_PROXY_COMMAND ALL_PROXY all_proxy NO_PROXY no_proxy FTP_PROXY ftp_proxy     HTTP_PROXY http_proxy HTTPS_PROXY https_proxy SOCKS5_USER SOCKS5_PASSWD     BB_SETSCENE_ENFORCE BB_CMDLINE BB_SERVER_TIMEOUT NATIVELSBSTRING SSTATEPOSTUNPACKFUNCS BUILD_LDFLAGS"
BB_HASHCONFIG_WHITELIST="TMPDIR FILE PATH PWD BB_TASKHASH BBPATH BBSERVER DL_DIR     SSTATE_DIR THISDIR FILESEXTRAPATHS FILE_DIRNAME HOME LOGNAME SHELL TERM     USER FILESPATH STAGING_DIR_HOST STAGING_DIR_TARGET COREBASE PRSERV_HOST     STAMPS_DIR PRSERV_DUMPDIR PRSERV_DUMPFILE PRSERV_LOCKDOWN PARALLEL_MAKE     CCACHE_DIR EXTERNAL_TOOLCHAIN CCACHE CCACHE_NOHASHDIR LICENSE_PATH SDKPKGSUFFIX     WARN_QA ERROR_QA WORKDIR STAMPCLEAN PKGDATA_DIR BUILD_ARCH SSTATE_PKGARCH     BB_WORKERCONTEXT BB_LIMITEDDEPS BB_UNIHASH extend_recipe_sysroot DEPLOY_DIR     SSTATE_HASHEQUIV_METHOD SSTATE_HASHEQUIV_REPORT_TASKDATA     SSTATE_HASHEQUIV_OWNER CCACHE_TOP_DIR BB_HASHSERVE DATE TIME SSH_AGENT_PID     SSH_AUTH_SOCK PSEUDO_BUILD BB_ENV_EXTRAWHITE DISABLE_SANITY_CHECKS     PARALLEL_MAKE BB_NUMBER_THREADS BB_ORIGENV BB_INVALIDCONF BBINCLUDED     GIT_PROXY_COMMAND ALL_PROXY all_proxy NO_PROXY no_proxy FTP_PROXY ftp_proxy     HTTP_PROXY http_proxy HTTPS_PROXY https_proxy SOCKS5_USER SOCKS5_PASSWD     BB_SETSCENE_ENFORCE BB_CMDLINE BB_SERVER_TIMEOUT NATIVELSBSTRING SSTATEPOSTUNPACKFUNCS BUILD_LDFLAGS"
#
# $BB_HASHFILENAME
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:49
#     "False ${SSTATE_PKGSPEC} ${SSTATE_SWSPEC}"
BB_HASHFILENAME="False sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3: sstate:defaultpkgname::1.0:r0::3:"
#
# $BB_MIN_VERSION
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/sanity.conf:6
#     "1.43.2"
BB_MIN_VERSION="1.43.2"
#
# $BB_NUMBER_THREADS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:82
#     [doc] "The maximum number of tasks BitBake should run in parallel at any one time. A good rule of thumb is to set this variable to twice the number of cores."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:790
#     "${@oe.utils.cpu_count()}"
# pre-expansion value:
#   "${@oe.utils.cpu_count()}"
BB_NUMBER_THREADS="256"
#
# $BB_ORIGENV
#   set cookerdata.py:262 [__init__]
#     "<bb.data_smart.DataSmart object at 0x7f3fc1d06588>"
BB_ORIGENV="<bb.data_smart.DataSmart object at 0x7f3fc1c33518>"
#
# $BB_SETSCENE_DEPVALID
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:971
#     "setscene_depvalid"
BB_SETSCENE_DEPVALID="setscene_depvalid"
#
# $BB_SIGNATURE_EXCLUDE_FLAGS
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:888
#     "doc deps depends     lockfiles type vardepsexclude vardeps vardepvalue vardepvalueexclude     file-checksums python func task export unexport noexec nostamp dirs cleandirs     sstate-lockfile-shared prefuncs postfuncs export_func deptask rdeptask     recrdeptask nodeprrecs stamp-extra-info sstate-outputdirs filename lineno     progress mcdepends"
BB_SIGNATURE_EXCLUDE_FLAGS="doc deps depends     lockfiles type vardepsexclude vardeps vardepvalue vardepvalueexclude     file-checksums python func task export unexport noexec nostamp dirs cleandirs     sstate-lockfile-shared prefuncs postfuncs export_func deptask rdeptask     recrdeptask nodeprrecs stamp-extra-info sstate-outputdirs filename lineno     progress mcdepends"
#
# $BB_SIGNATURE_HANDLER
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:867
#     "OEBasicHash"
BB_SIGNATURE_HANDLER="OEBasicHash"
#
# $BB_STRICT_CHECKSUM
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:36
#     "1"
BB_STRICT_CHECKSUM="1"
#
# $BB_UNIHASH
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:897
#     "${BB_TASKHASH}"
BB_UNIHASH="\${BB_TASKHASH}"
#
# $BB_VERSION
#   set base.bbclass:236 [base_eventhandler]
#     "1.44.0"
BB_VERSION="1.44.0"
#
# $BINCONFIG_GLOB
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:94
#     [doc] "When inheriting binconfig.bbclass from a recipe, this variable specifies a wildcard for configuration scripts that need editing."
#
# $BINUVERSION
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:21
#     "2.32%"
BINUVERSION="2.32%"
#
# $BP [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:225
#     "${BPN}-${PV}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:95
#     [doc] "The base recipe name and version but without any special recipe name suffix (i.e. -native, lib64-, and so forth). BP is comprised of ${BPN}-${PV}"
# pre-expansion value:
#   "${BPN}-${PV}"
BP="defaultpkgname-1.0"
#
# $BPN [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:224
#     "${@oe.utils.prune_suffix(d.getVar('PN'), d.getVar('SPECIAL_PKGSUFFIX').split(), d)}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:96
#     [doc] "The bare name of the recipe. This variable is a version of the PN variable but removes common suffixes and prefixes."
# pre-expansion value:
#   "${@oe.utils.prune_suffix(d.getVar('PN'), d.getVar('SPECIAL_PKGSUFFIX').split(), d)}"
BPN="defaultpkgname"
#
# $BUGTRACKER
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:97
#     [doc] "Specifies a URL for an upstream bug tracking website for a recipe."
#
# $BUILDCFG_FUNCS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:207
#     [_defaultval] "buildcfg_vars get_layers_branch_rev buildcfg_neededvars"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:208
#     [type] "list"
# pre-expansion value:
#   "buildcfg_vars get_layers_branch_rev buildcfg_neededvars"
BUILDCFG_FUNCS="buildcfg_vars get_layers_branch_rev buildcfg_neededvars"
#
# $BUILDCFG_HEADER
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:703
#     "Build Configuration:"
BUILDCFG_HEADER="Build Configuration:"
#
# $BUILDCFG_NEEDEDVARS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:706
#     "TARGET_ARCH TARGET_OS"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:707
#     [type] "list"
# pre-expansion value:
#   "TARGET_ARCH TARGET_OS"
BUILDCFG_NEEDEDVARS="TARGET_ARCH TARGET_OS"
#
# $BUILDCFG_VARS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:704
#     "BB_VERSION BUILD_SYS NATIVELSBSTRING TARGET_SYS MACHINE DISTRO DISTRO_VERSION TUNE_FEATURES TARGET_FPU"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:705
#     [type] "list"
# pre-expansion value:
#   "BB_VERSION BUILD_SYS NATIVELSBSTRING TARGET_SYS MACHINE DISTRO DISTRO_VERSION TUNE_FEATURES TARGET_FPU"
BUILDCFG_VARS="BB_VERSION BUILD_SYS NATIVELSBSTRING TARGET_SYS MACHINE DISTRO DISTRO_VERSION TUNE_FEATURES TARGET_FPU"
#
# $BUILDDIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:100
#     [doc] "Points to the location of the Build Directory."
#
# $BUILDSDK_CFLAGS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:569
#     "${BUILDSDK_CPPFLAGS} ${BUILD_OPTIMIZATION} ${DEBUG_PREFIX_MAP}"
BUILDSDK_CFLAGS=" -O2 -pipe -fmacro-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot=                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native= "
#
# $BUILDSDK_CPPFLAGS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:564
#     ""
BUILDSDK_CPPFLAGS=""
#
# $BUILDSDK_CXXFLAGS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:574
#     "${BUILDSDK_CFLAGS}"
BUILDSDK_CXXFLAGS=" -O2 -pipe -fmacro-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot=                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native= "
#
# $BUILDSDK_LDFLAGS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:587
#     "-Wl,-O1"
BUILDSDK_LDFLAGS="-Wl,-O1"
#
# $BUILDSTATS_BASE [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:101
#     [doc] "Points to the location of the directory that holds build statistics when you use and enable the buildstats class."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/buildstats.bbclass:1
#     "${TMPDIR}/buildstats/"
# pre-expansion value:
#   "${TMPDIR}/buildstats/"
BUILDSTATS_BASE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/buildstats/"
#
# $BUILD_AR [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:541
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:541
#     "${BUILD_PREFIX}ar"
# pre-expansion value:
#   "${BUILD_PREFIX}ar"
export BUILD_AR="ar"
#
# $BUILD_ARCH [2 operations]
#   immediate /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:98
#     "${@os.uname()[4]}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:98
#     [doc] "The name of the building architecture (e.g. i686)."
# pre-expansion value:
#   "x86_64"
BUILD_ARCH="x86_64"
#
# $BUILD_AS [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:542
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:542
#     "${BUILD_PREFIX}as ${BUILD_AS_ARCH}"
# pre-expansion value:
#   "${BUILD_PREFIX}as ${BUILD_AS_ARCH}"
export BUILD_AS="as "
#
# $BUILD_AS_ARCH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:105
#     ""
BUILD_AS_ARCH=""
#
# $BUILD_CC [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:535
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:535
#     "${CCACHE}${BUILD_PREFIX}gcc ${BUILD_CC_ARCH}"
# pre-expansion value:
#   "${CCACHE}${BUILD_PREFIX}gcc ${BUILD_CC_ARCH}"
export BUILD_CC="gcc "
#
# $BUILD_CCLD [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:540
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:540
#     "${BUILD_PREFIX}gcc ${BUILD_CC_ARCH}"
# pre-expansion value:
#   "${BUILD_PREFIX}gcc ${BUILD_CC_ARCH}"
export BUILD_CCLD="gcc "
#
# $BUILD_CC_ARCH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:103
#     ""
BUILD_CC_ARCH=""
#
# $BUILD_CFLAGS [3 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:568
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:568
#     "${BUILD_CPPFLAGS} ${BUILD_OPTIMIZATION}"
#   _append[pn-binutils-native] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/uninative-flags.inc:7
#     " -pie -fpie"
# pre-expansion value:
#   "${BUILD_CPPFLAGS} ${BUILD_OPTIMIZATION}"
export BUILD_CFLAGS="-isystem/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/include -O2 -pipe"
#
# $BUILD_CPP [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:538
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:538
#     "${BUILD_PREFIX}gcc ${BUILD_CC_ARCH} -E"
# pre-expansion value:
#   "${BUILD_PREFIX}gcc ${BUILD_CC_ARCH} -E"
export BUILD_CPP="gcc  -E"
#
# $BUILD_CPPFLAGS [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:563
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:563
#     "-isystem${STAGING_INCDIR_NATIVE}"
# pre-expansion value:
#   "-isystem${STAGING_INCDIR_NATIVE}"
export BUILD_CPPFLAGS="-isystem/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/include"
#
# $BUILD_CXX [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:536
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:536
#     "${CCACHE}${BUILD_PREFIX}g++ ${BUILD_CC_ARCH}"
# pre-expansion value:
#   "${CCACHE}${BUILD_PREFIX}g++ ${BUILD_CC_ARCH}"
export BUILD_CXX="g++ "
#
# $BUILD_CXXFLAGS [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:573
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:573
#     "${BUILD_CFLAGS}"
# pre-expansion value:
#   "${BUILD_CFLAGS}"
export BUILD_CXXFLAGS="-isystem/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/include -O2 -pipe"
#
# $BUILD_EXEEXT
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:106
#     ""
BUILD_EXEEXT=""
#
# $BUILD_FC [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:537
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:537
#     "${CCACHE}${BUILD_PREFIX}gfortran ${BUILD_CC_ARCH}"
# pre-expansion value:
#   "${CCACHE}${BUILD_PREFIX}gfortran ${BUILD_CC_ARCH}"
export BUILD_FC="gfortran "
#
# $BUILD_LD [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:539
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:539
#     "${BUILD_PREFIX}ld ${BUILD_LD_ARCH}"
# pre-expansion value:
#   "${BUILD_PREFIX}ld ${BUILD_LD_ARCH}"
export BUILD_LD="ld "
#
# $BUILD_LDFLAGS [5 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:585
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:585
#     "-L${STAGING_LIBDIR_NATIVE}                         -L${STAGING_BASE_LIBDIR_NATIVE}                         -Wl,--enable-new-dtags                         -Wl,-rpath-link,${STAGING_LIBDIR_NATIVE}                         -Wl,-rpath-link,${STAGING_BASE_LIBDIR_NATIVE}                         -Wl,-rpath,${STAGING_LIBDIR_NATIVE}                         -Wl,-rpath,${STAGING_BASE_LIBDIR_NATIVE}                         -Wl,-O1"
#   append uninative.bbclass:133 [enable_uninative]
#     " -Wl,--allow-shlib-undefined -Wl,--dynamic-linker=${UNINATIVE_LOADER}"
#   append uninative.bbclass:134 [enable_uninative]
#     [vardepvalueexclude] "| -Wl,--allow-shlib-undefined -Wl,--dynamic-linker=${UNINATIVE_LOADER}"
#   append uninative.bbclass:135 [enable_uninative]
#     [vardepsexclude] "UNINATIVE_LOADER"
# pre-expansion value:
#   "-L${STAGING_LIBDIR_NATIVE}                         -L${STAGING_BASE_LIBDIR_NATIVE}                         -Wl,--enable-new-dtags                         -Wl,-rpath-link,${STAGING_LIBDIR_NATIVE}                         -Wl,-rpath-link,${STAGING_BASE_LIBDIR_NATIVE}                         -Wl,-rpath,${STAGING_LIBDIR_NATIVE}                         -Wl,-rpath,${STAGING_BASE_LIBDIR_NATIVE}                         -Wl,-O1 -Wl,--allow-shlib-undefined -Wl,--dynamic-linker=${UNINATIVE_LOADER}"
export BUILD_LDFLAGS="-L/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/lib                         -L/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/lib                         -Wl,--enable-new-dtags                         -Wl,-rpath-link,/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/lib                         -Wl,-rpath-link,/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/lib                         -Wl,-rpath,/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/lib                         -Wl,-rpath,/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/lib                         -Wl,-O1 -Wl,--allow-shlib-undefined -Wl,--dynamic-linker=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/sysroots-uninative/x86_64-linux/lib/ld-linux-x86-64.so.2"
#
# $BUILD_LD_ARCH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:104
#     ""
BUILD_LD_ARCH=""
#
# $BUILD_NM [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:545
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:545
#     "${BUILD_PREFIX}nm"
# pre-expansion value:
#   "${BUILD_PREFIX}nm"
export BUILD_NM="nm"
#
# $BUILD_OPTIMIZATION [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:622
#     "${@oe.utils.vartrue('DEBUG_BUILD', '-Og -g -feliminate-unused-debug-types', '-O2', d)} -pipe"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:623
#     [vardeps] "DEBUG_BUILD"
# pre-expansion value:
#   "${@oe.utils.vartrue('DEBUG_BUILD', '-Og -g -feliminate-unused-debug-types', '-O2', d)} -pipe"
BUILD_OPTIMIZATION="-O2 -pipe"
#
# $BUILD_OS [2 operations]
#   immediate /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:99
#     "${@os.uname()[0].lower()}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:99
#     [doc] "The operating system (in lower case) of the building architecture (e.g. linux)."
# pre-expansion value:
#   "linux"
BUILD_OS="linux"
#
# $BUILD_PREFIX
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:102
#     ""
BUILD_PREFIX=""
#
# $BUILD_RANLIB [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:543
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:543
#     "${BUILD_PREFIX}ranlib"
# pre-expansion value:
#   "${BUILD_PREFIX}ranlib"
export BUILD_RANLIB="ranlib"
#
# $BUILD_STRIP [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:544
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:544
#     "${BUILD_PREFIX}strip"
# pre-expansion value:
#   "${BUILD_PREFIX}strip"
export BUILD_STRIP="strip"
#
# $BUILD_SYS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:101
#     "${BUILD_ARCH}${BUILD_VENDOR}-${BUILD_OS}"
BUILD_SYS="x86_64-linux"
#
# $BUILD_VENDOR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:100
#     ""
BUILD_VENDOR=""
#
# $BUSYBOX_SPLIT_SUID
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:102
#     [doc] "For the BusyBox recipe, specifies whether to split the output executable file into two parts: one for features that require setuid root, and one for the remaining features."
#
# $CACHE [4 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:359
#     "${TMPDIR}/cache${@['', '/' + str(d.getVar('MACHINE'))][bool(d.getVar('MACHINE'))]}${@['', '/' + str(d.getVar('SDKMACHINE'))][bool(d.getVar('SDKMACHINE'))]}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf:18
#     "${TMPDIR}/cache/${TCMODE}-${TCLIBC}${@['', '/' + str(d.getVar('MACHINE'))][bool(d.getVar('MACHINE'))]}${@['', '/' + str(d.getVar('SDKMACHINE'))][bool(d.getVar('SDKMACHINE'))]}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:106
#     [doc] "The directory holding the cache of the metadata."
#   immediate /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:787
#     "${CACHE}"
# pre-expansion value:
#   "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/cache/default-musl/genericx86-64/x86_64"
CACHE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/cache/default-musl/genericx86-64/x86_64"
#
# $CC [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:518
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:518
#     "${CCACHE}${HOST_PREFIX}gcc ${HOST_CC_ARCH}${TOOLCHAIN_OPTIONS}"
# pre-expansion value:
#   "${CCACHE}${HOST_PREFIX}gcc ${HOST_CC_ARCH}${TOOLCHAIN_OPTIONS}"
export CC="x86_64-poky-linux-musl-gcc  -m64 -march=core2 -mtune=core2 -msse3 -mfpmath=sse -fstack-protector-strong  -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot"
#
# $CCACHE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:514
#     [_defaultval] ""
CCACHE=""
#
# $CCLD [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:523
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:523
#     "${CC}"
# pre-expansion value:
#   "${CC}"
export CCLD="x86_64-poky-linux-musl-gcc  -m64 -march=core2 -mtune=core2 -msse3 -mfpmath=sse -fstack-protector-strong  -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot"
#
# $CFLAGS [3 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:570
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:570
#     "${TARGET_CFLAGS}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:107
#     [doc] "Flags passed to the C compiler for the target system. This variable evaluates to the same as TARGET_CFLAGS."
# pre-expansion value:
#   "${TARGET_CFLAGS}"
export CFLAGS=" -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot=                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native= "
#
# $CHRPATH_BIN
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/chrpath.bbclass:1
#     "chrpath"
CHRPATH_BIN="chrpath"
#
# $CLASSOVERRIDE [3 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:739
#     "class-target"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:108
#     [doc] "An internal variable specifying the special class override that should currently apply (e.g. "class-target", "class-native", and so forth)."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:2
#     "class-target"
# pre-expansion value:
#   "class-target"
CLASSOVERRIDE="class-target"
#
# $CLEANBROKEN [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:109
#     [doc] "Specifies if 'make clean' does not work for a recipe (and therefore the build system should not try to use it during do_configure)"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:303
#     "0"
# pre-expansion value:
#   "0"
CLEANBROKEN="0"
#
# $CLEANFUNCS [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/utility-tasks.bbclass:20
#     ""
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:537
#     "sstate_cleanall"
# pre-expansion value:
#   " sstate_cleanall"
CLEANFUNCS=" sstate_cleanall"
#
# $COMBINED_FEATURES [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:110
#     [doc] "A set of features common between MACHINE_FEATURES and DISTRO_FEATURES."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:833
#     "${@oe.utils.set_intersect('DISTRO_FEATURES', 'MACHINE_FEATURES', d)}"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:834
#     [vardeps] "DISTRO_FEATURES MACHINE_FEATURES"
# pre-expansion value:
#   "${@oe.utils.set_intersect('DISTRO_FEATURES', 'MACHINE_FEATURES', d)}"
COMBINED_FEATURES="usbhost pci"
#
# $COMMERCIAL_AUDIO_PLUGINS
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:19
#     ""
COMMERCIAL_AUDIO_PLUGINS=""
#
# $COMMERCIAL_VIDEO_PLUGINS
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:21
#     ""
COMMERCIAL_VIDEO_PLUGINS=""
#
# $COMMON_LICENSE_DIR [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:24
#     [_defaultval] "${COREBASE}/meta/files/common-licenses"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:111
#     [doc] "Points to meta/files/common-licenses in the Source Directory, which is where generic license files reside."
# pre-expansion value:
#   "${COREBASE}/meta/files/common-licenses"
COMMON_LICENSE_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/files/common-licenses"
#
# $COMPATIBLE_HOST
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:112
#     [doc] "A regular expression that resolves to one or more hosts (when the recipe is native) or one or more targets (when the recipe is non-native) with which a recipe is compatible."
#
# $COMPATIBLE_MACHINE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:113
#     [doc] "A regular expression that resolves to one or more target machines with which a recipe is compatible."
#
# $COMPLEMENTARY_GLOB
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:114
#     [doc] "Defines wildcards to match when installing a list of complementary packages for all the packages installed in an image."
#
# $COMPONENTS_DIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:375
#     "${STAGING_DIR}-components"
COMPONENTS_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/sysroots-components"
#
# $CONFFILES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:115
#     [doc] "Identifies editable or configurable files that are part of a package."
#
# $CONFIGURESTAMPFILE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:302
#     "${WORKDIR}/configure.sstate"
CONFIGURESTAMPFILE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/configure.sstate"
#
# $CONFIG_SITE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:116
#     [doc] "A list of files that contains autoconf test results relevant to the current build. This variable is used by the Autotools utilities when running configure."
#
# $CONFLICT_DISTRO_FEATURES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:117
#     [doc] "When a recipe inherits the distro_features_check class, this variable identifies distribution features that would be in conflict should the recipe be built."
#
# $CONF_VERSION [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:268
#     "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:120
#     [doc] "Tracks the version of local.conf.  Increased each time build/conf/ changes incompatibly."
# pre-expansion value:
#   "1"
CONF_VERSION="1"
#
# $CONNECTIVITY_CHECK_URIS
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:51
#     "https://www.example.com/"
CONNECTIVITY_CHECK_URIS="https://www.example.com/"
#
# $COREBASE [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:20
#     "${@os.path.normpath("${LAYERDIR}/../")}"
#   set data_smart.py:966 [expandVarref]
#     "${@os.path.normpath("/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/../")}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:119
#     [doc] "Specifies the parent directory of the OpenEmbedded Core Metadata layer (i.e. meta)."
# pre-expansion value:
#   "${@os.path.normpath("/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/../")}"
COREBASE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky"
#
# $CORE_IMAGE_EXTRA_INSTALL
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:118
#     [doc] "Specifies the list of packages to be added to the image. You should only set this variable in the conf/local.conf file in the Build Directory."
#
# $CPAN_MIRROR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:649
#     "https://search.cpan.org/CPAN"
CPAN_MIRROR="https://search.cpan.org/CPAN"
#
# $CPP [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:521
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:521
#     "${HOST_PREFIX}gcc -E${TOOLCHAIN_OPTIONS} ${HOST_CC_ARCH}"
# pre-expansion value:
#   "${HOST_PREFIX}gcc -E${TOOLCHAIN_OPTIONS} ${HOST_CC_ARCH}"
export CPP="x86_64-poky-linux-musl-gcc -E --sysroot=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot  -m64 -march=core2 -mtune=core2 -msse3 -mfpmath=sse -fstack-protector-strong  -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security"
#
# $CPPFLAGS [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:565
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:565
#     "${TARGET_CPPFLAGS}"
# pre-expansion value:
#   "${TARGET_CPPFLAGS}"
export CPPFLAGS=""
#
# $CVSDIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:121
#     [doc] "The directory where cvs checkouts will be stored in."
#
# $CXX [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:519
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:519
#     "${CCACHE}${HOST_PREFIX}g++ ${HOST_CC_ARCH}${TOOLCHAIN_OPTIONS}"
# pre-expansion value:
#   "${CCACHE}${HOST_PREFIX}g++ ${HOST_CC_ARCH}${TOOLCHAIN_OPTIONS}"
export CXX="x86_64-poky-linux-musl-g++  -m64 -march=core2 -mtune=core2 -msse3 -mfpmath=sse -fstack-protector-strong  -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot"
#
# $CXXFLAGS [3 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:575
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:575
#     "${TARGET_CXXFLAGS}"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:20
#     "-fvisibility-inlines-hidden"
# pre-expansion value:
#   "${TARGET_CXXFLAGS} -fvisibility-inlines-hidden"
export CXXFLAGS=" -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot=                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native=  -fvisibility-inlines-hidden"
#
# $D [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:370
#     "${WORKDIR}/image"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:125
#     [doc] "The destination directory."
# pre-expansion value:
#   "${WORKDIR}/image"
D="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/image"
#
# $DATA_LICENSE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:93
#     "CC0-1.0"
DATA_LICENSE="CC0-1.0"
#
# $DATE [2 operations]
#   immediate /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:164
#     "${@time.strftime('%Y%m%d',time.gmtime())}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:126
#     [doc] "The date the build was started using YMD format."
# pre-expansion value:
#   "20200408"
DATE="20200408"
#
# $DATETIME [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:166
#     "${DATE}${TIME}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:127
#     [doc] "The date and time the build was started."
# pre-expansion value:
#   "${DATE}${TIME}"
DATETIME="20200408102023"
#
# $DEBIANRDEP
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/debian.bbclass:16
#     "do_packagedata"
DEBIANRDEP="do_packagedata"
#
# $DEBIAN_MIRROR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:636
#     "http://ftp.debian.org/debian/pool"
DEBIAN_MIRROR="http://ftp.debian.org/debian/pool"
#
# $DEBIAN_NAMES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/debian.bbclass:146
#     "1"
DEBIAN_NAMES="1"
#
# $DEBUG_BUILD
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:128
#     [doc] "Specifies to build packages with debugging information. This influences the value of the SELECTED_OPTIMIZATION variable."
#
# $DEBUG_FLAGS
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:615
#     "-g -feliminate-unused-debug-types ${DEBUG_PREFIX_MAP}"
DEBUG_FLAGS="-g -feliminate-unused-debug-types -fmacro-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot=                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native= "
#
# $DEBUG_OPTIMIZATION [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:619
#     "-Og ${DEBUG_FLAGS} -pipe"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:129
#     [doc] "The options to pass in TARGET_CFLAGS and CFLAGS when compiling a system for debugging. This variable defaults to '-Og ${DEBUG_FLAGS} -pipe'."
# pre-expansion value:
#   "-Og ${DEBUG_FLAGS} -pipe"
DEBUG_OPTIMIZATION="-Og -g -feliminate-unused-debug-types -fmacro-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot=                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native=  -pipe"
#
# $DEBUG_PREFIX_MAP
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:614
#     "-fmacro-prefix-map=${WORKDIR}=/usr/src/debug/${PN}/${EXTENDPE}${PV}-${PR}                      -fdebug-prefix-map=${WORKDIR}=/usr/src/debug/${PN}/${EXTENDPE}${PV}-${PR}                      -fdebug-prefix-map=${STAGING_DIR_HOST}=                      -fdebug-prefix-map=${STAGING_DIR_NATIVE}= "
DEBUG_PREFIX_MAP="-fmacro-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot=                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native= "
#
# $DEFAULTTUNE [5 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/genericx86-64.conf:5
#     "core2-64"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:9
#     "core2-32"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i686.inc:10
#     "i686"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i586.inc:1
#     "i586"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:5
#     "x86"
# pre-expansion value:
#   "core2-64"
DEFAULTTUNE="core2-64"
#
# $DEFAULT_PREFERENCE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:130
#     [doc] "Specifies a weak bias for recipe selection priority."
#
# $DEFAULT_TASK_PROVIDER
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:777
#     "packagegroup-base"
DEFAULT_TASK_PROVIDER="packagegroup-base"
#
# $DEFAULT_TEST_SUITES_pn-meta-oe-ptest-image
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:86
#     " ${PTESTTESTSUITE}"
DEFAULT_TEST_SUITES_pn-meta-oe-ptest-image=" \${PTESTTESTSUITE}"
#
# $DEPCHAIN_POST
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:270
#     "-dev -dbg"
DEPCHAIN_POST="-dev -dbg"
#
# $DEPCHAIN_PRE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:269
#     ""
DEPCHAIN_PRE=""
#
# $DEPENDS [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:272
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:131
#     [doc] "Lists a recipe's build-time dependencies (i.e. other recipe files)."
#   _prepend /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:80
#     "${BASEDEPENDS} "
# pre-expansion value:
#   "${BASEDEPENDS} "
DEPENDS="virtual/x86_64-poky-linux-musl-gcc virtual/x86_64-poky-linux-musl-compilerlibs virtual/libc "
#
# $DEPLOYDIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:134
#     [doc] "For recipes that inherit the deploy class, the DEPLOYDIR points to a temporary work area for deployed files."
#
# $DEPLOY_DIR [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:406
#     "${TMPDIR}/deploy"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:132
#     [doc] "Points to the general area that the OpenEmbedded build system uses to place images, packages, SDKs and other output files that are ready to be used outside of the build system."
# pre-expansion value:
#   "${TMPDIR}/deploy"
DEPLOY_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy"
#
# $DEPLOY_DIR_DEB
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:410
#     "${DEPLOY_DIR}/deb"
DEPLOY_DIR_DEB="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/deb"
#
# $DEPLOY_DIR_IMAGE [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:411
#     "${DEPLOY_DIR}/images/${MACHINE}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:133
#     [doc] "Points to the area that the OpenEmbedded build system uses to place images and other associated output files that are ready to be deployed onto the target machine."
# pre-expansion value:
#   "${DEPLOY_DIR}/images/${MACHINE}"
DEPLOY_DIR_IMAGE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/images/genericx86-64"
#
# $DEPLOY_DIR_IPK
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:408
#     "${DEPLOY_DIR}/ipk"
DEPLOY_DIR_IPK="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/ipk"
#
# $DEPLOY_DIR_RPM
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:409
#     "${DEPLOY_DIR}/rpm"
DEPLOY_DIR_RPM="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/rpm"
#
# $DEPLOY_DIR_TAR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:407
#     "${DEPLOY_DIR}/tar"
DEPLOY_DIR_TAR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/tar"
#
# $DEPLOY_DIR_TOOLS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:412
#     "${DEPLOY_DIR}/tools"
DEPLOY_DIR_TOOLS="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/tools"
#
# $DESCRIPTION [12 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:232
#     "${SUMMARY}."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:135
#     [doc] "The package description used by package managers. If not set, DESCRIPTION takes the value of the SUMMARY variable."
#   override[defaultpkgname-dbg]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:246
#     "${DESCRIPTION}  This package contains ELF symbols and related sources for debugging purposes."
#   override[defaultpkgname-dbg]:rename from DESCRIPTION_${PN}-dbg data.py:104 [expandKeys]
#     "${DESCRIPTION}  This package contains ELF symbols and related sources for debugging purposes."
#   override[defaultpkgname-dev]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:251
#     "${DESCRIPTION}  This package contains symbolic links, header files, and related items necessary for software development."
#   override[defaultpkgname-dev]:rename from DESCRIPTION_${PN}-dev data.py:104 [expandKeys]
#     "${DESCRIPTION}  This package contains symbolic links, header files, and related items necessary for software development."
#   override[defaultpkgname-doc]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:259
#     "${DESCRIPTION}  This package contains documentation."
#   override[defaultpkgname-doc]:rename from DESCRIPTION_${PN}-doc data.py:104 [expandKeys]
#     "${DESCRIPTION}  This package contains documentation."
#   override[defaultpkgname-src]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:242
#     "${DESCRIPTION}  This package contains sources for debugging purposes."
#   override[defaultpkgname-src]:rename from DESCRIPTION_${PN}-src data.py:104 [expandKeys]
#     "${DESCRIPTION}  This package contains sources for debugging purposes."
#   override[defaultpkgname-staticdev]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:255
#     "${DESCRIPTION}  This package contains static libraries for software development."
#   override[defaultpkgname-staticdev]:rename from DESCRIPTION_${PN}-staticdev data.py:104 [expandKeys]
#     "${DESCRIPTION}  This package contains static libraries for software development."
# pre-expansion value:
#   "${SUMMARY}."
DESCRIPTION="defaultpkgname version 1.0-r0."
#
# $DESCRIPTION_defaultpkgname-dbg [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:246
#     "${DESCRIPTION}  This package contains ELF symbols and related sources for debugging purposes."
#   rename from DESCRIPTION_${PN}-dbg data.py:104 [expandKeys]
#     "${DESCRIPTION}  This package contains ELF symbols and related sources for debugging purposes."
# pre-expansion value:
#   "${DESCRIPTION}  This package contains ELF symbols and related sources for debugging purposes."
DESCRIPTION_defaultpkgname-dbg="defaultpkgname version 1.0-r0.  This package contains ELF symbols and related sources for debugging purposes."
#
# $DESCRIPTION_defaultpkgname-dev [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:251
#     "${DESCRIPTION}  This package contains symbolic links, header files, and related items necessary for software development."
#   rename from DESCRIPTION_${PN}-dev data.py:104 [expandKeys]
#     "${DESCRIPTION}  This package contains symbolic links, header files, and related items necessary for software development."
# pre-expansion value:
#   "${DESCRIPTION}  This package contains symbolic links, header files, and related items necessary for software development."
DESCRIPTION_defaultpkgname-dev="defaultpkgname version 1.0-r0.  This package contains symbolic links, header files, and related items necessary for software development."
#
# $DESCRIPTION_defaultpkgname-doc [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:259
#     "${DESCRIPTION}  This package contains documentation."
#   rename from DESCRIPTION_${PN}-doc data.py:104 [expandKeys]
#     "${DESCRIPTION}  This package contains documentation."
# pre-expansion value:
#   "${DESCRIPTION}  This package contains documentation."
DESCRIPTION_defaultpkgname-doc="defaultpkgname version 1.0-r0.  This package contains documentation."
#
# $DESCRIPTION_defaultpkgname-src [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:242
#     "${DESCRIPTION}  This package contains sources for debugging purposes."
#   rename from DESCRIPTION_${PN}-src data.py:104 [expandKeys]
#     "${DESCRIPTION}  This package contains sources for debugging purposes."
# pre-expansion value:
#   "${DESCRIPTION}  This package contains sources for debugging purposes."
DESCRIPTION_defaultpkgname-src="defaultpkgname version 1.0-r0.  This package contains sources for debugging purposes."
#
# $DESCRIPTION_defaultpkgname-staticdev [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:255
#     "${DESCRIPTION}  This package contains static libraries for software development."
#   rename from DESCRIPTION_${PN}-staticdev data.py:104 [expandKeys]
#     "${DESCRIPTION}  This package contains static libraries for software development."
# pre-expansion value:
#   "${DESCRIPTION}  This package contains static libraries for software development."
DESCRIPTION_defaultpkgname-staticdev="defaultpkgname version 1.0-r0.  This package contains static libraries for software development."
#
# $DEVSHELL
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/devshell.bbclass:3
#     "${SHELL}"
DEVSHELL="/bin/bash"
#
# $DEVSHELL_STARTDIR
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/devshell.bbclass:21
#     "${S}"
DEVSHELL_STARTDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/defaultpkgname-1.0"
#
# $DISABLE_STATIC [18 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:1
#     " --disable-static"
#   override[pn-qemu]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:4
#     ""
#   override[pn-qemu-native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:5
#     ""
#   override[pn-nativesdk-qemu]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:6
#     ""
#   override[pn-qemu-system-native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:7
#     ""
#   override[pn-pciutils]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:9
#     ""
#   override[pn-libcap]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:11
#     ""
#   override[pn-libcap-native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:12
#     ""
#   override[pn-nativesdk-libcap]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:13
#     ""
#   override[pn-libpcap]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:15
#     ""
#   override[pn-readline]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:17
#     ""
#   override[pn-sgml-common-native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:19
#     ""
#   override[pn-openjade-native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:20
#     ""
#   override[pn-openssl]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:22
#     ""
#   override[pn-openssl-native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:23
#     ""
#   override[pn-nativesdk-openssl]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:24
#     ""
#   override[pn-gcc-runtime]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:26
#     ""
#   override[pn-libusb1-native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:28
#     ""
# pre-expansion value:
#   " --disable-static"
DISABLE_STATIC=" --disable-static"
#
# $DISABLE_STATIC_pn-gcc-runtime
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:26
#     ""
DISABLE_STATIC_pn-gcc-runtime=""
#
# $DISABLE_STATIC_pn-libcap
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:11
#     ""
DISABLE_STATIC_pn-libcap=""
#
# $DISABLE_STATIC_pn-libcap-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:12
#     ""
DISABLE_STATIC_pn-libcap-native=""
#
# $DISABLE_STATIC_pn-libpcap
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:15
#     ""
DISABLE_STATIC_pn-libpcap=""
#
# $DISABLE_STATIC_pn-libusb1-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:28
#     ""
DISABLE_STATIC_pn-libusb1-native=""
#
# $DISABLE_STATIC_pn-nativesdk-libcap
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:13
#     ""
DISABLE_STATIC_pn-nativesdk-libcap=""
#
# $DISABLE_STATIC_pn-nativesdk-openssl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:24
#     ""
DISABLE_STATIC_pn-nativesdk-openssl=""
#
# $DISABLE_STATIC_pn-nativesdk-qemu
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:6
#     ""
DISABLE_STATIC_pn-nativesdk-qemu=""
#
# $DISABLE_STATIC_pn-openjade-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:20
#     ""
DISABLE_STATIC_pn-openjade-native=""
#
# $DISABLE_STATIC_pn-openssl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:22
#     ""
DISABLE_STATIC_pn-openssl=""
#
# $DISABLE_STATIC_pn-openssl-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:23
#     ""
DISABLE_STATIC_pn-openssl-native=""
#
# $DISABLE_STATIC_pn-pciutils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:9
#     ""
DISABLE_STATIC_pn-pciutils=""
#
# $DISABLE_STATIC_pn-qemu
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:4
#     ""
DISABLE_STATIC_pn-qemu=""
#
# $DISABLE_STATIC_pn-qemu-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:5
#     ""
DISABLE_STATIC_pn-qemu-native=""
#
# $DISABLE_STATIC_pn-qemu-system-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:7
#     ""
DISABLE_STATIC_pn-qemu-system-native=""
#
# $DISABLE_STATIC_pn-readline
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:17
#     ""
DISABLE_STATIC_pn-readline=""
#
# $DISABLE_STATIC_pn-sgml-common-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:19
#     ""
DISABLE_STATIC_pn-sgml-common-native=""
#
# $DISTRO [7 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:725
#     [_defaultval] "nodistro"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:89
#     "poky"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:274
#     "poky-tiny"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:1
#     "poky"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:32
#     "poky-tiny"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:136
#     [doc] "The short name of the distribution. If the variable is blank, meta/conf/distro/defaultsetup.conf will be used."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:853
#     [unexport] "1"
# pre-expansion value:
#   "poky-tiny"
unset DISTRO
#
# $DISTROOVERRIDES [3 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:740
#     "${@d.getVar('DISTRO') or ''}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:33
#     "poky:poky-tiny"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:145
#     [doc] "Lists overrides specific to the current distribution. By default, the variable list includes the value of the DISTRO variable."
# pre-expansion value:
#   "poky:poky-tiny"
DISTROOVERRIDES="poky:poky-tiny"
#
# $DISTRO_CODENAME
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:4
#     "zeus"
DISTRO_CODENAME="zeus"
#
# $DISTRO_EXTRA_RDEPENDS [9 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:29
#     " ${POKY_DEFAULT_EXTRA_RDEPENDS}"
#   _append[qemuarm] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:33
#     " ${POKYQEMUDEPS}"
#   _append[qemuarm64] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:34
#     " ${POKYQEMUDEPS}"
#   _append[qemumips] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:35
#     " ${POKYQEMUDEPS}"
#   _append[qemuppc] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:36
#     " ${POKYQEMUDEPS}"
#   _append[qemux86] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:37
#     " ${POKYQEMUDEPS}"
#   _append[qemux86-64] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:38
#     " ${POKYQEMUDEPS}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:137
#     [doc] "Specifies a list of distro-specific packages to add to all images. The variable only applies to the images that include packagegroup-base."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:810
#     ""
# pre-expansion value:
#   "  ${POKY_DEFAULT_EXTRA_RDEPENDS}"
DISTRO_EXTRA_RDEPENDS="  packagegroup-core-boot"
#
# $DISTRO_EXTRA_RRECOMMENDS [3 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:30
#     " ${POKY_DEFAULT_EXTRA_RRECOMMENDS}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:138
#     [doc] "Specifies a list of distro-specific packages to add to all images if the packages exist. The list of packages are automatically installed but you can remove them."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:811
#     ""
# pre-expansion value:
#   "  ${POKY_DEFAULT_EXTRA_RRECOMMENDS}"
DISTRO_EXTRA_RRECOMMENDS="  "
#
# $DISTRO_FEATURES [11 operations]
#   _append /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:269
#     " virtualization"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:22
#     "${DISTRO_FEATURES_DEFAULT} ${POKY_DEFAULT_DISTRO_FEATURES}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:75
#     "${DISTRO_FEATURES_TINY}                    ${DISTRO_FEATURES_NET}                    ${DISTRO_FEATURES_USB}                    ${DISTRO_FEATURES_USBGADGET}                    ${DISTRO_FEATURES_WIFI}                   "
#   _append[libc-uclibc] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:78
#     " largefile"
#   _append[libc-musl] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:79
#     " largefile"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:14
#     "${DISTRO_FEATURES_DEFAULT}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:139
#     [doc] "The features enabled for the distribution."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:808
#     ""
#   append utils.py:129 [features_backfill]
#     " pulseaudio gobject-introspection-data"
#   override[class-native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:81
#     "${DISTRO_FEATURES_DEFAULT} ${POKY_DEFAULT_DISTRO_FEATURES}"
#   override[class-nativesdk]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:82
#     "${DISTRO_FEATURES_DEFAULT} ${POKY_DEFAULT_DISTRO_FEATURES}"
# pre-expansion value:
#   "${DISTRO_FEATURES_TINY}                    ${DISTRO_FEATURES_NET}                    ${DISTRO_FEATURES_USB}                    ${DISTRO_FEATURES_USBGADGET}                    ${DISTRO_FEATURES_WIFI}                    virtualization largefile pulseaudio gobject-introspection-data"
DISTRO_FEATURES="pci                    ipv4 ipv6                    usbhost                    \${DISTRO_FEATURES_USBGADGET}                    \${DISTRO_FEATURES_WIFI}                    virtualization largefile pulseaudio gobject-introspection-data"
#
# $DISTRO_FEATURES_BACKFILL [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:140
#     [doc] "Features to be added to DISTRO_FEATURES if not also present in DISTRO_FEATURES_BACKFILL_CONSIDERED. This variable is set in the meta/conf/bitbake.conf file and it is not intended to be user-configurable."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:830
#     "pulseaudio sysvinit gobject-introspection-data ldconfig"
# pre-expansion value:
#   "pulseaudio sysvinit gobject-introspection-data ldconfig"
DISTRO_FEATURES_BACKFILL="pulseaudio sysvinit gobject-introspection-data ldconfig"
#
# $DISTRO_FEATURES_BACKFILL_CONSIDERED [3 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:16
#     "ldconfig"
#   _append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/init-manager-mdev-busybox.inc:2
#     " systemd sysvinit"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:141
#     [doc] "Features from DISTRO_FEATURES_BACKFILL that should not be backfilled (i.e. added to DISTRO_FEATURES) during the build."
# pre-expansion value:
#   " ldconfig systemd sysvinit"
DISTRO_FEATURES_BACKFILL_CONSIDERED=" ldconfig systemd sysvinit"
#
# $DISTRO_FEATURES_DEFAULT
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:13
#     "acl alsa argp bluetooth ext2 ipv4 ipv6 largefile pcmcia usbgadget usbhost wifi xattr nfs zeroconf pci 3g nfc x11"
DISTRO_FEATURES_DEFAULT="acl alsa argp bluetooth ext2 ipv4 ipv6 largefile pcmcia usbgadget usbhost wifi xattr nfs zeroconf pci 3g nfc x11"
#
# $DISTRO_FEATURES_FILTER_NATIVE
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:827
#     "api-documentation"
DISTRO_FEATURES_FILTER_NATIVE="api-documentation"
#
# $DISTRO_FEATURES_FILTER_NATIVESDK
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:828
#     "api-documentation"
DISTRO_FEATURES_FILTER_NATIVESDK="api-documentation"
#
# $DISTRO_FEATURES_NATIVE
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:822
#     "x11 ipv6 xattr"
DISTRO_FEATURES_NATIVE="x11 ipv6 xattr"
#
# $DISTRO_FEATURES_NATIVESDK
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:823
#     "x11"
DISTRO_FEATURES_NATIVESDK="x11"
#
# $DISTRO_FEATURES_NET
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:65
#     "ipv4 ipv6"
DISTRO_FEATURES_NET="ipv4 ipv6"
#
# $DISTRO_FEATURES_TINY
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:64
#     "pci"
DISTRO_FEATURES_TINY="pci"
#
# $DISTRO_FEATURES_USB
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:66
#     "usbhost"
DISTRO_FEATURES_USB="usbhost"
#
# $DISTRO_FEATURES_class-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:81
#     "${DISTRO_FEATURES_DEFAULT} ${POKY_DEFAULT_DISTRO_FEATURES}"
DISTRO_FEATURES_class-native="acl alsa argp bluetooth ext2 ipv4 ipv6 largefile pcmcia usbgadget usbhost wifi xattr nfs zeroconf pci 3g nfc x11 largefile opengl ptest multiarch wayland vulkan"
#
# $DISTRO_FEATURES_class-nativesdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:82
#     "${DISTRO_FEATURES_DEFAULT} ${POKY_DEFAULT_DISTRO_FEATURES}"
DISTRO_FEATURES_class-nativesdk="acl alsa argp bluetooth ext2 ipv4 ipv6 largefile pcmcia usbgadget usbhost wifi xattr nfs zeroconf pci 3g nfc x11 largefile opengl ptest multiarch wayland vulkan"
#
# $DISTRO_NAME [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:726
#     [_defaultval] "OpenEmbedded"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:2
#     "Poky (Yocto Project Reference Distro)"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:142
#     [doc] "The long name of the distribution."
# pre-expansion value:
#   "Poky (Yocto Project Reference Distro)"
DISTRO_NAME="Poky (Yocto Project Reference Distro)"
#
# $DISTRO_PN_ALIAS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:143
#     [doc] "Alias names used for the recipe in various Linux distributions."
#
# $DISTRO_VERSION [4 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:3
#     "3.0.2"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:14
#     [vardepsexclude] "DATE"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:33
#     [_defaultval] "nodistro.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:144
#     [doc] "The version of the distribution."
# pre-expansion value:
#   "3.0.2"
DISTRO_VERSION="3.0.2"
#
# $DL_DIR [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:146
#     [doc] "The central download directory used by the build process to store downloads. By default, the directory is 'downloads' in the Build Directory."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:766
#     "${TOPDIR}/downloads"
# pre-expansion value:
#   "${TOPDIR}/downloads"
DL_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/downloads"
#
# $ENABLE_BINARY_LOCALE_GENERATION [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:8
#     "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:150
#     [doc] "Controls which locales for glibc are generated during the build. The variable is useful if the target device has 64Mbytes of RAM or less."
# pre-expansion value:
#   "1"
ENABLE_BINARY_LOCALE_GENERATION="1"
#
# $ENABLE_WIDEC [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:54
#     "false"
#   override[class-native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:55
#     "true"
# pre-expansion value:
#   "false"
ENABLE_WIDEC="false"
#
# $ENABLE_WIDEC_class-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:55
#     "true"
ENABLE_WIDEC_class-native="true"
#
# $ERROR_QA [4 operations]
#   _append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:83
#     " ${WARN_TO_ERROR_QA}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:151
#     [doc] "Specifies the quality assurance checks whose failures are reported as errors by the OpenEmbedded build system."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:38
#     "dev-so debug-deps dev-deps debug-files arch pkgconfig la             perms dep-cmp pkgvarcheck perm-config perm-line perm-link             split-strip packages-list pkgv-undefined var-undefined             version-going-backwards expanded-d invalid-chars             license-checksum dev-elf file-rdeps configure-unsafe             configure-gettext perllocalpod             "
#   _append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:40
#     "${@bb.utils.contains('DISTRO_FEATURES', 'usrmerge', ' usrmerge', '', d)}"
# pre-expansion value:
#   "dev-so debug-deps dev-deps debug-files arch pkgconfig la             perms dep-cmp pkgvarcheck perm-config perm-line perm-link             split-strip packages-list pkgv-undefined var-undefined             version-going-backwards expanded-d invalid-chars             license-checksum dev-elf file-rdeps configure-unsafe             configure-gettext perllocalpod              ${WARN_TO_ERROR_QA}${@bb.utils.contains('DISTRO_FEATURES', 'usrmerge', ' usrmerge', '', d)}"
ERROR_QA="dev-so debug-deps dev-deps debug-files arch pkgconfig la             perms dep-cmp pkgvarcheck perm-config perm-line perm-link             split-strip packages-list pkgv-undefined var-undefined             version-going-backwards expanded-d invalid-chars             license-checksum dev-elf file-rdeps configure-unsafe             configure-gettext perllocalpod              already-stripped compile-host-path install-host-path                     installed-vs-shipped ldflags pn-overrides rpaths staticdev                     unknown-configure-option useless-rpaths"
#
# $EXCLUDE_FROM_WORLD
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:152
#     [doc] "Directs BitBake to exclude a recipe from world builds (i.e. bitbake world)."
#
# $EXCONFIG_ARGS [3 operations]
#   _append[pn-ncurses] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:35
#     " --without-normal"
#   _append[pn-ncurses-native] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:36
#     " --without-normal"
#   _append[pn-nativesdk-ncurses] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:37
#     " --without-normal"
# pre-expansion value:
#   ""
EXCONFIG_ARGS=""
#
# $EXTENDPE [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:207
#     "${@['','${PE}_'][int(d.getVar('PE') or 0) > 0]}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:153
#     [doc] "Used with file and pathnames to create a prefix for a recipe's version based on the recipe's PE value. If PE is set and greater than zero for a recipe, EXTENDPE becomes that value."
# pre-expansion value:
#   "${@['','${PE}_'][int(d.getVar('PE') or 0) > 0]}"
EXTENDPE=""
#
# $EXTENDPKGEVER
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:217
#     "${@['','${PKGE}:'][d.getVar('PKGE').strip() != '']}"
EXTENDPKGEVER=""
#
# $EXTENDPKGV [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:218
#     "${EXTENDPKGEVER}${PKGV}-${PKGR}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:154
#     [doc] "The full package version specification as it appears on the final packages produced by a recipe."
# pre-expansion value:
#   "${EXTENDPKGEVER}${PKGV}-${PKGR}"
EXTENDPKGV="1.0-r0"
#
# $EXTENDPRAUTO
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:211
#     "${@['.${PRAUTO}', ''][not d.getVar('PRAUTO')]}"
EXTENDPRAUTO=""
#
# $EXTERNALSRC
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:155
#     [doc] "If externalsrc.bbclass is inherited, this variable points to the source tree, which is outside of the OpenEmbedded build system."
#
# $EXTERNALSRC_BUILD
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:156
#     [doc] "If externalsrc.bbclass is inherited, this variable points to the directory in which the recipe's source code is built, which is outside of the OpenEmbedded build system."
#
# $EXTRA_IMAGEDEPENDS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:467
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:158
#     [doc] "A list of recipes to build that do not provide packages for installing into the root filesystem. Use this variable to list recipes that are required to build the final image, but not needed in the root filesystem."
# pre-expansion value:
#   ""
EXTRA_IMAGEDEPENDS=""
#
# $EXTRA_IMAGE_FEATURES [3 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:143
#     "debug-tweaks"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:157
#     [doc] "The list of additional features to include in an image. Configure this variable in the conf/local.conf file in the Build Directory."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:817
#     [_defaultval] ""
# pre-expansion value:
#   "debug-tweaks"
EXTRA_IMAGE_FEATURES="debug-tweaks"
#
# $EXTRA_OECMAKE [3 operations]
#   _append[pn-libical] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:32
#     " -DSHARED_ONLY=True"
#   _append[pn-libjpeg-turbo] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:33
#     " -DENABLE_STATIC=False"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:159
#     [doc] "Additional cmake options."
# pre-expansion value:
#   ""
EXTRA_OECMAKE=""
#
# $EXTRA_OECONF [4 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:549
#     ""
#   _append[pn-matchbox-panel-2] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc:20
#     " --with-battery=acpi"
#   _append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc:30
#     "${DISABLE_STATIC}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:160
#     [doc] "Additional configure script options."
# pre-expansion value:
#   "${DISABLE_STATIC}"
EXTRA_OECONF=" --disable-static"
#
# $EXTRA_OEMAKE [4 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:548
#     ""
#   _prepend[task-compile] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:601
#     "${PARALLEL_MAKE} "
#   _prepend[task-install] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:604
#     "${PARALLEL_MAKEINST} "
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:161
#     [doc] "Additional GNU make options."
# pre-expansion value:
#   ""
EXTRA_OEMAKE=""
#
# $EXTRA_OESCONS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:162
#     [doc] "When a recipe inherits the scons class, this variable specifies additional configuration options you want to pass to the scons command line."
#
# $EXTRA_QMAKEVARS_POST
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:163
#     [doc] "Configuration variables or options you want to pass to qmake when the arguments need to be after the .pro file list on the command line."
#
# $EXTRA_QMAKEVARS_PRE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:164
#     [doc] "Configuration variables or options you want to pass to qmake when the arguments need to be before the .pro file list on the command line."
#
# $EXTRA_STAGING_FIXMES
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:70
#     "HOSTTOOLS_DIR"
EXTRA_STAGING_FIXMES="HOSTTOOLS_DIR"
#
# $EXTRA_USERS_PARAMS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:165
#     [doc] "When a recipe inherits the extrausers class, this variable provides image level user and group operations."
#
# $FAKEROOTBASEENV
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:691
#     "PSEUDO_BINDIR=${PSEUDO_SYSROOT}${bindir_native} PSEUDO_LIBDIR=${PSEUDO_SYSROOT}${prefix_native}/lib/pseudo/lib PSEUDO_PREFIX=${PSEUDO_SYSROOT}${prefix_native} PSEUDO_DISABLED=1"
FAKEROOTBASEENV="PSEUDO_BINDIR=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/sysroots-components/x86_64/pseudo-native/usr/bin PSEUDO_LIBDIR=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/sysroots-components/x86_64/pseudo-native/usr/lib/pseudo/lib PSEUDO_PREFIX=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/sysroots-components/x86_64/pseudo-native/usr PSEUDO_DISABLED=1"
#
# $FAKEROOTCMD
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:692
#     "${PSEUDO_SYSROOT}${bindir_native}/pseudo"
FAKEROOTCMD="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/sysroots-components/x86_64/pseudo-native/usr/bin/pseudo"
#
# $FAKEROOTDIRS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:695
#     "${PSEUDO_LOCALSTATEDIR}"
FAKEROOTDIRS="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/pseudo/"
#
# $FAKEROOTENV
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:693
#     "PSEUDO_PREFIX=${PSEUDO_SYSROOT}${prefix_native} PSEUDO_LOCALSTATEDIR=${PSEUDO_LOCALSTATEDIR} PSEUDO_PASSWD=${PSEUDO_PASSWD} PSEUDO_NOSYMLINKEXP=1 PSEUDO_DISABLED=0"
FAKEROOTENV="PSEUDO_PREFIX=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/sysroots-components/x86_64/pseudo-native/usr PSEUDO_LOCALSTATEDIR=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/pseudo/ PSEUDO_PASSWD=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/sysroots-components/x86_64/pseudo-native PSEUDO_NOSYMLINKEXP=1 PSEUDO_DISABLED=0"
#
# $FAKEROOTNOENV
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:694
#     "PSEUDO_UNLOAD=1"
FAKEROOTNOENV="PSEUDO_UNLOAD=1"
#
# $FAKEROOT_QA [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:42
#     "host-user-contaminated"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:44
#     [doc] "QA tests which need to run under fakeroot. If any enabled tests are listed here, the do_package_qa task will run under fakeroot."
# pre-expansion value:
#   "host-user-contaminated"
FAKEROOT_QA="host-user-contaminated"
#
# $FC [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:520
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:520
#     "${CCACHE}${HOST_PREFIX}gfortran ${HOST_CC_ARCH}${TOOLCHAIN_OPTIONS}"
# pre-expansion value:
#   "${CCACHE}${HOST_PREFIX}gfortran ${HOST_CC_ARCH}${TOOLCHAIN_OPTIONS}"
export FC="x86_64-poky-linux-musl-gfortran  -m64 -march=core2 -mtune=core2 -msse3 -mfpmath=sse -fstack-protector-strong  -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot"
#
# $FEED_DEPLOYDIR_BASE_URI
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:169
#     [doc] "Allow to serve ipk deploy directory as an ad hoc feed (bogofeed). Set to base URL of the directory as exported by HTTP. Set of ad hoc feed configs will be generated in the image."
#
# $FETCHCMD_wget
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:299
#     "/usr/bin/env wget -t 2 -T 30 --passive-ftp --no-check-certificate"
FETCHCMD_wget="/usr/bin/env wget -t 2 -T 30 --passive-ftp --no-check-certificate"
#
# $FILE [93 operations]
#   set ConfHandler.py:148 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
#   set ConfHandler.py:148 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
#   set ConfHandler.py:148 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/layer.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
#   set ConfHandler.py:148 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/layer.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
#   set ConfHandler.py:148 [handle]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
#   set ConfHandler.py:148 [handle]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/layer.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
#   set ConfHandler.py:148 [handle]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
#   set ConfHandler.py:148 [handle]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/layer.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
#   set ConfHandler.py:148 [handle]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/layer.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
#   set ConfHandler.py:148 [handle]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf"
#   set BBHandler.py:126 [handle]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/distro/include/virt_security_flags.inc"
#   set BBHandler.py:144 [handle]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
#   set ConfHandler.py:148 [handle]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/layer.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
#   set ConfHandler.py:148 [handle]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/layer.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
#   set ConfHandler.py:148 [handle]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/layer.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
#   set ConfHandler.py:148 [handle]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/layer.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
#   set ConfHandler.py:148 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/layer.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
#   set ConfHandler.py:148 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf"
#   set ConfHandler.py:148 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/abi_version.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf"
#   set ConfHandler.py:148 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf"
#   set ConfHandler.py:148 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/multiconfig/default.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf"
#   set ConfHandler.py:148 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/genericx86-64.conf"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i686.inc"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i586.inc"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i586.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i686.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/genericx86-64.conf"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/genericx86-64.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf"
#   set ConfHandler.py:148 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine-sdk/x86_64.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf"
#   set ConfHandler.py:148 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf"
#   set ConfHandler.py:148 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/include/poky-world-exclude.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/no-static-libs.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/yocto-uninative.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf"
#   set ConfHandler.py:148 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-versions.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/uninative-flags.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf"
#   set BBHandler.py:126 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/init-manager-mdev-busybox.inc"
#   set BBHandler.py:144 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf"
#   set ConfHandler.py:148 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf"
#   set ConfHandler.py:148 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf"
#   set ConfHandler.py:148 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/sanity.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf"
#   set ConfHandler.py:151 [handle]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
# pre-expansion value:
#   "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
FILE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf"
#
# $FILES [18 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:294
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:170
#     [doc] "The list of directories or files that are placed in packages."
#   override[defaultpkgname]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:305
#     "${bindir}/* ${sbindir}/* ${libexecdir}/* ${libdir}/lib*${SOLIBS}             ${sysconfdir} ${sharedstatedir} ${localstatedir}             ${base_bindir}/* ${base_sbindir}/*             ${base_libdir}/*${SOLIBS}             ${base_prefix}/lib/udev ${prefix}/lib/udev             ${base_libdir}/udev ${libdir}/udev             ${datadir}/${BPN} ${libdir}/${BPN}/*             ${datadir}/pixmaps ${datadir}/applications             ${datadir}/idl ${datadir}/omf ${datadir}/sounds             ${libdir}/bonobo/servers"
#   override[defaultpkgname]:rename from FILES_${PN} data.py:104 [expandKeys]
#     "${bindir}/* ${sbindir}/* ${libexecdir}/* ${libdir}/lib*${SOLIBS}             ${sysconfdir} ${sharedstatedir} ${localstatedir}             ${base_bindir}/* ${base_sbindir}/*             ${base_libdir}/*${SOLIBS}             ${base_prefix}/lib/udev ${prefix}/lib/udev             ${base_libdir}/udev ${libdir}/udev             ${datadir}/${BPN} ${libdir}/${BPN}/*             ${datadir}/pixmaps ${datadir}/applications             ${datadir}/idl ${datadir}/omf ${datadir}/sounds             ${libdir}/bonobo/servers"
#   override[defaultpkgname-bin]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:307
#     "${bindir}/* ${sbindir}/*"
#   override[defaultpkgname-bin]:rename from FILES_${PN}-bin data.py:104 [expandKeys]
#     "${bindir}/* ${sbindir}/*"
#   override[defaultpkgname-dbg]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:327
#     "/usr/lib/debug /usr/src/debug"
#   override[defaultpkgname-dbg]:rename from FILES_${PN}-dbg data.py:104 [expandKeys]
#     "/usr/lib/debug /usr/src/debug"
#   override[defaultpkgname-dev]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:318
#     "${includedir} ${FILES_SOLIBSDEV} ${libdir}/*.la                 ${libdir}/*.o ${libdir}/pkgconfig ${datadir}/pkgconfig                 ${datadir}/aclocal ${base_libdir}/*.o                 ${libdir}/${BPN}/*.la ${base_libdir}/*.la                 ${libdir}/cmake ${datadir}/cmake"
#   override[defaultpkgname-dev]:rename from FILES_${PN}-dev data.py:104 [expandKeys]
#     "${includedir} ${FILES_SOLIBSDEV} ${libdir}/*.la                 ${libdir}/*.o ${libdir}/pkgconfig ${datadir}/pkgconfig                 ${datadir}/aclocal ${base_libdir}/*.o                 ${libdir}/${BPN}/*.la ${base_libdir}/*.la                 ${libdir}/cmake ${datadir}/cmake"
#   override[defaultpkgname-doc]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:310
#     "${docdir} ${mandir} ${infodir} ${datadir}/gtk-doc             ${datadir}/gnome/help"
#   override[defaultpkgname-doc]:rename from FILES_${PN}-doc data.py:104 [expandKeys]
#     "${docdir} ${mandir} ${infodir} ${datadir}/gtk-doc             ${datadir}/gnome/help"
#   override[defaultpkgname-locale]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:336
#     "${datadir}/locale"
#   override[defaultpkgname-locale]:rename from FILES_${PN}-locale data.py:104 [expandKeys]
#     "${datadir}/locale"
#   override[defaultpkgname-src]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:333
#     ""
#   override[defaultpkgname-src]:rename from FILES_${PN}-src data.py:104 [expandKeys]
#     ""
#   override[defaultpkgname-staticdev]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:323
#     "${libdir}/*.a ${base_libdir}/*.a ${libdir}/${BPN}/*.a"
#   override[defaultpkgname-staticdev]:rename from FILES_${PN}-staticdev data.py:104 [expandKeys]
#     "${libdir}/*.a ${base_libdir}/*.a ${libdir}/${BPN}/*.a"
# pre-expansion value:
#   ""
FILES=""
#
# $FILESEXTRAPATHS [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:344
#     "__default:"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:171
#     [doc] "Extends the search path the OpenEmbedded build system uses when looking for files and patches as it processes recipes and append files."
# pre-expansion value:
#   "__default:"
FILESEXTRAPATHS="__default:"
#
# $FILESOVERRIDES [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:743
#     "${TRANSLATED_TARGET_ARCH}:${MACHINEOVERRIDES}:${DISTROOVERRIDES}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:172
#     [doc] "A subset of OVERRIDES used by the OpenEmbedded build system for creating FILESPATH."
# pre-expansion value:
#   "${TRANSLATED_TARGET_ARCH}:${MACHINEOVERRIDES}:${DISTROOVERRIDES}"
FILESOVERRIDES="x86-64:genericx86-64:poky:poky-tiny"
#
# $FILESPATH [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:173
#     [doc] "The default set of directories the OpenEmbedded build system uses when searching for patches and files. It is defined in the base.bbclass class found in meta/classes in the Source Directory. Do not hand-edit the FILESPATH variable."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:82
#     "${@base_set_filespath(["${FILE_DIRNAME}/${BP}", "${FILE_DIRNAME}/${BPN}", "${FILE_DIRNAME}/files"], d)}"
# pre-expansion value:
#   "${@base_set_filespath(["${FILE_DIRNAME}/${BP}", "${FILE_DIRNAME}/${BPN}", "${FILE_DIRNAME}/files"], d)}"
FILESPATH="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/defaultpkgname-1.0/poky-tiny:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/defaultpkgname/poky-tiny:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/files/poky-tiny:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/defaultpkgname-1.0/poky:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/defaultpkgname/poky:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/files/poky:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/defaultpkgname-1.0/genericx86-64:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/defaultpkgname/genericx86-64:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/files/genericx86-64:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/defaultpkgname-1.0/x86-64:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/defaultpkgname/x86-64:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/files/x86-64:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/defaultpkgname-1.0/:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/defaultpkgname/:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/files/"
#
# $FILESYSTEM_PERMS_TABLES [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:352
#     "${@'files/fs-perms.txt' if oe.types.boolean(d.getVar('VOLATILE_LOG_DIR')) else 'files/fs-perms-persistent-log.txt'}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:174
#     [doc] "Allows you to define your own file permissions settings table as part of your configuration for the packaging process."
# pre-expansion value:
#   "${@'files/fs-perms.txt' if oe.types.boolean(d.getVar('VOLATILE_LOG_DIR')) else 'files/fs-perms-persistent-log.txt'}"
FILESYSTEM_PERMS_TABLES="files/fs-perms.txt"
#
# $FILES_SOLIBSDEV
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:313
#     "${base_libdir}/lib*${SOLIBSDEV} ${libdir}/lib*${SOLIBSDEV}"
FILES_SOLIBSDEV="/lib/lib*.so /usr/lib/lib*.so"
#
# $FILES_defaultpkgname [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:305
#     "${bindir}/* ${sbindir}/* ${libexecdir}/* ${libdir}/lib*${SOLIBS}             ${sysconfdir} ${sharedstatedir} ${localstatedir}             ${base_bindir}/* ${base_sbindir}/*             ${base_libdir}/*${SOLIBS}             ${base_prefix}/lib/udev ${prefix}/lib/udev             ${base_libdir}/udev ${libdir}/udev             ${datadir}/${BPN} ${libdir}/${BPN}/*             ${datadir}/pixmaps ${datadir}/applications             ${datadir}/idl ${datadir}/omf ${datadir}/sounds             ${libdir}/bonobo/servers"
#   rename from FILES_${PN} data.py:104 [expandKeys]
#     "${bindir}/* ${sbindir}/* ${libexecdir}/* ${libdir}/lib*${SOLIBS}             ${sysconfdir} ${sharedstatedir} ${localstatedir}             ${base_bindir}/* ${base_sbindir}/*             ${base_libdir}/*${SOLIBS}             ${base_prefix}/lib/udev ${prefix}/lib/udev             ${base_libdir}/udev ${libdir}/udev             ${datadir}/${BPN} ${libdir}/${BPN}/*             ${datadir}/pixmaps ${datadir}/applications             ${datadir}/idl ${datadir}/omf ${datadir}/sounds             ${libdir}/bonobo/servers"
# pre-expansion value:
#   "${bindir}/* ${sbindir}/* ${libexecdir}/* ${libdir}/lib*${SOLIBS}             ${sysconfdir} ${sharedstatedir} ${localstatedir}             ${base_bindir}/* ${base_sbindir}/*             ${base_libdir}/*${SOLIBS}             ${base_prefix}/lib/udev ${prefix}/lib/udev             ${base_libdir}/udev ${libdir}/udev             ${datadir}/${BPN} ${libdir}/${BPN}/*             ${datadir}/pixmaps ${datadir}/applications             ${datadir}/idl ${datadir}/omf ${datadir}/sounds             ${libdir}/bonobo/servers"
FILES_defaultpkgname="/usr/bin/* /usr/sbin/* /usr/libexec/* /usr/lib/lib*.so.*             /etc /com /var             /bin/* /sbin/*             /lib/*.so.*             /lib/udev /usr/lib/udev             /lib/udev /usr/lib/udev             /usr/share/defaultpkgname /usr/lib/defaultpkgname/*             /usr/share/pixmaps /usr/share/applications             /usr/share/idl /usr/share/omf /usr/share/sounds             /usr/lib/bonobo/servers"
#
# $FILES_defaultpkgname-bin [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:307
#     "${bindir}/* ${sbindir}/*"
#   rename from FILES_${PN}-bin data.py:104 [expandKeys]
#     "${bindir}/* ${sbindir}/*"
# pre-expansion value:
#   "${bindir}/* ${sbindir}/*"
FILES_defaultpkgname-bin="/usr/bin/* /usr/sbin/*"
#
# $FILES_defaultpkgname-dbg [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:327
#     "/usr/lib/debug /usr/src/debug"
#   rename from FILES_${PN}-dbg data.py:104 [expandKeys]
#     "/usr/lib/debug /usr/src/debug"
# pre-expansion value:
#   "/usr/lib/debug /usr/src/debug"
FILES_defaultpkgname-dbg="/usr/lib/debug /usr/src/debug"
#
# $FILES_defaultpkgname-dev [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:318
#     "${includedir} ${FILES_SOLIBSDEV} ${libdir}/*.la                 ${libdir}/*.o ${libdir}/pkgconfig ${datadir}/pkgconfig                 ${datadir}/aclocal ${base_libdir}/*.o                 ${libdir}/${BPN}/*.la ${base_libdir}/*.la                 ${libdir}/cmake ${datadir}/cmake"
#   rename from FILES_${PN}-dev data.py:104 [expandKeys]
#     "${includedir} ${FILES_SOLIBSDEV} ${libdir}/*.la                 ${libdir}/*.o ${libdir}/pkgconfig ${datadir}/pkgconfig                 ${datadir}/aclocal ${base_libdir}/*.o                 ${libdir}/${BPN}/*.la ${base_libdir}/*.la                 ${libdir}/cmake ${datadir}/cmake"
# pre-expansion value:
#   "${includedir} ${FILES_SOLIBSDEV} ${libdir}/*.la                 ${libdir}/*.o ${libdir}/pkgconfig ${datadir}/pkgconfig                 ${datadir}/aclocal ${base_libdir}/*.o                 ${libdir}/${BPN}/*.la ${base_libdir}/*.la                 ${libdir}/cmake ${datadir}/cmake"
FILES_defaultpkgname-dev="/usr/include /lib/lib*.so /usr/lib/lib*.so /usr/lib/*.la                 /usr/lib/*.o /usr/lib/pkgconfig /usr/share/pkgconfig                 /usr/share/aclocal /lib/*.o                 /usr/lib/defaultpkgname/*.la /lib/*.la                 /usr/lib/cmake /usr/share/cmake"
#
# $FILES_defaultpkgname-doc [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:310
#     "${docdir} ${mandir} ${infodir} ${datadir}/gtk-doc             ${datadir}/gnome/help"
#   rename from FILES_${PN}-doc data.py:104 [expandKeys]
#     "${docdir} ${mandir} ${infodir} ${datadir}/gtk-doc             ${datadir}/gnome/help"
# pre-expansion value:
#   "${docdir} ${mandir} ${infodir} ${datadir}/gtk-doc             ${datadir}/gnome/help"
FILES_defaultpkgname-doc="/usr/share/doc /usr/share/man /usr/share/info /usr/share/gtk-doc             /usr/share/gnome/help"
#
# $FILES_defaultpkgname-locale [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:336
#     "${datadir}/locale"
#   rename from FILES_${PN}-locale data.py:104 [expandKeys]
#     "${datadir}/locale"
# pre-expansion value:
#   "${datadir}/locale"
FILES_defaultpkgname-locale="/usr/share/locale"
#
# $FILES_defaultpkgname-src [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:333
#     ""
#   rename from FILES_${PN}-src data.py:104 [expandKeys]
#     ""
# pre-expansion value:
#   ""
FILES_defaultpkgname-src=""
#
# $FILES_defaultpkgname-staticdev [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:323
#     "${libdir}/*.a ${base_libdir}/*.a ${libdir}/${BPN}/*.a"
#   rename from FILES_${PN}-staticdev data.py:104 [expandKeys]
#     "${libdir}/*.a ${base_libdir}/*.a ${libdir}/${BPN}/*.a"
# pre-expansion value:
#   "${libdir}/*.a ${base_libdir}/*.a ${libdir}/${BPN}/*.a"
FILES_defaultpkgname-staticdev="/usr/lib/*.a /lib/*.a /usr/lib/defaultpkgname/*.a"
#
# $FILE_DIRNAME
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:340
#     "${@os.path.dirname(d.getVar('FILE', False))}"
FILE_DIRNAME="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf"
#
# $FONT_EXTRA_RDEPENDS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:175
#     [doc] "When a recipe inherits the fontcache class, this variable specifies runtime dependencies for font packages. This variable defaults to 'fontconfig-utils'."
#
# $FONT_PACKAGES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:176
#     [doc] "When a recipe inherits the fontcache class, this variable identifies packages containing font files that need to be cached by Fontconfig."
#
# $FOSS_BASE_URL
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:146
#     "http://localhost/repo/?mod=spdx_license_once"
FOSS_BASE_URL="http://localhost/repo/?mod=spdx_license_once"
#
# $FOSS_FULL_SPDX
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:137
#     "true"
FOSS_FULL_SPDX="true"
#
# $FOSS_NO_COPYRIGHT
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:108
#     "true"
FOSS_NO_COPYRIGHT="true"
#
# $FOSS_RECURSIVE_UNPACK
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:122
#     "false"
FOSS_RECURSIVE_UNPACK="false"
#
# $FOSS_SERVER
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:147
#     "${FOSS_BASE_URL}&fullSPDXFlag=${FOSS_FULL_SPDX}&noCopyright=${FOSS_NO_COPYRIGHT}&recursiveUnpack=${FOSS_RECURSIVE_UNPACK}"
FOSS_SERVER="http://localhost/repo/?mod=spdx_license_once&fullSPDXFlag=true&noCopyright=true&recursiveUnpack=false"
#
# $FOSS_WGET_FLAGS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:149
#     "-qO - --no-check-certificate --timeout=0"
FOSS_WGET_FLAGS="-qO - --no-check-certificate --timeout=0"
#
# $FULL_OPTIMIZATION [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:618
#     "-O2 -pipe ${DEBUG_FLAGS}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:177
#     [doc] "The options to pass in TARGET_CFLAGS and CFLAGS when compiling an optimized system. This variable defaults to '-O2 -pipe ${DEBUG_FLAGS}'."
# pre-expansion value:
#   "-O2 -pipe ${DEBUG_FLAGS}"
FULL_OPTIMIZATION="-O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot=                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native= "
#
# $GCCPIE [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:8
#     "--enable-default-pie"
#   override[powerpc]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:33
#     ""
# pre-expansion value:
#   "--enable-default-pie"
GCCPIE="--enable-default-pie"
#
# $GCCPIE_powerpc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:33
#     ""
GCCPIE_powerpc=""
#
# $GCCVERSION
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:19
#     "9.%"
GCCVERSION="9.%"
#
# $GDBVERSION
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:22
#     "8.3%"
GDBVERSION="8.3%"
#
# $GENTOO_MIRROR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:637
#     "http://distfiles.gentoo.org/distfiles"
GENTOO_MIRROR="http://distfiles.gentoo.org/distfiles"
#
# $GITDIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:181
#     [doc] "The directory where Git clones will be stored."
#
# $GLIBCPIE_powerpc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:34
#     ""
GLIBCPIE_powerpc=""
#
# $GLIBCVERSION
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:23
#     "2.30%"
GLIBCVERSION="2.30%"
#
# $GLIBC_ADDONS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc:18
#     "nptl"
GLIBC_ADDONS="nptl"
#
# $GNOME_GIT
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:638
#     "git://gitlab.gnome.org/GNOME"
GNOME_GIT="git://gitlab.gnome.org/GNOME"
#
# $GNOME_MIRROR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:639
#     "https://ftp.gnome.org/pub/GNOME/sources"
GNOME_MIRROR="https://ftp.gnome.org/pub/GNOME/sources"
#
# $GNUPG_MIRROR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:641
#     "https://www.gnupg.org/ftp/gcrypt"
GNUPG_MIRROR="https://www.gnupg.org/ftp/gcrypt"
#
# $GNU_MIRROR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:640
#     "https://ftp.gnu.org/gnu"
GNU_MIRROR="https://ftp.gnu.org/gnu"
#
# $GOVERSION
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:26
#     "1.12%"
GOVERSION="1.12%"
#
# $GPE_MIRROR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:642
#     "http://gpe.linuxtogo.org/download/source"
GPE_MIRROR="http://gpe.linuxtogo.org/download/source"
#
# $GROUPADD_PARAM
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:182
#     [doc] "When a recipe inherits the useradd class, this variable specifies for a package what parameters should be passed to the groupadd command if you wish to add a group to the system when the package is installed."
#
# $GROUPMEMS_PARAM
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:183
#     [doc] "When a recipe inherits the useradd class, this variable specifies for a package what parameters should be passed to the groupmems command if you wish to modify the members of a group when the package is installed."
#
# $GRUB_GFXSERIAL
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:184
#     [doc] "Configures the GNU GRand Unified Bootloader (GRUB) to have graphics and serial in the boot menu."
#
# $GRUB_OPTS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:185
#     [doc] "Additional options to add to the GNU GRand Unified Bootloader (GRUB) configuration."
#
# $GRUB_TIMEOUT
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:186
#     [doc] "Specifies the timeout before executing the default LABEL in the GNU GRand Unified Bootloader (GRUB)."
#
# $GTK2DISTROFEATURES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:38
#     "directfb x11"
GTK2DISTROFEATURES="directfb x11"
#
# $GTK3DISTROFEATURES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:39
#     "x11 wayland"
GTK3DISTROFEATURES="x11 wayland"
#
# $GTKIMMODULES_PACKAGES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:187
#     [doc] "For recipes that inherit the gtk-immodules-cache class, this variable specifies the packages that contain the GTK+ input method modules being installed when the modules are in packages other than the main package."
#
# $HOME [2 operations]
#   from env data.py:112 [inheritFromOS]
#     "/home/epple"
#   auto env export data.py:114 [inheritFromOS]
#     [export] "True"
# pre-expansion value:
#   "/home/epple"
export HOME="/home/epple"
#
# $HOMEPAGE [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:263
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:191
#     [doc] "Website where more information about the software the recipe is building can be found."
# pre-expansion value:
#   ""
HOMEPAGE=""
#
# $HOSTTOOLS [3 operations]
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/layer.conf:15
#     " xz "
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:494
#     "     [ ar as awk basename bash bzip2 cat chgrp chmod chown chrpath cmp comm cp cpio     cpp cut date dd diff diffstat dirname du echo egrep env expand expr false     fgrep file find flock g++ gawk gcc getconf getopt git grep gunzip gzip     head hostname iconv id install ld ldd ln ls make makeinfo md5sum mkdir mknod     mktemp mv nm objcopy objdump od patch perl pod2man pr printf pwd python2     python2.7 python3 ranlib readelf readlink realpath rm rmdir rpcgen sed seq sh sha256sum     sleep sort split stat strings strip tail tar tee test touch tr true uname     uniq wc wget which xargs "
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:497
#     "${@'ip ping ps scp ssh stty' if (bb.utils.contains_any('IMAGE_CLASSES', 'testimage testsdk', True, False, d) or any(x in (d.getVar("BBINCLUDED") or "") for x in ["testimage.bbclass", "testsdk.bbclass"])) else ''}"
# pre-expansion value:
#   "  xz       [ ar as awk basename bash bzip2 cat chgrp chmod chown chrpath cmp comm cp cpio     cpp cut date dd diff diffstat dirname du echo egrep env expand expr false     fgrep file find flock g++ gawk gcc getconf getopt git grep gunzip gzip     head hostname iconv id install ld ldd ln ls make makeinfo md5sum mkdir mknod     mktemp mv nm objcopy objdump od patch perl pod2man pr printf pwd python2     python2.7 python3 ranlib readelf readlink realpath rm rmdir rpcgen sed seq sh sha256sum     sleep sort split stat strings strip tail tar tee test touch tr true uname     uniq wc wget which xargs  ${@'ip ping ps scp ssh stty' if (bb.utils.contains_any('IMAGE_CLASSES', 'testimage testsdk', True, False, d) or any(x in (d.getVar("BBINCLUDED") or "") for x in ["testimage.bbclass", "testsdk.bbclass"])) else ''}"
HOSTTOOLS="  xz       [ ar as awk basename bash bzip2 cat chgrp chmod chown chrpath cmp comm cp cpio     cpp cut date dd diff diffstat dirname du echo egrep env expand expr false     fgrep file find flock g++ gawk gcc getconf getopt git grep gunzip gzip     head hostname iconv id install ld ldd ln ls make makeinfo md5sum mkdir mknod     mktemp mv nm objcopy objdump od patch perl pod2man pr printf pwd python2     python2.7 python3 ranlib readelf readlink realpath rm rmdir rpcgen sed seq sh sha256sum     sleep sort split stat strings strip tail tar tee test touch tr true uname     uniq wc wget which xargs  "
#
# $HOSTTOOLS_DIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:481
#     "${TMPDIR}/hosttools"
HOSTTOOLS_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/hosttools"
#
# $HOSTTOOLS_NONFATAL [6 operations]
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/layer.conf:16
#     " yarn node nodejs java npm "
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:500
#     "aws gcc-ar gpg ld.bfd ld.gold nc pigz sftp socat ssh sudo"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:503
#     "join nl size yes zcat"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:506
#     "bzr"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:509
#     "scp"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:512
#     "git-lfs"
# pre-expansion value:
#   "  yarn node nodejs java npm  aws gcc-ar gpg ld.bfd ld.gold nc pigz sftp socat ssh sudo join nl size yes zcat bzr scp git-lfs"
HOSTTOOLS_NONFATAL="  yarn node nodejs java npm  aws gcc-ar gpg ld.bfd ld.gold nc pigz sftp socat ssh sudo join nl size yes zcat bzr scp git-lfs"
#
# $HOST_ARCH [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:108
#     "${TARGET_ARCH}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:192
#     [doc] "The name of the target architecture. Normally same as the TARGET_ARCH."
# pre-expansion value:
#   "${TARGET_ARCH}"
HOST_ARCH="x86_64"
#
# $HOST_AS_ARCH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:115
#     "${TARGET_AS_ARCH}"
HOST_AS_ARCH=" "
#
# $HOST_CC_ARCH [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:113
#     "${TARGET_CC_ARCH}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:193
#     [doc] "The name of the host architecture. Normally same as the TARGET_CC_ARCH."
# pre-expansion value:
#   "${TARGET_CC_ARCH}"
HOST_CC_ARCH=" -m64 -march=core2 -mtune=core2 -msse3 -mfpmath=sse -fstack-protector-strong  -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security"
#
# $HOST_EXEEXT
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:116
#     ""
HOST_EXEEXT=""
#
# $HOST_LD_ARCH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:114
#     "${TARGET_LD_ARCH}"
HOST_LD_ARCH=" "
#
# $HOST_OS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:109
#     "${TARGET_OS}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:194
#     [doc] "The name of the target operating system. Normally the same as the TARGET_OS."
# pre-expansion value:
#   "${TARGET_OS}"
HOST_OS="linux-musl"
#
# $HOST_PREFIX [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:112
#     "${TARGET_PREFIX}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:195
#     [doc] "The prefix for the cross compile toolchain. Normally same as the TARGET_PREFIX."
# pre-expansion value:
#   "${TARGET_PREFIX}"
HOST_PREFIX="x86_64-poky-linux-musl-"
#
# $HOST_SYS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:111
#     "${HOST_ARCH}${HOST_VENDOR}-${HOST_OS}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:196
#     [doc] "Specifies the system, including the architecture and the operating system, for with the build is occurring in the context of the current recipe."
# pre-expansion value:
#   "${HOST_ARCH}${HOST_VENDOR}-${HOST_OS}"
HOST_SYS="x86_64-poky-linux-musl"
#
# $HOST_USER_GID
#   immediate /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:854
#     "${@os.getgid()}"
HOST_USER_GID="1010"
#
# $HOST_USER_UID
#   immediate /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:853
#     "${@os.getuid()}"
HOST_USER_UID="1009"
#
# $HOST_VENDOR [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:110
#     "${TARGET_VENDOR}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:197
#     [doc] "The name of the vendor. Normally same as the TARGET_VENDOR."
# pre-expansion value:
#   "${TARGET_VENDOR}"
HOST_VENDOR="-poky"
#
# $ICECC_ENV_EXEC
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:201
#     [doc] "Points to the icecc-create-env script that you provide."
#
# $ICECC_PATH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:202
#     [doc] "The location of the icecc binary."
#
# $ICECC_USER_CLASS_BL
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:203
#     [doc] "Identifies user classes that you do not want the Icecream distributed compile support to consider."
#
# $ICECC_USER_PACKAGE_BL
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:204
#     [doc] "Identifies user recipes that you do not want the Icecream distributed compile support to consider."
#
# $ICECC_USER_PACKAGE_WL
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:205
#     [doc] "Identifies user recipes that use an empty PARALLEL_MAKE variable that you want to force remote distributed compilation on using the Icecream distributed compile support."
#
# $IMAGE_BASENAME [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:452
#     "${PN}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:206
#     [doc] "The base name of image output files."
# pre-expansion value:
#   "${PN}"
IMAGE_BASENAME="defaultpkgname"
#
# $IMAGE_BOOT_FILES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:207
#     [doc] "Whitespace separated list of files from ${DEPLOY_DIR_IMAGE} to place in boot partition. Entries will be installed under a same name as the source file. To change the destination file name, pass a desired name after a semicolon (eg. u-boot.img;uboot)."
#
# $IMAGE_CLASSES [3 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc:2
#     "qemuboot"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:208
#     [doc] "A list of classes that all images should inherit."
#   _append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/license.bbclass:422
#     " license_image"
# pre-expansion value:
#   " qemuboot license_image"
IMAGE_CLASSES=" qemuboot license_image"
#
# $IMAGE_FEATURES [3 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:15
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:209
#     [doc] "The primary list of features to include in an image. Configure this variable in an image recipe."
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:818
#     "${EXTRA_IMAGE_FEATURES}"
# pre-expansion value:
#   " ${EXTRA_IMAGE_FEATURES}"
IMAGE_FEATURES=" debug-tweaks"
#
# $IMAGE_FSTYPES [6 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:279
#     "cpio ext4"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc:11
#     "hddimg"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc:22
#     "wic wic.bmap"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:95
#     "cpio.gz"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:210
#     [doc] "Formats of root filesystem images that you want to have created."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:768
#     "tar.gz"
# pre-expansion value:
#   "cpio.gz"
IMAGE_FSTYPES="cpio.gz"
#
# $IMAGE_FSTYPES_DEBUGFS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:211
#     [doc] "Formats of the debug root filesystem images that you want to have created."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:769
#     "tar.gz"
# pre-expansion value:
#   "tar.gz"
IMAGE_FSTYPES_DEBUGFS="tar.gz"
#
# $IMAGE_GEN_DEBUGFS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:212
#     [doc] "When set to '1', generate a companion debug object/source filesystem image."
#
# $IMAGE_INSTALL
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:213
#     [doc] "Specifies the packages to install into an image. Image recipes set IMAGE_INSTALL to specify the packages to install into an image through image.bbclass."
#
# $IMAGE_LINGUAS [3 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:7
#     "en-us en-gb"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:22
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:214
#     [doc] "Specifies the list of locales to install into the image during the root filesystem construction process."
# pre-expansion value:
#   ""
IMAGE_LINGUAS=""
#
# $IMAGE_LINK_NAME
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:456
#     "${IMAGE_BASENAME}-${MACHINE}"
IMAGE_LINK_NAME="defaultpkgname-genericx86-64"
#
# $IMAGE_NAME [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:455
#     "${IMAGE_BASENAME}-${MACHINE}${IMAGE_VERSION_SUFFIX}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:215
#     [doc] "The name of the output image files minus the extension."
# pre-expansion value:
#   "${IMAGE_BASENAME}-${MACHINE}${IMAGE_VERSION_SUFFIX}"
IMAGE_NAME="defaultpkgname-genericx86-64-20200408102023"
#
# $IMAGE_OVERHEAD_FACTOR [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:460
#     "1.3"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:216
#     [doc] "Defines a multiplier that the build system applies to the initial image size for cases when the multiplier times the returned disk usage value for the image is greater than the sum of IMAGE_ROOTFS_SIZE and IMAGE_ROOTFS_EXTRA_SPACE."
# pre-expansion value:
#   "1.3"
IMAGE_OVERHEAD_FACTOR="1.3"
#
# $IMAGE_PKGTYPE [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:217
#     [doc] "Defines the package type (DEB, RPM, IPK, or TAR) used by the OpenEmbedded build system."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_ipk.bbclass:3
#     "ipk"
# pre-expansion value:
#   "ipk"
IMAGE_PKGTYPE="ipk"
#
# $IMAGE_POSTPROCESS_COMMAND
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:218
#     [doc] "Added by classes to run post processing commands once the OpenEmbedded build system has created the image."
#
# $IMAGE_PREPROCESS_COMMAND [2 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/image-mklibs.bbclass:3
#     "mklibs_optimize_image; "
#   _append[libc-glibc] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/image-prelink.bbclass:3
#     " prelink_setup; prelink_image; "
# pre-expansion value:
#   " mklibs_optimize_image; "
IMAGE_PREPROCESS_COMMAND=" mklibs_optimize_image; "
#
# $IMAGE_ROOTFS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:451
#     "${WORKDIR}/rootfs"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:219
#     [doc] "The location of the root filesystem while it is under construction (i.e. during do_rootfs)."
# pre-expansion value:
#   "${WORKDIR}/rootfs"
IMAGE_ROOTFS="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/rootfs"
#
# $IMAGE_ROOTFS_EXTRA_SPACE [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:465
#     "0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:220
#     [doc] "Defines additional free disk space created in the image in Kbytes. By default, this variable is set to '0'."
# pre-expansion value:
#   "0"
IMAGE_ROOTFS_EXTRA_SPACE="0"
#
# $IMAGE_ROOTFS_SIZE [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:221
#     [doc] "Defines the size in Kbytes for the generated image."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:783
#     [_defaultval] "65536"
# pre-expansion value:
#   "65536"
IMAGE_ROOTFS_SIZE="65536"
#
# $IMAGE_TYPES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:222
#     [doc] "Specifies the complete list of supported image types by default."
#
# $IMAGE_VERSION_SUFFIX [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:453
#     "-${DATETIME}"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:454
#     [vardepsexclude] "DATETIME"
# pre-expansion value:
#   "-${DATETIME}"
IMAGE_VERSION_SUFFIX="-20200408102023"
#
# $INCOMPATIBLE_LICENSE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:224
#     [doc] "Specifies a space-separated list of license names (as they would appear in LICENSE) that should be excluded from the build. Wildcard is supported, such as '*GPLv3'"
#
# $INC_PR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:223
#     [doc] "Helps define the recipe revision for recipes that share a common include file."
#
# $INHERIT [6 operations]
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:41
#     "sanity-meta-virt"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:76
#     "poky-sanity"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:89
#     "uninative"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf:24
#     "${PACKAGE_CLASSES} ${USER_CLASSES} ${INHERIT_DISTRO} ${INHERIT_BLACKLIST}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:227
#     [doc] "Causes the named class to be inherited at this point during parsing. The variable is only valid in configuration files."
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/sanity.conf:15
#     "sanity"
# pre-expansion value:
#   " sanity-meta-virt poky-sanity uninative ${PACKAGE_CLASSES} ${USER_CLASSES} ${INHERIT_DISTRO} ${INHERIT_BLACKLIST} sanity"
INHERIT=" sanity-meta-virt poky-sanity uninative package_ipk buildstats image-mklibs image-prelink debian devshell sstate license remove-libtool blacklist sanity"
#
# $INHERIT_BLACKLIST
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf:22
#     "blacklist"
INHERIT_BLACKLIST="blacklist"
#
# $INHERIT_DISTRO [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf:23
#     "debian devshell sstate license remove-libtool"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:228
#     [doc] "Lists classes that will be inherited at the distribution level. It is unlikely that you want to edit this variable."
# pre-expansion value:
#   "debian devshell sstate license remove-libtool"
INHERIT_DISTRO="debian devshell sstate license remove-libtool"
#
# $INHIBIT_DEFAULT_DEPS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:225
#     [doc] "Prevents the default dependencies, namely the C compiler and standard C library (libc), from being added to DEPENDS."
#
# $INHIBIT_PACKAGE_STRIP
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:226
#     [doc] "If set to "1", causes the build to not strip binaries in resulting packages."
#
# $INITRAMFS_FSTYPES [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:229
#     [doc] "Defines the format for the output image of an initial RAM disk (initramfs), which is used during boot."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:771
#     "cpio.gz"
# pre-expansion value:
#   "cpio.gz"
INITRAMFS_FSTYPES="cpio.gz"
#
# $INITRAMFS_IMAGE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:277
#     "trustx-cml-initramfs"
INITRAMFS_IMAGE="trustx-cml-initramfs"
#
# $INITRAMFS_IMAGE_BUNDLE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:276
#     "1"
INITRAMFS_IMAGE_BUNDLE="1"
#
# $INITRAMFS_MAXSIZE [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:295
#     "150000"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:775
#     [_defaultval] "131072"
# pre-expansion value:
#   "150000"
INITRAMFS_MAXSIZE="150000"
#
# $INITRAMFS_MODULES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:293
#     ""
INITRAMFS_MODULES=""
#
# $INITRD
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:230
#     [doc] "Indicates a list of filesystem images to concatenate and use as an initial RAM disk (initrd)."
#
# $INITSCRIPT_NAME
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:231
#     [doc] "The filename of the initialization script as installed to ${sysconfdir}/init.d."
#
# $INITSCRIPT_PACKAGES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:232
#     [doc] "A list of the packages that contain initscripts. This variable is used in recipes when using update-rc.d.bbclass. The variable is optional and defaults to the PN variable."
#
# $INITSCRIPT_PARAMS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:233
#     [doc] "Specifies the options to pass to update-rc.d. The variable is mandatory and is used in recipes when using update-rc.d.bbclass."
#
# $INIT_MANAGER [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:85
#     "mdev-busybox"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf:26
#     [_defaultval] "none"
# pre-expansion value:
#   "mdev-busybox"
INIT_MANAGER="mdev-busybox"
#
# $INSANE_SKIP
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:234
#     [doc] "Specifies the QA checks to skip for a specific package within a recipe."
#
# $IPKGCONF_SDK
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_ipk.bbclass:6
#     "${WORKDIR}/opkg-sdk.conf"
IPKGCONF_SDK="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/opkg-sdk.conf"
#
# $IPKGCONF_TARGET
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_ipk.bbclass:5
#     "${WORKDIR}/opkg.conf"
IPKGCONF_TARGET="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/opkg.conf"
#
# $IPK_FEED_URIS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:235
#     [doc] "List of ipkg feed records to put into generated image."
#
# $KARCH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:239
#     [doc] "Defines the kernel architecture used when assembling the configuration. You define the KARCH variable in the BSP Descriptions."
#
# $KBRANCH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:240
#     [doc] "A regular expression used by the build process to explicitly identify the kernel branch that is validated, patched and configured during a build."
#
# $KBRANCH_DEFAULT
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:241
#     [doc] "Defines the Linux kernel source repository's default branch used to build the Linux kernel. Unless you specify otherwise, the variable initializes to 'master'."
#
# $KEEPUIMAGE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:5
#     [_defaultval] "yes"
KEEPUIMAGE="yes"
#
# $KERNELORG_MIRROR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:643
#     "https://cdn.kernel.org/pub"
KERNELORG_MIRROR="https://cdn.kernel.org/pub"
#
# $KERNEL_CLASSES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:242
#     [doc] "A list of classes defining kernel image types that kernel class should inherit."
#
# $KERNEL_CONSOLE
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:4
#     "ttyS0"
KERNEL_CONSOLE="ttyS0"
#
# $KERNEL_DEPLOYSUBDIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:300
#     "cml-kernel"
KERNEL_DEPLOYSUBDIR="cml-kernel"
#
# $KERNEL_EXTRA_ARGS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:243
#     [doc] "Specifies additional make command-line arguments the OpenEmbedded build system passes on when compiling the kernel."
#
# $KERNEL_FEATURES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:244
#     [doc] "Includes additional metadata from the Yocto Project kernel Git repository. The metadata you add through this variable includes config fragments and features descriptions."
#
# $KERNEL_IMAGETYPE [3 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc:13
#     "bzImage"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:44
#     [_defaultval] "${ARCH_DEFAULT_KERNELIMAGETYPE}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:245
#     [doc] "The type of kernel to build for a device, usually set by the machine configuration files and defaults to 'zImage'."
# pre-expansion value:
#   "bzImage"
KERNEL_IMAGETYPE="bzImage"
#
# $KERNEL_IMAGETYPES [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:45
#     [_defaultval] "${KERNEL_IMAGETYPE}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:246
#     [doc] "The list of types of kernel to build for a device, usually set by the machine configuration files and defaults to KERNEL_IMAGETYPE."
# pre-expansion value:
#   "${KERNEL_IMAGETYPE}"
KERNEL_IMAGETYPES="bzImage"
#
# $KERNEL_MODULE_AUTOLOAD
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:247
#     [doc] "Lists kernel modules that need to be auto-loaded during boot"
#
# $KERNEL_MODULE_PROBECONF
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:248
#     [doc] "Lists kernel modules for which the build system expects to find module_conf_* values that specify configuration for each of the modules"
#
# $KERNEL_PACKAGE_NAME
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:249
#     [doc] "Name prefix for kernel packages. Defaults to 'kernel'."
#
# $KERNEL_PATH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:250
#     [doc] "The location of the kernel sources. This variable is set to the value of the STAGING_KERNEL_DIR within the module class (module.bbclass)."
#
# $KERNEL_SRC
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:251
#     [doc] "The location of the kernel sources. This variable is set to the value of the STAGING_KERNEL_DIR within the module class (module.bbclass)."
#
# $KERNEL_SRC_PATH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:442
#     "/usr/src/kernel"
KERNEL_SRC_PATH="/usr/src/kernel"
#
# $KFEATURE_DESCRIPTION
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:252
#     [doc] "Provides a short description of a configuration fragment. You use this variable in the .scc file that describes a configuration fragment file."
#
# $KMACHINE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:253
#     [doc] "The machine as known by the kernel."
#
# $KTYPE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:254
#     [doc] "Defines the kernel type to be used in assembling the configuration."
#
# $LAYERDEPENDS [15 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:258
#     [doc] "Lists the layers, separated by spaces, upon which this recipe depends. This variable is used in the conf/layer.conf file and must be suffixed with the name of the specific layer."
#   override[yocto]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/layer.conf:18
#     "core"
#   override[openembedded-layer]:set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:30
#     "core"
#   override[meta-python]:set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/layer.conf:15
#     "core openembedded-layer"
#   override[networking-layer]:set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:16
#     "core"
#   override[networking-layer]:append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:17
#     "openembedded-layer"
#   override[networking-layer]:append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:18
#     "meta-python"
#   override[perl-layer]:set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/layer.conf:16
#     "core openembedded-layer"
#   override[filesystems-layer]:set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/layer.conf:16
#     "core openembedded-layer"
#   override[virtualization-layer]:set /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:24
#     "     core     openembedded-layer     networking-layer     filesystems-layer     meta-python "
#   override[selinux]:set /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/layer.conf:29
#     "     core     meta-python "
#   override[meta-java]:append /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/layer.conf:11
#     "openembedded-layer"
#   override[trustx-layer]:set /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/layer.conf:12
#     "virtualization-layer"
#   override[trustx-intel]:set /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/layer.conf:12
#     "trustx-layer"
#   override[meta-appends]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/layer.conf:12
#     "core"
# pre-expansion value:
#   "None"
#
# $LAYERDEPENDS_filesystems-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/layer.conf:16
#     "core openembedded-layer"
LAYERDEPENDS_filesystems-layer="core openembedded-layer"
#
# $LAYERDEPENDS_meta-appends
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/layer.conf:12
#     "core"
LAYERDEPENDS_meta-appends="core"
#
# $LAYERDEPENDS_meta-java
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/layer.conf:11
#     "openembedded-layer"
LAYERDEPENDS_meta-java=" openembedded-layer"
#
# $LAYERDEPENDS_meta-python
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/layer.conf:15
#     "core openembedded-layer"
LAYERDEPENDS_meta-python="core openembedded-layer"
#
# $LAYERDEPENDS_networking-layer [3 operations]
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:16
#     "core"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:17
#     "openembedded-layer"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:18
#     "meta-python"
# pre-expansion value:
#   "core openembedded-layer meta-python"
LAYERDEPENDS_networking-layer="core openembedded-layer meta-python"
#
# $LAYERDEPENDS_openembedded-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:30
#     "core"
LAYERDEPENDS_openembedded-layer="core"
#
# $LAYERDEPENDS_perl-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/layer.conf:16
#     "core openembedded-layer"
LAYERDEPENDS_perl-layer="core openembedded-layer"
#
# $LAYERDEPENDS_selinux
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/layer.conf:29
#     "     core     meta-python "
LAYERDEPENDS_selinux="     core     meta-python "
#
# $LAYERDEPENDS_trustx-intel
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/layer.conf:12
#     "trustx-layer"
LAYERDEPENDS_trustx-intel="trustx-layer"
#
# $LAYERDEPENDS_trustx-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/layer.conf:12
#     "virtualization-layer"
LAYERDEPENDS_trustx-layer="virtualization-layer"
#
# $LAYERDEPENDS_virtualization-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:24
#     "     core     openembedded-layer     networking-layer     filesystems-layer     meta-python "
LAYERDEPENDS_virtualization-layer="     core     openembedded-layer     networking-layer     filesystems-layer     meta-python "
#
# $LAYERDEPENDS_yocto
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/layer.conf:18
#     "core"
LAYERDEPENDS_yocto="core"
#
# $LAYERDIR [16 operations]
#   set cookerdata.py:372 [parseConfigurationFiles]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta"
#   set cookerdata.py:372 [parseConfigurationFiles]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky"
#   set cookerdata.py:372 [parseConfigurationFiles]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp"
#   set cookerdata.py:372 [parseConfigurationFiles]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe"
#   set cookerdata.py:372 [parseConfigurationFiles]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python"
#   set cookerdata.py:372 [parseConfigurationFiles]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking"
#   set cookerdata.py:372 [parseConfigurationFiles]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl"
#   set cookerdata.py:372 [parseConfigurationFiles]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems"
#   set cookerdata.py:372 [parseConfigurationFiles]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-virtualization"
#   set cookerdata.py:372 [parseConfigurationFiles]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-selinux"
#   set cookerdata.py:372 [parseConfigurationFiles]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-java"
#   set cookerdata.py:372 [parseConfigurationFiles]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-trustx"
#   set cookerdata.py:372 [parseConfigurationFiles]
#     "/home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel"
#   set cookerdata.py:372 [parseConfigurationFiles]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends"
#   del cookerdata.py:379 [parseConfigurationFiles]
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:259
#     [doc] "When used inside the layer.conf configuration file, this variable provides the path of the current layer."
# pre-expansion value:
#   "None"
#
# $LAYERRECOMMENDS_virtualization-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:30
#     "     webserver     selinux "
LAYERRECOMMENDS_virtualization-layer="     webserver     selinux "
#
# $LAYERSERIES_COMPAT_core
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:15
#     "warrior zeus"
LAYERSERIES_COMPAT_core="warrior zeus"
#
# $LAYERSERIES_COMPAT_filesystems-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/layer.conf:18
#     "thud warrior zeus"
LAYERSERIES_COMPAT_filesystems-layer="thud warrior zeus"
#
# $LAYERSERIES_COMPAT_meta-appends
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/meta-appends/conf/layer.conf:13
#     "warrior zeus"
LAYERSERIES_COMPAT_meta-appends="warrior zeus"
#
# $LAYERSERIES_COMPAT_meta-java
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/layer.conf:10
#     "zeus"
LAYERSERIES_COMPAT_meta-java="zeus"
#
# $LAYERSERIES_COMPAT_meta-python
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/layer.conf:17
#     "thud warrior zeus"
LAYERSERIES_COMPAT_meta-python="thud warrior zeus"
#
# $LAYERSERIES_COMPAT_networking-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:20
#     "thud warrior zeus"
LAYERSERIES_COMPAT_networking-layer="thud warrior zeus"
#
# $LAYERSERIES_COMPAT_openembedded-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:32
#     "thud warrior zeus"
LAYERSERIES_COMPAT_openembedded-layer="thud warrior zeus"
#
# $LAYERSERIES_COMPAT_perl-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/layer.conf:18
#     "thud warrior zeus"
LAYERSERIES_COMPAT_perl-layer="thud warrior zeus"
#
# $LAYERSERIES_COMPAT_selinux
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/layer.conf:24
#     "zeus"
LAYERSERIES_COMPAT_selinux="zeus"
#
# $LAYERSERIES_COMPAT_trustx-intel
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-trustx-intel/conf/layer.conf:14
#     "zeus"
LAYERSERIES_COMPAT_trustx-intel=" zeus"
#
# $LAYERSERIES_COMPAT_trustx-layer
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-trustx/conf/layer.conf:18
#     "zeus"
LAYERSERIES_COMPAT_trustx-layer=" zeus"
#
# $LAYERSERIES_COMPAT_virtualization-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:17
#     "thud warrior zeus"
LAYERSERIES_COMPAT_virtualization-layer="thud warrior zeus"
#
# $LAYERSERIES_COMPAT_yocto
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/layer.conf:12
#     "zeus"
LAYERSERIES_COMPAT_yocto="zeus"
#
# $LAYERSERIES_COMPAT_yoctobsp
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/layer.conf:12
#     "zeus"
LAYERSERIES_COMPAT_yoctobsp="zeus"
#
# $LAYERSERIES_CORENAMES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:10
#     "zeus"
LAYERSERIES_CORENAMES="zeus"
#
# $LAYERVERSION [11 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:260
#     [doc] "Optionally specifies the version of a layer as a single number. This variable is used in the conf/layer.conf file and must be suffixed with the name of the specific layer."
#   override[core]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:14
#     "11"
#   override[yocto]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/layer.conf:16
#     "3"
#   override[yoctobsp]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/layer.conf:11
#     "4"
#   override[openembedded-layer]:set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:28
#     "1"
#   override[meta-python]:set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/layer.conf:13
#     "1"
#   override[networking-layer]:set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:14
#     "1"
#   override[perl-layer]:set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/layer.conf:14
#     "1"
#   override[filesystems-layer]:set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/layer.conf:14
#     "1"
#   override[virtualization-layer]:set /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:16
#     "1"
#   override[selinux]:set /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/layer.conf:22
#     "1"
# pre-expansion value:
#   "None"
#
# $LAYERVERSION_core
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:14
#     "11"
LAYERVERSION_core="11"
#
# $LAYERVERSION_filesystems-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-filesystems/conf/layer.conf:14
#     "1"
LAYERVERSION_filesystems-layer="1"
#
# $LAYERVERSION_meta-python
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/layer.conf:13
#     "1"
LAYERVERSION_meta-python="1"
#
# $LAYERVERSION_networking-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:14
#     "1"
LAYERVERSION_networking-layer="1"
#
# $LAYERVERSION_openembedded-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:28
#     "1"
LAYERVERSION_openembedded-layer="1"
#
# $LAYERVERSION_perl-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-perl/conf/layer.conf:14
#     "1"
LAYERVERSION_perl-layer="1"
#
# $LAYERVERSION_selinux
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-selinux/conf/layer.conf:22
#     "1"
LAYERVERSION_selinux="1"
#
# $LAYERVERSION_virtualization-layer
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:16
#     "1"
LAYERVERSION_virtualization-layer="1"
#
# $LAYERVERSION_yocto
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/layer.conf:16
#     "3"
LAYERVERSION_yocto="3"
#
# $LAYERVERSION_yoctobsp
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/layer.conf:11
#     "4"
LAYERVERSION_yoctobsp="4"
#
# $LAYER_CONF_VERSION
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/sanity.conf:12
#     "7"
LAYER_CONF_VERSION="7"
#
# $LC_ALL [4 operations]
#   from env data.py:112 [inheritFromOS]
#     "en_US.UTF-8"
#   auto env export data.py:114 [inheritFromOS]
#     [export] "True"
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:550
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:550
#     "en_US.UTF-8"
# pre-expansion value:
#   "en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
#
# $LD [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:522
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:522
#     "${HOST_PREFIX}ld${TOOLCHAIN_OPTIONS} ${HOST_LD_ARCH}"
# pre-expansion value:
#   "${HOST_PREFIX}ld${TOOLCHAIN_OPTIONS} ${HOST_LD_ARCH}"
export LD="x86_64-poky-linux-musl-ld --sysroot=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot  "
#
# $LDFLAGS [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:597
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:597
#     "${TARGET_LDFLAGS}"
# pre-expansion value:
#   "${TARGET_LDFLAGS}"
export LDFLAGS="-Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed -fstack-protector-strong -Wl,-z,relro,-z,now"
#
# $LEAD_SONAME
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:261
#     [doc] "Specifies the lead (or primary) compiled library file (.so) that the debian class applies its naming policy to given a recipe that packages multiple libraries."
#
# $LIBCEXTENSION [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:124
#     [_defaultval] ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:5
#     "-musl"
# pre-expansion value:
#   "-musl"
LIBCEXTENSION="-musl"
#
# $LIBCOVERRIDE [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:738
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:7
#     ":libc-musl"
# pre-expansion value:
#   ":libc-musl"
LIBCOVERRIDE=":libc-musl"
#
# $LIBC_DEPENDENCIES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:31
#     "    musl     musl-dbg     musl-dev     musl-utils     musl-utils-iconv     bsd-headers-dev     "
LIBC_DEPENDENCIES="    musl     musl-dbg     musl-dev     musl-utils     musl-utils-iconv     bsd-headers-dev     "
#
# $LICENSE [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:261
#     [_defaultval] "INVALID"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:263
#     [doc] "The list of source licenses for the recipe. Logical operators '&' or '|' and parentheses can be used."
# pre-expansion value:
#   "INVALID"
LICENSE="INVALID"
#
# $LICENSE_CREATE_PACKAGE [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/license.bbclass:10
#     [type] "boolean"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/license.bbclass:11
#     [_defaultval] "0"
# pre-expansion value:
#   "0"
LICENSE_CREATE_PACKAGE="0"
#
# $LICENSE_DIRECTORY
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/license.bbclass:6
#     [_defaultval] "${DEPLOY_DIR}/licenses"
LICENSE_DIRECTORY="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/licenses"
#
# $LICENSE_FILES_DIRECTORY
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/license.bbclass:13
#     [_defaultval] "${datadir}/licenses/"
LICENSE_FILES_DIRECTORY="/usr/share/licenses/"
#
# $LICENSE_PACKAGE_SUFFIX
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/license.bbclass:12
#     [_defaultval] "-lic"
LICENSE_PACKAGE_SUFFIX="-lic"
#
# $LICENSE_PATH [11 operations]
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:34
#     "${LAYERDIR}/licenses"
#   set data_smart.py:966 [expandVarref]
#     " /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/licenses"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/conf/layer.conf:19
#     "${LAYERDIR}/licenses"
#   set data_smart.py:966 [expandVarref]
#     " /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/licenses /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/licenses"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:22
#     "${LAYERDIR}/licenses"
#   set data_smart.py:966 [expandVarref]
#     " /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/licenses /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/licenses /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/licenses"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:12
#     "${LAYERDIR}/files/custom-licenses"
#   set data_smart.py:966 [expandVarref]
#     " /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/licenses /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/licenses /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/licenses /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/files/custom-licenses"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/layer.conf:13
#     "${LAYERDIR}/licenses"
#   set data_smart.py:966 [expandVarref]
#     " /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/licenses /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/licenses /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/licenses /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/files/custom-licenses /home/epple/projects/ramdisk/tme_usb_token/meta-java/licenses"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:264
#     [doc] "Path to additional licenses used during the build."
# pre-expansion value:
#   " /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/licenses /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/licenses /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/licenses /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/files/custom-licenses /home/epple/projects/ramdisk/tme_usb_token/meta-java/licenses"
LICENSE_PATH=" /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/licenses /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-python/licenses /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/licenses /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/files/custom-licenses /home/epple/projects/ramdisk/tme_usb_token/meta-java/licenses"
#
# $LICSSTATEDIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/license.bbclass:7
#     "${WORKDIR}/license-destdir/"
LICSSTATEDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/license-destdir/"
#
# $LIC_FILES_CHKSUM
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:262
#     [doc] "Checksums of the license text in the recipe source code."
#
# $LINKER_HASH_STYLE [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:589
#     [_defaultval] "gnu"
#   override[mipsarch]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:591
#     "sysv"
# pre-expansion value:
#   "gnu"
LINKER_HASH_STYLE="gnu"
#
# $LINKER_HASH_STYLE_mipsarch
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:591
#     "sysv"
LINKER_HASH_STYLE_mipsarch="sysv"
#
# $LINUXLIBCVERSION
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:24
#     "5.2%"
LINUXLIBCVERSION="5.2%"
#
# $LINUX_KERNEL_TYPE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:265
#     [doc] "Defines the kernel type to be used in assembling the configuration."
#
# $LINUX_VERSION
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:266
#     [doc] "The Linux version from kernel.org on which the Linux kernel image being built using the OpenEmbedded build system is based. You define this variable in the kernel recipe."
#
# $LINUX_VERSION_EXTENSION
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:267
#     [doc] "A string extension compiled into the version string of the Linux kernel built with the OpenEmbedded build system. You define this variable in the kernel recipe."
#
# $LLVMVERSION
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:29
#     "8.0.1"
LLVMVERSION="8.0.1"
#
# $LOCALCONF_VERSION [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:12
#     "1"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/sanity.conf:11
#     "1"
# pre-expansion value:
#   "1"
LOCALCONF_VERSION="1"
#
# $LOCALEBASEPN
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:588
#     [_defaultval] "${PN}"
LOCALEBASEPN="defaultpkgname"
#
# $LOCALE_SECTION
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:51
#     ""
LOCALE_SECTION=""
#
# $LOCALE_UTF8_IS_DEFAULT [3 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:10
#     "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:268
#     [doc] "If set, locale names are renamed such that those lacking an explicit encoding (e.g. en_US) will always be UTF-8, and non-UTF-8 encodings are renamed to, e.g., en_US.ISO-8859-1. Otherwise, the encoding is specified by glibc's SUPPORTED file. Not supported for precompiled locales."
#   override[class-nativesdk]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:11
#     "0"
# pre-expansion value:
#   "1"
LOCALE_UTF8_IS_DEFAULT="1"
#
# $LOCALE_UTF8_IS_DEFAULT_class-nativesdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:11
#     "0"
LOCALE_UTF8_IS_DEFAULT_class-nativesdk="0"
#
# $LOCALE_UTF8_ONLY
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:9
#     "0"
LOCALE_UTF8_ONLY="0"
#
# $LOGFIFO
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/logging.bbclass:6
#     "${T}/fifo.${@os.getpid()}"
LOGFIFO="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/temp/fifo.16342"
#
# $LOGNAME [2 operations]
#   from env data.py:112 [inheritFromOS]
#     "epple"
#   auto env export data.py:114 [inheritFromOS]
#     [export] "True"
# pre-expansion value:
#   "epple"
export LOGNAME="epple"
#
# $LOG_DIR [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:362
#     "${TMPDIR}/log"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:269
#     [doc] "Specifies the directory to which the OpenEmbedded build system writes overall log files. The default directory is ${TMPDIR}/log"
# pre-expansion value:
#   "${TMPDIR}/log"
LOG_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/log"
#
# $MACHINE [4 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:38
#     [_defaultval] "qemux86-64"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:272
#     "genericx86-64"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:273
#     [doc] "Specifies the target device for which the image is built. You define MACHINE in the conf/local.conf file in the Build Directory."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:844
#     [unexport] "1"
# pre-expansion value:
#   "genericx86-64"
unset MACHINE
#
# $MACHINEOVERRIDES [4 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:741
#     "${MACHINE}"
#   predot /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:17
#     "${@bb.utils.contains('TUNE_FEATURES', 'm32', 'x86:', '' ,d)}"
#   predot /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:29
#     "${@bb.utils.contains('TUNE_FEATURES', 'mx32', 'x86-x32:', '' ,d)}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:281
#     [doc] "Lists overrides specific to the current machine. By default, this list includes the value of MACHINE."
# pre-expansion value:
#   "${@bb.utils.contains('TUNE_FEATURES', 'mx32', 'x86-x32:', '' ,d)}${@bb.utils.contains('TUNE_FEATURES', 'm32', 'x86:', '' ,d)}${MACHINE}"
MACHINEOVERRIDES="genericx86-64"
#
# $MACHINE_ARCH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:151
#     "${@[d.getVar('TUNE_PKGARCH'), d.getVar('MACHINE')][bool(d.getVar('MACHINE'))].replace('-', '_')}"
MACHINE_ARCH="genericx86_64"
#
# $MACHINE_ESSENTIAL_EXTRA_RDEPENDS [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:104
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:274
#     [doc] "A list of required machine-specific packages to install as part of the image being built. Because this is a 'machine essential' variable, the list of packages are essential for the machine to boot."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:814
#     ""
# pre-expansion value:
#   ""
MACHINE_ESSENTIAL_EXTRA_RDEPENDS=""
#
# $MACHINE_ESSENTIAL_EXTRA_RRECOMMENDS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:275
#     [doc] "A list of recommended machine-specific packages to install as part of the image being built. Because this is a 'machine essential' variable, the list of packages are essential for the machine to boot."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:815
#     ""
# pre-expansion value:
#   ""
MACHINE_ESSENTIAL_EXTRA_RRECOMMENDS=""
#
# $MACHINE_EXTRA_RDEPENDS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:276
#     [doc] "A list of machine-specific packages to install as part of the image being built that are not essential for the machine to boot. However, the build process for more fully-featured images depends on the packages being present."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:812
#     ""
# pre-expansion value:
#   ""
MACHINE_EXTRA_RDEPENDS=""
#
# $MACHINE_EXTRA_RRECOMMENDS [3 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc:16
#     "kernel-modules linux-firmware"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:277
#     [doc] "A list of machine-specific packages to install as part of the image being built that are not essential for booting the machine. The image being built has no build dependencies on the packages in this list."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:813
#     ""
# pre-expansion value:
#   " kernel-modules linux-firmware"
MACHINE_EXTRA_RRECOMMENDS=" kernel-modules linux-firmware"
#
# $MACHINE_FEATURES [5 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc:9
#     "screen keyboard pci usbhost ext2 ext3 x86                      acpi serial usbgadget alsa"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc:3
#     "wifi efi pcbios"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:278
#     [doc] "Specifies the list of hardware features the MACHINE supports."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:807
#     ""
#   append utils.py:129 [features_backfill]
#     " rtc qemu-usermode"
# pre-expansion value:
#   " screen keyboard pci usbhost ext2 ext3 x86                      acpi serial usbgadget alsa wifi efi pcbios rtc qemu-usermode"
MACHINE_FEATURES=" screen keyboard pci usbhost ext2 ext3 x86                      acpi serial usbgadget alsa wifi efi pcbios rtc qemu-usermode"
#
# $MACHINE_FEATURES_BACKFILL [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:279
#     [doc] "Features to be added to MACHINE_FEATURES if not also present in MACHINE_FEATURES_BACKFILL_CONSIDERED. This variable is set in the meta/conf/bitbake.conf file and is not intended to be user-configurable."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:831
#     "rtc qemu-usermode"
# pre-expansion value:
#   "rtc qemu-usermode"
MACHINE_FEATURES_BACKFILL="rtc qemu-usermode"
#
# $MACHINE_FEATURES_BACKFILL_CONSIDERED [2 operations]
#   _append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:28
#     " ${@bb.utils.contains('TUNE_FEATURES', 'mx32', 'qemu-usermode', '', d)}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:280
#     [doc] "Features from MACHINE_FEATURES_BACKFILL that should not be backfilled (i.e. added to MACHINE_FEATURES) during the build."
# pre-expansion value:
#   " ${@bb.utils.contains('TUNE_FEATURES', 'mx32', 'qemu-usermode', '', d)}"
MACHINE_FEATURES_BACKFILL_CONSIDERED=" "
#
# $MACHINE_TASK_PROVIDER
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:778
#     "${DEFAULT_TASK_PROVIDER}"
MACHINE_TASK_PROVIDER="packagegroup-base"
#
# $MAINTAINER [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:262
#     "OE-Core Developers <openembedded-core@lists.openembedded.org>"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:8
#     "Poky <poky@yoctoproject.org>"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:282
#     [doc] "The email address of the distribution maintainer."
# pre-expansion value:
#   "Poky <poky@yoctoproject.org>"
MAINTAINER="Poky <poky@yoctoproject.org>"
#
# $MAKE [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:547
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:547
#     "make"
# pre-expansion value:
#   "make"
export MAKE="make"
#
# $METADATA_BRANCH
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/metadata_scm.bbclass:1
#     "${@base_detect_branch(d)}"
METADATA_BRANCH="HEAD"
#
# $METADATA_REVISION
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/metadata_scm.bbclass:2
#     "${@base_detect_revision(d)}"
METADATA_REVISION="5531ffc5668c2f24b9018a7b7174b5c77315a1cf"
#
# $MIRRORS [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:283
#     [doc] "Specifies additional paths from which the OpenEmbedded build system gets source code."
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/mirrors.bbclass:65
#     "${DEBIAN_MIRROR}	http://snapshot.debian.org/archive/debian/20180310T215105Z/pool \n ${DEBIAN_MIRROR}	http://snapshot.debian.org/archive/debian-archive/20120328T092752Z/debian/pool \n ${DEBIAN_MIRROR}	http://snapshot.debian.org/archive/debian-archive/20110127T084257Z/debian/pool \n ${DEBIAN_MIRROR}	http://snapshot.debian.org/archive/debian-archive/20090802T004153Z/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.de.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.au.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.cl.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.hr.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.fi.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.hk.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.hu.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.ie.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.it.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.jp.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.no.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.pl.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.ro.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.si.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.es.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.se.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.tr.debian.org/debian/pool \n ${GNU_MIRROR}	https://mirrors.kernel.org/gnu \n ${KERNELORG_MIRROR}	http://www.kernel.org/pub \n ${GNUPG_MIRROR}	ftp://ftp.gnupg.org/gcrypt \n ${GNUPG_MIRROR}	ftp://ftp.franken.de/pub/crypt/mirror/ftp.gnupg.org/gcrypt \n ${GNUPG_MIRROR}	ftp://mirrors.dotsrc.org/gcrypt \n ftp://dante.ctan.org/tex-archive ftp://ftp.fu-berlin.de/tex/CTAN \n ftp://dante.ctan.org/tex-archive http://sunsite.sut.ac.jp/pub/archives/ctan/ \n ftp://dante.ctan.org/tex-archive http://ctan.unsw.edu.au/ \n ftp://ftp.gnutls.org/gcrypt/gnutls ${GNUPG_MIRROR}/gnutls \n http://ftp.info-zip.org/pub/infozip/src/ http://mirror.switch.ch/ftp/mirror/infozip/src/ \n http://ftp.info-zip.org/pub/infozip/src/ ftp://sunsite.icm.edu.pl/pub/unix/archiving/info-zip/src/ \n http://www.mirrorservice.org/sites/lsof.itap.purdue.edu/pub/tools/unix/lsof/ http://www.mirrorservice.org/sites/lsof.itap.purdue.edu/pub/tools/unix/lsof/OLD/ \n ${APACHE_MIRROR}  http://www.us.apache.org/dist \n ${APACHE_MIRROR}  http://archive.apache.org/dist \n http://downloads.sourceforge.net/watchdog/ http://fossies.org/linux/misc/ \n ${SAVANNAH_GNU_MIRROR} http://download-mirror.savannah.gnu.org/releases \n ${SAVANNAH_NONGNU_MIRROR} http://download-mirror.savannah.nongnu.org/releases \n ftp://sourceware.org/pub http://mirrors.kernel.org/sourceware \n ftp://sourceware.org/pub http://gd.tuwien.ac.at/gnu/sourceware \n ftp://sourceware.org/pub http://ftp.gwdg.de/pub/linux/sources.redhat.com/sourceware \n cvs://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n svn://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n git://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n hg://.*/.*      http://downloads.yoctoproject.org/mirror/sources/ \n bzr://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n p4://.*/.*      http://downloads.yoctoproject.org/mirror/sources/ \n osc://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n https?$://.*/.* http://downloads.yoctoproject.org/mirror/sources/ \n ftp://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n npm://.*/?.*    http://downloads.yoctoproject.org/mirror/sources/ \n cvs://.*/.*     http://sources.openembedded.org/ \n svn://.*/.*     http://sources.openembedded.org/ \n git://.*/.*     http://sources.openembedded.org/ \n hg://.*/.*      http://sources.openembedded.org/ \n bzr://.*/.*     http://sources.openembedded.org/ \n p4://.*/.*      http://sources.openembedded.org/ \n osc://.*/.*     http://sources.openembedded.org/ \n https?$://.*/.* http://sources.openembedded.org/ \n ftp://.*/.*     http://sources.openembedded.org/ \n npm://.*/?.*    http://sources.openembedded.org/ \n ${CPAN_MIRROR}  http://cpan.metacpan.org/ \n ${CPAN_MIRROR}  http://search.cpan.org/CPAN/ \n "
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/mirrors.bbclass:76
#     "git://salsa.debian.org/.*     git://salsa.debian.org/PATH;protocol=https \n git://git.gnome.org/.*        git://gitlab.gnome.org/GNOME/PATH;protocol=https \n git://git.savannah.gnu.org/.* git://git.savannah.gnu.org/git/PATH;protocol=https \n git://git.yoctoproject.org/.* git://git.yoctoproject.org/git/PATH;protocol=https \n git://.*/.*                   git://HOST/PATH;protocol=https \n "
# pre-expansion value:
#   " ${DEBIAN_MIRROR}	http://snapshot.debian.org/archive/debian/20180310T215105Z/pool \n ${DEBIAN_MIRROR}	http://snapshot.debian.org/archive/debian-archive/20120328T092752Z/debian/pool \n ${DEBIAN_MIRROR}	http://snapshot.debian.org/archive/debian-archive/20110127T084257Z/debian/pool \n ${DEBIAN_MIRROR}	http://snapshot.debian.org/archive/debian-archive/20090802T004153Z/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.de.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.au.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.cl.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.hr.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.fi.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.hk.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.hu.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.ie.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.it.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.jp.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.no.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.pl.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.ro.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.si.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.es.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.se.debian.org/debian/pool \n ${DEBIAN_MIRROR}	http://ftp.tr.debian.org/debian/pool \n ${GNU_MIRROR}	https://mirrors.kernel.org/gnu \n ${KERNELORG_MIRROR}	http://www.kernel.org/pub \n ${GNUPG_MIRROR}	ftp://ftp.gnupg.org/gcrypt \n ${GNUPG_MIRROR}	ftp://ftp.franken.de/pub/crypt/mirror/ftp.gnupg.org/gcrypt \n ${GNUPG_MIRROR}	ftp://mirrors.dotsrc.org/gcrypt \n ftp://dante.ctan.org/tex-archive ftp://ftp.fu-berlin.de/tex/CTAN \n ftp://dante.ctan.org/tex-archive http://sunsite.sut.ac.jp/pub/archives/ctan/ \n ftp://dante.ctan.org/tex-archive http://ctan.unsw.edu.au/ \n ftp://ftp.gnutls.org/gcrypt/gnutls ${GNUPG_MIRROR}/gnutls \n http://ftp.info-zip.org/pub/infozip/src/ http://mirror.switch.ch/ftp/mirror/infozip/src/ \n http://ftp.info-zip.org/pub/infozip/src/ ftp://sunsite.icm.edu.pl/pub/unix/archiving/info-zip/src/ \n http://www.mirrorservice.org/sites/lsof.itap.purdue.edu/pub/tools/unix/lsof/ http://www.mirrorservice.org/sites/lsof.itap.purdue.edu/pub/tools/unix/lsof/OLD/ \n ${APACHE_MIRROR}  http://www.us.apache.org/dist \n ${APACHE_MIRROR}  http://archive.apache.org/dist \n http://downloads.sourceforge.net/watchdog/ http://fossies.org/linux/misc/ \n ${SAVANNAH_GNU_MIRROR} http://download-mirror.savannah.gnu.org/releases \n ${SAVANNAH_NONGNU_MIRROR} http://download-mirror.savannah.nongnu.org/releases \n ftp://sourceware.org/pub http://mirrors.kernel.org/sourceware \n ftp://sourceware.org/pub http://gd.tuwien.ac.at/gnu/sourceware \n ftp://sourceware.org/pub http://ftp.gwdg.de/pub/linux/sources.redhat.com/sourceware \n cvs://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n svn://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n git://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n hg://.*/.*      http://downloads.yoctoproject.org/mirror/sources/ \n bzr://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n p4://.*/.*      http://downloads.yoctoproject.org/mirror/sources/ \n osc://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n https?$://.*/.* http://downloads.yoctoproject.org/mirror/sources/ \n ftp://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n npm://.*/?.*    http://downloads.yoctoproject.org/mirror/sources/ \n cvs://.*/.*     http://sources.openembedded.org/ \n svn://.*/.*     http://sources.openembedded.org/ \n git://.*/.*     http://sources.openembedded.org/ \n hg://.*/.*      http://sources.openembedded.org/ \n bzr://.*/.*     http://sources.openembedded.org/ \n p4://.*/.*      http://sources.openembedded.org/ \n osc://.*/.*     http://sources.openembedded.org/ \n https?$://.*/.* http://sources.openembedded.org/ \n ftp://.*/.*     http://sources.openembedded.org/ \n npm://.*/?.*    http://sources.openembedded.org/ \n ${CPAN_MIRROR}  http://cpan.metacpan.org/ \n ${CPAN_MIRROR}  http://search.cpan.org/CPAN/ \n  git://salsa.debian.org/.*     git://salsa.debian.org/PATH;protocol=https \n git://git.gnome.org/.*        git://gitlab.gnome.org/GNOME/PATH;protocol=https \n git://git.savannah.gnu.org/.* git://git.savannah.gnu.org/git/PATH;protocol=https \n git://git.yoctoproject.org/.* git://git.yoctoproject.org/git/PATH;protocol=https \n git://.*/.*                   git://HOST/PATH;protocol=https \n "
MIRRORS=" http://ftp.debian.org/debian/pool	http://snapshot.debian.org/archive/debian/20180310T215105Z/pool \n http://ftp.debian.org/debian/pool	http://snapshot.debian.org/archive/debian-archive/20120328T092752Z/debian/pool \n http://ftp.debian.org/debian/pool	http://snapshot.debian.org/archive/debian-archive/20110127T084257Z/debian/pool \n http://ftp.debian.org/debian/pool	http://snapshot.debian.org/archive/debian-archive/20090802T004153Z/debian/pool \n http://ftp.debian.org/debian/pool	http://ftp.de.debian.org/debian/pool \n http://ftp.debian.org/debian/pool	http://ftp.au.debian.org/debian/pool \n http://ftp.debian.org/debian/pool	http://ftp.cl.debian.org/debian/pool \n http://ftp.debian.org/debian/pool	http://ftp.hr.debian.org/debian/pool \n http://ftp.debian.org/debian/pool	http://ftp.fi.debian.org/debian/pool \n http://ftp.debian.org/debian/pool	http://ftp.hk.debian.org/debian/pool \n http://ftp.debian.org/debian/pool	http://ftp.hu.debian.org/debian/pool \n http://ftp.debian.org/debian/pool	http://ftp.ie.debian.org/debian/pool \n http://ftp.debian.org/debian/pool	http://ftp.it.debian.org/debian/pool \n http://ftp.debian.org/debian/pool	http://ftp.jp.debian.org/debian/pool \n http://ftp.debian.org/debian/pool	http://ftp.no.debian.org/debian/pool \n http://ftp.debian.org/debian/pool	http://ftp.pl.debian.org/debian/pool \n http://ftp.debian.org/debian/pool	http://ftp.ro.debian.org/debian/pool \n http://ftp.debian.org/debian/pool	http://ftp.si.debian.org/debian/pool \n http://ftp.debian.org/debian/pool	http://ftp.es.debian.org/debian/pool \n http://ftp.debian.org/debian/pool	http://ftp.se.debian.org/debian/pool \n http://ftp.debian.org/debian/pool	http://ftp.tr.debian.org/debian/pool \n https://ftp.gnu.org/gnu	https://mirrors.kernel.org/gnu \n https://cdn.kernel.org/pub	http://www.kernel.org/pub \n https://www.gnupg.org/ftp/gcrypt	ftp://ftp.gnupg.org/gcrypt \n https://www.gnupg.org/ftp/gcrypt	ftp://ftp.franken.de/pub/crypt/mirror/ftp.gnupg.org/gcrypt \n https://www.gnupg.org/ftp/gcrypt	ftp://mirrors.dotsrc.org/gcrypt \n ftp://dante.ctan.org/tex-archive ftp://ftp.fu-berlin.de/tex/CTAN \n ftp://dante.ctan.org/tex-archive http://sunsite.sut.ac.jp/pub/archives/ctan/ \n ftp://dante.ctan.org/tex-archive http://ctan.unsw.edu.au/ \n ftp://ftp.gnutls.org/gcrypt/gnutls https://www.gnupg.org/ftp/gcrypt/gnutls \n http://ftp.info-zip.org/pub/infozip/src/ http://mirror.switch.ch/ftp/mirror/infozip/src/ \n http://ftp.info-zip.org/pub/infozip/src/ ftp://sunsite.icm.edu.pl/pub/unix/archiving/info-zip/src/ \n http://www.mirrorservice.org/sites/lsof.itap.purdue.edu/pub/tools/unix/lsof/ http://www.mirrorservice.org/sites/lsof.itap.purdue.edu/pub/tools/unix/lsof/OLD/ \n https://archive.apache.org/dist  http://www.us.apache.org/dist \n https://archive.apache.org/dist  http://archive.apache.org/dist \n http://downloads.sourceforge.net/watchdog/ http://fossies.org/linux/misc/ \n https://download.savannah.gnu.org/releases http://download-mirror.savannah.gnu.org/releases \n https://download.savannah.nongnu.org/releases http://download-mirror.savannah.nongnu.org/releases \n ftp://sourceware.org/pub http://mirrors.kernel.org/sourceware \n ftp://sourceware.org/pub http://gd.tuwien.ac.at/gnu/sourceware \n ftp://sourceware.org/pub http://ftp.gwdg.de/pub/linux/sources.redhat.com/sourceware \n cvs://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n svn://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n git://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n hg://.*/.*      http://downloads.yoctoproject.org/mirror/sources/ \n bzr://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n p4://.*/.*      http://downloads.yoctoproject.org/mirror/sources/ \n osc://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n https?\$://.*/.* http://downloads.yoctoproject.org/mirror/sources/ \n ftp://.*/.*     http://downloads.yoctoproject.org/mirror/sources/ \n npm://.*/?.*    http://downloads.yoctoproject.org/mirror/sources/ \n cvs://.*/.*     http://sources.openembedded.org/ \n svn://.*/.*     http://sources.openembedded.org/ \n git://.*/.*     http://sources.openembedded.org/ \n hg://.*/.*      http://sources.openembedded.org/ \n bzr://.*/.*     http://sources.openembedded.org/ \n p4://.*/.*      http://sources.openembedded.org/ \n osc://.*/.*     http://sources.openembedded.org/ \n https?\$://.*/.* http://sources.openembedded.org/ \n ftp://.*/.*     http://sources.openembedded.org/ \n npm://.*/?.*    http://sources.openembedded.org/ \n https://search.cpan.org/CPAN  http://cpan.metacpan.org/ \n https://search.cpan.org/CPAN  http://search.cpan.org/CPAN/ \n  git://salsa.debian.org/.*     git://salsa.debian.org/PATH;protocol=https \n git://git.gnome.org/.*        git://gitlab.gnome.org/GNOME/PATH;protocol=https \n git://git.savannah.gnu.org/.* git://git.savannah.gnu.org/git/PATH;protocol=https \n git://git.yoctoproject.org/.* git://git.yoctoproject.org/git/PATH;protocol=https \n git://.*/.*                   git://HOST/PATH;protocol=https \n "
#
# $MLPREFIX [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:284
#     [doc] "Specifies a prefix has been added to PN to create a special version of a recipe or package, such as a Multilib version."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:890
#     [_defaultval] ""
# pre-expansion value:
#   ""
MLPREFIX=""
#
# $MODULE_TARBALL_DEPLOY
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:285
#     [doc] "Controls creation of the modules-*.tgz file. Set this variable to "0" to disable creation of this file, which contains all of the kernel modules resulting from a kernel build."
#
# $MULTILIB_VARIANTS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:891
#     [_defaultval] ""
MULTILIB_VARIANTS=""
#
# $MULTIMACH_TARGET_SYS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:158
#     "${PACKAGE_ARCH}${TARGET_VENDOR}-${TARGET_OS}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:286
#     [doc] "Separates files for different machines such that you can build for multiple target machines using the same output directories."
# pre-expansion value:
#   "${PACKAGE_ARCH}${TARGET_VENDOR}-${TARGET_OS}"
MULTIMACH_TARGET_SYS="core2-64-poky-linux-musl"
#
# $MULTI_PROVIDER_WHITELIST
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:278
#     "virtual/libintl virtual/libintl-native virtual/nativesdk-libintl virtual/xserver virtual/update-alternatives-native virtual/update-alternatives"
MULTI_PROVIDER_WHITELIST="virtual/libintl virtual/libintl-native virtual/nativesdk-libintl virtual/xserver virtual/update-alternatives-native virtual/update-alternatives"
#
# $NATIVELSBSTRING [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:290
#     [doc] "A string identifying the host distribution."
#   set base.bbclass:235 [base_eventhandler]
#     "debian-10"
#   set uninative.bbclass:130 [enable_uninative]
#     "universal"
# pre-expansion value:
#   "universal"
NATIVELSBSTRING="universal"
#
# $NM [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:531
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:531
#     "${HOST_PREFIX}nm"
# pre-expansion value:
#   "${HOST_PREFIX}nm"
export NM="x86_64-poky-linux-musl-nm"
#
# $NO32LIBS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:28
#     [_defaultval] "1"
NO32LIBS="1"
#
# $NO_RECOMMENDATIONS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:291
#     [doc] "When set to '1', no recommended packages will be installed. Realize that some recommended packages might be required for certain system functionality, such as kernel-modules. It is up to the user to add packages to IMAGE_INSTALL as needed."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:839
#     [_defaultval] ""
# pre-expansion value:
#   ""
NO_RECOMMENDATIONS=""
#
# $OBJCOPY [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:528
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:528
#     "${HOST_PREFIX}objcopy"
# pre-expansion value:
#   "${HOST_PREFIX}objcopy"
export OBJCOPY="x86_64-poky-linux-musl-objcopy"
#
# $OBJDUMP [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:529
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:529
#     "${HOST_PREFIX}objdump"
# pre-expansion value:
#   "${HOST_PREFIX}objdump"
export OBJDUMP="x86_64-poky-linux-musl-objdump"
#
# $OEINCLUDELOGS
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:3
#     "yes"
OEINCLUDELOGS="yes"
#
# $OELAYOUT_ABI [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/abi_version.conf:7
#     "12"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:73
#     "12"
# pre-expansion value:
#   "12"
OELAYOUT_ABI="12"
#
# $OEROOT
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:298
#     [doc] "The directory from which the top-level build environment setup script is sourced."
#
# $OES_BITBAKE_CONF
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:801
#     "1"
OES_BITBAKE_CONF="1"
#
# $OE_BINCONFIG_EXTRA_MANGLE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:295
#     [doc] "When a recipe inherits the binconfig.bbclass class, this variable specifies additional arguments passed to the "sed" command."
#
# $OE_EXTRA_IMPORTS
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:13
#     ""
OE_EXTRA_IMPORTS=""
#
# $OE_IMPORTED
#   immediate /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:43
#     "${@oe_import(d)}"
OE_IMPORTED=""
#
# $OE_IMPORTS [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:296
#     [doc] "An internal variable used to tell the OpenEmbedded build system what Python modules to import for every Python function run by the system."
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:15
#     "os sys time oe.path oe.utils oe.types oe.package oe.packagegroup oe.sstatesig oe.lsb oe.cachedpath oe.license ${OE_EXTRA_IMPORTS}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:16
#     [type] "list"
# pre-expansion value:
#   " os sys time oe.path oe.utils oe.types oe.package oe.packagegroup oe.sstatesig oe.lsb oe.cachedpath oe.license ${OE_EXTRA_IMPORTS}"
OE_IMPORTS=" os sys time oe.path oe.utils oe.types oe.package oe.packagegroup oe.sstatesig oe.lsb oe.cachedpath oe.license "
#
# $OE_TERMINAL [4 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:297
#     [doc] "Controls how the OpenEmbedded build system spawns interactive terminals on the host development system."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/terminal.bbclass:1
#     "auto"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/terminal.bbclass:2
#     [type] "choice"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/terminal.bbclass:4
#     [choices] "auto none                         ${@oe_terminal_prioritized()}"
# pre-expansion value:
#   "auto"
OE_TERMINAL="auto"
#
# $OE_TERMINAL_EXPORTS [2 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/terminal.bbclass:6
#     "EXTRA_OEMAKE CACHED_CONFIGUREVARS CONFIGUREOPTS EXTRA_OECONF"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/terminal.bbclass:7
#     [type] "list"
# pre-expansion value:
#   " EXTRA_OEMAKE CACHED_CONFIGUREVARS CONFIGUREOPTS EXTRA_OECONF"
OE_TERMINAL_EXPORTS=" EXTRA_OEMAKE CACHED_CONFIGUREVARS CONFIGUREOPTS EXTRA_OECONF"
#
# $OLDEST_KERNEL [6 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:429
#     "3.2.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:299
#     [doc] "Declares the oldest version of the Linux kernel that the produced binaries must support."
#   override[aarch64]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:430
#     "3.14"
#   override[nios2]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:431
#     "3.19"
#   override[riscv32]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:432
#     "4.15"
#   override[riscv64]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:433
#     "4.15"
# pre-expansion value:
#   "3.2.0"
OLDEST_KERNEL="3.2.0"
#
# $OLDEST_KERNEL_aarch64
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:430
#     "3.14"
OLDEST_KERNEL_aarch64="3.14"
#
# $OLDEST_KERNEL_nios2
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:431
#     "3.19"
OLDEST_KERNEL_nios2="3.19"
#
# $OLDEST_KERNEL_riscv32
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:432
#     "4.15"
OLDEST_KERNEL_riscv32="4.15"
#
# $OLDEST_KERNEL_riscv64
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:433
#     "4.15"
OLDEST_KERNEL_riscv64="4.15"
#
# $OPKGBUILDCMD
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_ipk.bbclass:11
#     [_defaultval] "opkg-build -Z xz -a "${XZ_DEFAULTS}""
OPKGBUILDCMD="opkg-build -Z xz -a \"--memlimit=50% --threads=256\""
#
# $OPKGLIBDIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_ipk.bbclass:17
#     [_defaultval] "${localstatedir}/lib"
OPKGLIBDIR="/var/lib"
#
# $OPKG_ARGS [3 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_ipk.bbclass:13
#     "--force_postinstall --prefer-arch-to-version"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_ipk.bbclass:14
#     "${@['', '--no-install-recommends'][d.getVar("NO_RECOMMENDATIONS") == "1"]}"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_ipk.bbclass:15
#     "${@['', '--add-exclude ' + ' --add-exclude '.join((d.getVar('PACKAGE_EXCLUDE') or "").split())][(d.getVar("PACKAGE_EXCLUDE") or "").strip() != ""]}"
# pre-expansion value:
#   " --force_postinstall --prefer-arch-to-version ${@['', '--no-install-recommends'][d.getVar("NO_RECOMMENDATIONS") == "1"]} ${@['', '--add-exclude ' + ' --add-exclude '.join((d.getVar('PACKAGE_EXCLUDE') or "").split())][(d.getVar("PACKAGE_EXCLUDE") or "").strip() != ""]}"
OPKG_ARGS=" --force_postinstall --prefer-arch-to-version  "
#
# $OVERRIDES [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:737
#     "${TARGET_OS}:${TRANSLATED_TARGET_ARCH}:pn-${PN}:${MACHINEOVERRIDES}:${DISTROOVERRIDES}:${CLASSOVERRIDE}${LIBCOVERRIDE}:forcevariable"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:300
#     [doc] "BitBake uses OVERRIDES to control what variables are overridden after BitBake parses recipes and configuration files."
# pre-expansion value:
#   "${TARGET_OS}:${TRANSLATED_TARGET_ARCH}:pn-${PN}:${MACHINEOVERRIDES}:${DISTROOVERRIDES}:${CLASSOVERRIDE}${LIBCOVERRIDE}:forcevariable"
OVERRIDES="linux-musl:x86-64:pn-defaultpkgname:genericx86-64:poky:poky-tiny:class-target:libc-musl:forcevariable"
#
# $P [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:208
#     "${PN}-${PV}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:304
#     [doc] "The recipe name and version. P is comprised of ${PN}-${PV}."
# pre-expansion value:
#   "${PN}-${PV}"
P="defaultpkgname-1.0"
#
# $PACKAGEBUILDPKGD
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:2142
#     "                 package_prepare_pkgdata                 perform_packagecopy                 ${PACKAGE_PREPROCESS_FUNCS}                 split_and_strip_files                 fixup_perms                 "
PACKAGEBUILDPKGD="                 package_prepare_pkgdata                 perform_packagecopy                                  split_and_strip_files                 fixup_perms                 "
#
# $PACKAGECONFIG [4 operations]
#   _append[pn-qemu-system-native] /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:242
#     " sdl"
#   _remove[pn-opkg-utils] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:124
#     "python"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:314
#     [doc] "This variable provides a means of enabling or disabling features of a recipe on a per-recipe basis."
#   override[pn-btrfs-tools]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:271
#     ""
# pre-expansion value:
#   ""
PACKAGECONFIG=""
#
# $PACKAGECONFIG_CONFARGS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:18
#     [_defaultval] ""
PACKAGECONFIG_CONFARGS=""
#
# $PACKAGECONFIG_pn-btrfs-tools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:271
#     ""
PACKAGECONFIG_pn-btrfs-tools=""
#
# $PACKAGEFUNCS
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:2156
#     "                 package_fixsymlinks                 package_name_hook                 package_do_filedeps                 package_do_shlibs                 package_do_pkgconfig                 read_shlibdeps                 package_depchains                 emit_pkgdata"
PACKAGEFUNCS="                  package_fixsymlinks                 package_name_hook                 package_do_filedeps                 package_do_shlibs                 package_do_pkgconfig                 read_shlibdeps                 package_depchains                 emit_pkgdata"
#
# $PACKAGEINDEXDEPS [2 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_ipk.bbclass:276
#     "opkg-utils-native:do_populate_sysroot"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_ipk.bbclass:277
#     "opkg-native:do_populate_sysroot"
# pre-expansion value:
#   " opkg-utils-native:do_populate_sysroot opkg-native:do_populate_sysroot"
PACKAGEINDEXDEPS=" opkg-utils-native:do_populate_sysroot opkg-native:do_populate_sysroot"
#
# $PACKAGES [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:292
#     "${PN}-src ${PN}-dbg ${PN}-staticdev ${PN}-dev ${PN}-doc ${PN}-locale ${PACKAGE_BEFORE_PN} ${PN}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:315
#     [doc] "The list of packages to be created from the recipe."
# pre-expansion value:
#   "${PN}-src ${PN}-dbg ${PN}-staticdev ${PN}-dev ${PN}-doc ${PN}-locale ${PACKAGE_BEFORE_PN} ${PN}"
PACKAGES="defaultpkgname-src defaultpkgname-dbg defaultpkgname-staticdev defaultpkgname-dev defaultpkgname-doc defaultpkgname-locale  defaultpkgname"
#
# $PACKAGESPLITFUNCS
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:2146
#     "                 package_do_split_locales                 populate_packages"
PACKAGESPLITFUNCS="                 package_do_split_locales                 populate_packages"
#
# $PACKAGES_DYNAMIC [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:293
#     "^${PN}-locale-.*"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:316
#     [doc] "A promise that your recipe satisfies runtime dependencies for optional modules that are found in other recipes."
# pre-expansion value:
#   "^${PN}-locale-.*"
PACKAGES_DYNAMIC="^defaultpkgname-locale-.*"
#
# $PACKAGEVARS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:2119
#     "FILES RDEPENDS RRECOMMENDS SUMMARY DESCRIPTION RSUGGESTS RPROVIDES RCONFLICTS PKG ALLOW_EMPTY pkg_postinst pkg_postrm pkg_postinst_ontarget INITSCRIPT_NAME INITSCRIPT_PARAMS DEBIAN_NOAUTONAME ALTERNATIVE PKGE PKGV PKGR USERADD_PARAM GROUPADD_PARAM CONFFILES SYSTEMD_SERVICE LICENSE SECTION pkg_preinst pkg_prerm RREPLACES GROUPMEMS_PARAM SYSTEMD_AUTO_ENABLE SKIP_FILEDEPS PRIVATE_LIBS"
PACKAGEVARS="FILES RDEPENDS RRECOMMENDS SUMMARY DESCRIPTION RSUGGESTS RPROVIDES RCONFLICTS PKG ALLOW_EMPTY pkg_postinst pkg_postrm pkg_postinst_ontarget INITSCRIPT_NAME INITSCRIPT_PARAMS DEBIAN_NOAUTONAME ALTERNATIVE PKGE PKGV PKGR USERADD_PARAM GROUPADD_PARAM CONFFILES SYSTEMD_SERVICE LICENSE SECTION pkg_preinst pkg_prerm RREPLACES GROUPMEMS_PARAM SYSTEMD_AUTO_ENABLE SKIP_FILEDEPS PRIVATE_LIBS"
#
# $PACKAGE_ARCH [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:150
#     [_defaultval] "${TUNE_PKGARCH}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:305
#     [doc] "The architecture of the resulting package or packages."
# pre-expansion value:
#   "${TUNE_PKGARCH}"
PACKAGE_ARCH="core2-64"
#
# $PACKAGE_ARCHS [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:153
#     "all any noarch ${PACKAGE_EXTRA_ARCHS} ${MACHINE_ARCH}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:156
#     [vardepsexclude] "MACHINE_ARCH"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:306
#     [doc] "A list of architectures compatible with the given target in order of priority."
# pre-expansion value:
#   "all any noarch ${PACKAGE_EXTRA_ARCHS} ${MACHINE_ARCH}"
PACKAGE_ARCHS="all any noarch x86_64 core2-64 genericx86_64"
#
# $PACKAGE_BEFORE_PN [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:291
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:307
#     [doc] "Enables easily adding packages to PACKAGES before ${PN} so that the packages can pick up files that would normally be included in the default package."
# pre-expansion value:
#   ""
PACKAGE_BEFORE_PN=""
#
# $PACKAGE_CLASSES [4 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:108
#     "package_rpm"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:287
#     "package_ipk"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf:21
#     "package_ipk"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:308
#     [doc] "This variable specifies the package manager to use when packaging data. It is set in the conf/local.conf file in the Build Directory."
# pre-expansion value:
#   "package_ipk"
PACKAGE_CLASSES="package_ipk"
#
# $PACKAGE_DEBUG_SPLIT_STYLE
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:289
#     "debug-with-srcpkg"
PACKAGE_DEBUG_SPLIT_STYLE="debug-with-srcpkg"
#
# $PACKAGE_DEPENDS [2 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:57
#     "rpm-native dwarfsrcfiles-native"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:241
#     "file-native"
# pre-expansion value:
#   " rpm-native dwarfsrcfiles-native file-native"
PACKAGE_DEPENDS=" rpm-native dwarfsrcfiles-native file-native"
#
# $PACKAGE_EXCLUDE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:309
#     [doc] "Packages to exclude from the installation. If a listed package is required, an error is generated."
#
# $PACKAGE_EXTRA_ARCHS [10 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:152
#     [_defaultval] "${PACKAGE_EXTRA_ARCHS_tune-${DEFAULTTUNE}}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:310
#     [doc] "Specifies the list of architectures compatible with the device CPU. This variable is useful when you build for several different devices that use miscellaneous processors."
#   override[tune-x86]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:42
#     "${TUNE_PKGARCH_tune-x86}"
#   override[tune-x86-64]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:48
#     "${TUNE_PKGARCH_tune-x86-64}"
#   override[tune-x86-64-x32]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:54
#     "${TUNE_PKGARCH_tune-x86-64-x32}"
#   override[tune-i586]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i586.inc:14
#     "${PACKAGE_EXTRA_ARCHS_tune-x86} i586"
#   override[tune-i686]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i686.inc:27
#     "${PACKAGE_EXTRA_ARCHS_tune-i586} i686"
#   override[tune-core2-32]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:23
#     "${PACKAGE_EXTRA_ARCHS_tune-i686} core2-32"
#   override[tune-core2-64]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:30
#     "${PACKAGE_EXTRA_ARCHS_tune-x86-64} core2-64"
#   override[tune-core2-64-x32]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:37
#     "${PACKAGE_EXTRA_ARCHS_tune-x86-64-x32} core2-64-x32"
# pre-expansion value:
#   "${PACKAGE_EXTRA_ARCHS_tune-${DEFAULTTUNE}}"
PACKAGE_EXTRA_ARCHS="x86_64 core2-64"
#
# $PACKAGE_EXTRA_ARCHS_tune-core2-32
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:23
#     "${PACKAGE_EXTRA_ARCHS_tune-i686} core2-32"
PACKAGE_EXTRA_ARCHS_tune-core2-32="x86 i586 i686 core2-32"
#
# $PACKAGE_EXTRA_ARCHS_tune-core2-64
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:30
#     "${PACKAGE_EXTRA_ARCHS_tune-x86-64} core2-64"
PACKAGE_EXTRA_ARCHS_tune-core2-64="x86_64 core2-64"
#
# $PACKAGE_EXTRA_ARCHS_tune-core2-64-x32
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:37
#     "${PACKAGE_EXTRA_ARCHS_tune-x86-64-x32} core2-64-x32"
PACKAGE_EXTRA_ARCHS_tune-core2-64-x32="x86_64_x32 core2-64-x32"
#
# $PACKAGE_EXTRA_ARCHS_tune-i586
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i586.inc:14
#     "${PACKAGE_EXTRA_ARCHS_tune-x86} i586"
PACKAGE_EXTRA_ARCHS_tune-i586="x86 i586"
#
# $PACKAGE_EXTRA_ARCHS_tune-i686
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i686.inc:27
#     "${PACKAGE_EXTRA_ARCHS_tune-i586} i686"
PACKAGE_EXTRA_ARCHS_tune-i686="x86 i586 i686"
#
# $PACKAGE_EXTRA_ARCHS_tune-x86
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:42
#     "${TUNE_PKGARCH_tune-x86}"
PACKAGE_EXTRA_ARCHS_tune-x86="x86"
#
# $PACKAGE_EXTRA_ARCHS_tune-x86-64
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:48
#     "${TUNE_PKGARCH_tune-x86-64}"
PACKAGE_EXTRA_ARCHS_tune-x86-64="x86_64"
#
# $PACKAGE_EXTRA_ARCHS_tune-x86-64-x32
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:54
#     "${TUNE_PKGARCH_tune-x86-64-x32}"
PACKAGE_EXTRA_ARCHS_tune-x86-64-x32="x86_64_x32"
#
# $PACKAGE_GROUP
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:311
#     [doc] "Defines one or more packages to include in an image when a specific item is included in IMAGE_FEATURES."
#
# $PACKAGE_INSTALL [3 operations]
#   _append[pn-trustx-cml-initramfs] /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:297
#     "${INITRAMFS_MODULES}"
#   _append[pn-trustx-installer-initramfs] /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:298
#     "${INITRAMFS_MODULES}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:312
#     [doc] "List of the packages to be installed into the image. The variable is generally not user-defined and uses IMAGE_INSTALL as part of the list."
# pre-expansion value:
#   ""
PACKAGE_INSTALL=""
#
# $PACKAGE_INSTALL_ATTEMPTONLY
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:313
#     [doc] "List of packages attempted to be installed. If a listed package fails to install, the build system does not generate an error. This variable is generally not user-defined."
#
# $PACKAGE_PREPROCESS_FUNCS
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:2134
#     ""
PACKAGE_PREPROCESS_FUNCS=""
#
# $PACKAGE_WRITE_DEPS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:65
#     [_defaultval] ""
PACKAGE_WRITE_DEPS=""
#
# $PARALLEL_MAKE [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:317
#     [doc] "Specifies extra options that are passed to the make command during the compile tasks. This variable is usually in the form -j 4, where the number represents the maximum number of parallel threads make can run."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:793
#     "-j ${@oe.utils.cpu_count()}"
# pre-expansion value:
#   "-j ${@oe.utils.cpu_count()}"
PARALLEL_MAKE="-j 256"
#
# $PARALLEL_MAKEINST [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:602
#     [_defaultval] "${PARALLEL_MAKE}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:318
#     [doc] "Extra options passed to the make install command during the do_install task in order to specify parallel installation."
# pre-expansion value:
#   "${PARALLEL_MAKE}"
PARALLEL_MAKEINST="-j 256"
#
# $PATCHDEPENDENCY [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/patch.bbclass:6
#     "${PATCHTOOL}-native:do_populate_sysroot"
#   _append[class-target] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/patch.bbclass:13
#     " patch-replacement-native:do_populate_sysroot"
# pre-expansion value:
#   "${PATCHTOOL}-native:do_populate_sysroot patch-replacement-native:do_populate_sysroot"
PATCHDEPENDENCY="quilt-native:do_populate_sysroot patch-replacement-native:do_populate_sysroot"
#
# $PATCHRESOLVE [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:557
#     "noop"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:185
#     "noop"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:319
#     [doc] "Enable or disable interactive patch resolution."
# pre-expansion value:
#   "noop"
PATCHRESOLVE="noop"
#
# $PATCHTOOL [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:556
#     "quilt"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:320
#     [doc] "Specifies the utility used to apply patches for a recipe during do_patch."
# pre-expansion value:
#   "quilt"
PATCHTOOL="quilt"
#
# $PATCH_GIT_USER_EMAIL
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/patch.bbclass:16
#     "oe.patch@oe"
PATCH_GIT_USER_EMAIL="oe.patch@oe"
#
# $PATCH_GIT_USER_NAME
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/patch.bbclass:15
#     "OpenEmbedded"
PATCH_GIT_USER_NAME="OpenEmbedded"
#
# $PATH [7 operations]
#   from env data.py:112 [inheritFromOS]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/scripts:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/bitbake/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/sbin:/usr/sbin:/usr/local/sbin"
#   auto env export data.py:114 [inheritFromOS]
#     [export] "True"
#   immediate /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:100
#     "${@os.path.dirname(bb.utils.which(d.getVar('PATH'),'bitbake'))}:${HOSTTOOLS_DIR}"
#   _prepend /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:473
#     "${COREBASE}/scripts:${STAGING_BINDIR_TOOLCHAIN}:${STAGING_BINDIR_CROSS}:${STAGING_DIR_NATIVE}${sbindir_native}:${STAGING_BINDIR_NATIVE}:${STAGING_DIR_NATIVE}${base_sbindir_native}:${STAGING_DIR_NATIVE}${base_bindir_native}:"
#   exported ast.py:55 [eval]
#     [export] "1"
#   _prepend /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:94
#     "${@extra_path_elements(d)}"
#   prepend uninative.bbclass:136 [enable_uninative]
#     "${STAGING_DIR}-uninative/${BUILD_ARCH}-linux${bindir_native}:"
# pre-expansion value:
#   "${STAGING_DIR}-uninative/${BUILD_ARCH}-linux${bindir_native}:${@extra_path_elements(d)}${COREBASE}/scripts:${STAGING_BINDIR_TOOLCHAIN}:${STAGING_BINDIR_CROSS}:${STAGING_DIR_NATIVE}${sbindir_native}:${STAGING_BINDIR_NATIVE}:${STAGING_DIR_NATIVE}${base_sbindir_native}:${STAGING_DIR_NATIVE}${base_bindir_native}:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/bitbake/bin:${HOSTTOOLS_DIR}"
export PATH="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/sysroots-uninative/x86_64-linux/usr/bin:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/scripts:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/bin/x86_64-poky-linux-musl:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/usr/bin/crossscripts:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/sbin:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/bin:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/sbin:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/bin:/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/bitbake/bin:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/hosttools"
#
# $PE [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:205
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:321
#     [doc] "The epoch of the recipe. The default value is '0'. The field is used to make upgrades possible when the versioning scheme changes in some backwards incompatible way."
# pre-expansion value:
#   ""
PE=""
#
# $PERSISTENT_DIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:361
#     "${TOPDIR}/cache"
PERSISTENT_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/cache"
#
# $PF [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:206
#     "${PN}-${EXTENDPE}${PV}-${PR}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:322
#     [doc] "Specifies the recipe or package name and includes all version and revision numbers. This variable is comprised of ${PN}-${EXTENDPE}${PV}-${PR}."
# pre-expansion value:
#   "${PN}-${EXTENDPE}${PV}-${PR}"
PF="defaultpkgname-1.0-r0"
#
# $PIXBUF_PACKAGES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:323
#     [doc] "When a recipe inherits the pixbufcache class, this variable identifies packages that contain the pixbuf loaders used with gdk-pixbuf."
#
# $PKGD [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:324
#     [doc] "Points to the destination directory for files to be packaged before they are split into individual packages."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:48
#     "${WORKDIR}/package"
# pre-expansion value:
#   "${WORKDIR}/package"
PKGD="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/package"
#
# $PKGDATA_DIR [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:414
#     "${TMPDIR}/pkgdata/${MACHINE}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:325
#     [doc] "Points to a shared, global-state directory that holds data generated during the packaging process."
# pre-expansion value:
#   "${TMPDIR}/pkgdata/${MACHINE}"
PKGDATA_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/pkgdata/genericx86-64"
#
# $PKGDATA_VARS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:1354
#     "PN PE PV PR PKGE PKGV PKGR LICENSE DESCRIPTION SUMMARY RDEPENDS RPROVIDES RRECOMMENDS RSUGGESTS RREPLACES RCONFLICTS SECTION PKG ALLOW_EMPTY FILES CONFFILES FILES_INFO pkg_postinst pkg_postrm pkg_preinst pkg_prerm"
PKGDATA_VARS="PN PE PV PR PKGE PKGV PKGR LICENSE DESCRIPTION SUMMARY RDEPENDS RPROVIDES RRECOMMENDS RSUGGESTS RREPLACES RCONFLICTS SECTION PKG ALLOW_EMPTY FILES CONFFILES FILES_INFO pkg_postinst pkg_postrm pkg_preinst pkg_prerm"
#
# $PKGDEST [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:326
#     [doc] "Points to the parent directory for files to be packaged after they have been split into individual packages."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:49
#     "${WORKDIR}/packages-split"
# pre-expansion value:
#   "${WORKDIR}/packages-split"
PKGDEST="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/packages-split"
#
# $PKGDESTWORK [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:327
#     [doc] "Points to a temporary work area used by the do_package task to write output from the do_packagedata task."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:1352
#     "${WORKDIR}/pkgdata"
# pre-expansion value:
#   "${WORKDIR}/pkgdata"
PKGDESTWORK="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/pkgdata"
#
# $PKGE
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:216
#     "${@['','${PE}'][int(d.getVar('PE') or 0) > 0]}"
PKGE=""
#
# $PKGMLTRIPLETS
#   set base.bbclass:370 [settriplet]
#     "genericx86_64-poky-linux-musl core2-64-poky-linux-musl x86_64-poky-linux-musl noarch-poky-linux-musl any-poky-linux-musl all-poky-linux-musl"
PKGMLTRIPLETS="genericx86_64-poky-linux-musl core2-64-poky-linux-musl x86_64-poky-linux-musl noarch-poky-linux-musl any-poky-linux-musl all-poky-linux-musl"
#
# $PKGR
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:215
#     "${PR}${EXTENDPRAUTO}"
PKGR="r0"
#
# $PKGTRIPLETS
#   set base.bbclass:370 [settriplet]
#     "genericx86_64-poky-linux-musl core2-64-poky-linux-musl x86_64-poky-linux-musl noarch-poky-linux-musl any-poky-linux-musl all-poky-linux-musl"
PKGTRIPLETS="genericx86_64-poky-linux-musl core2-64-poky-linux-musl x86_64-poky-linux-musl noarch-poky-linux-musl any-poky-linux-musl all-poky-linux-musl"
#
# $PKGV
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:214
#     "${PV}"
PKGV="1.0"
#
# $PKGWRITEDIRIPK
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_ipk.bbclass:8
#     "${WORKDIR}/deploy-ipks"
PKGWRITEDIRIPK="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/deploy-ipks"
#
# $PKG_CONFIG_DIR [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:711
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:711
#     "${STAGING_DIR_HOST}${libdir}/pkgconfig"
# pre-expansion value:
#   "${STAGING_DIR_HOST}${libdir}/pkgconfig"
export PKG_CONFIG_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/usr/lib/pkgconfig"
#
# $PKG_CONFIG_DISABLE_UNINSTALLED [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:715
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:715
#     "yes"
# pre-expansion value:
#   "yes"
export PKG_CONFIG_DISABLE_UNINSTALLED="yes"
#
# $PKG_CONFIG_LIBDIR [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:713
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:713
#     "${PKG_CONFIG_DIR}"
# pre-expansion value:
#   "${PKG_CONFIG_DIR}"
export PKG_CONFIG_LIBDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/usr/lib/pkgconfig"
#
# $PKG_CONFIG_PATH [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:712
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:712
#     "${PKG_CONFIG_DIR}:${STAGING_DATADIR}/pkgconfig"
# pre-expansion value:
#   "${PKG_CONFIG_DIR}:${STAGING_DATADIR}/pkgconfig"
export PKG_CONFIG_PATH="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/usr/lib/pkgconfig:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/usr/share/pkgconfig"
#
# $PKG_CONFIG_SYSROOT_DIR [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:714
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:714
#     "${STAGING_DIR_HOST}"
# pre-expansion value:
#   "${STAGING_DIR_HOST}"
export PKG_CONFIG_SYSROOT_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot"
#
# $PKG_CONFIG_SYSTEM_INCLUDE_PATH [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:717
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:717
#     "${includedir}"
# pre-expansion value:
#   "${includedir}"
export PKG_CONFIG_SYSTEM_INCLUDE_PATH="/usr/include"
#
# $PKG_CONFIG_SYSTEM_LIBRARY_PATH [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:716
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:716
#     "${base_libdir}:${libdir}"
# pre-expansion value:
#   "${base_libdir}:${libdir}"
export PKG_CONFIG_SYSTEM_LIBRARY_PATH="/lib:/usr/lib"
#
# $PN [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:202
#     "${@bb.parse.vars_from_file(d.getVar('FILE', False),d)[0] or 'defaultpkgname'}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:328
#     [doc] "PN refers to a recipe name in the context of a file used by the OpenEmbedded build system as input to create a package. It refers to a package name in the context of a file created or produced by the OpenEmbedded build system."
# pre-expansion value:
#   "${@bb.parse.vars_from_file(d.getVar('FILE', False),d)[0] or 'defaultpkgname'}"
PN="defaultpkgname"
#
# $PNBLACKLIST [12 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:111
#     [build-appliance-image] "not buildable with poky-tiny"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:112
#     [core-image-base] "not buildable with poky-tiny"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:113
#     [core-image-clutter] "not buildable with poky-tiny"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:114
#     [core-image-full-cmdline] "not buildable with poky-tiny"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:115
#     [core-image-rt] "not buildable with poky-tiny"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:116
#     [core-image-rt-sdk] "not buildable with poky-tiny"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:117
#     [core-image-sato] "not buildable with poky-tiny"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:118
#     [core-image-sato-dev] "not buildable with poky-tiny"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:119
#     [core-image-sato-sdk] "not buildable with poky-tiny"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:120
#     [core-image-x11] "not buildable with poky-tiny"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:121
#     [core-image-weston] "not buildable with poky-tiny"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:329
#     [doc] "Lists recipes you do not want the OpenEmbedded build system to build."
# pre-expansion value:
#   "None"
#
# $POKYQEMUDEPS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:32
#     "${@bb.utils.contains("INCOMPATIBLE_LICENSE", "GPL-3.0", "", "packagegroup-core-device-devel",d)}"
POKYQEMUDEPS="packagegroup-core-device-devel"
#
# $POKY_BBLAYERS_CONF_VERSION
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/bblayers.conf:3
#     "2"
POKY_BBLAYERS_CONF_VERSION="2"
#
# $POKY_DEFAULT_DISTRO_FEATURES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:18
#     "largefile opengl ptest multiarch wayland vulkan"
POKY_DEFAULT_DISTRO_FEATURES="largefile opengl ptest multiarch wayland vulkan"
#
# $POKY_DEFAULT_EXTRA_RDEPENDS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:19
#     "packagegroup-core-boot"
POKY_DEFAULT_EXTRA_RDEPENDS="packagegroup-core-boot"
#
# $POKY_DEFAULT_EXTRA_RRECOMMENDS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:20
#     "kernel-module-af-packet"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:46
#     ""
# pre-expansion value:
#   ""
POKY_DEFAULT_EXTRA_RRECOMMENDS=""
#
# $POPULATESYSROOTDEPS [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/staging.bbclass:115
#     ""
#   override[class-target]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/staging.bbclass:116
#     "virtual/${MLPREFIX}${TARGET_PREFIX}binutils:do_populate_sysroot"
#   override[class-nativesdk]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/staging.bbclass:117
#     "virtual/${TARGET_PREFIX}binutils-crosssdk:do_populate_sysroot"
# pre-expansion value:
#   "virtual/${MLPREFIX}${TARGET_PREFIX}binutils:do_populate_sysroot"
POPULATESYSROOTDEPS="virtual/x86_64-poky-linux-musl-binutils:do_populate_sysroot"
#
# $POPULATESYSROOTDEPS_class-nativesdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/staging.bbclass:117
#     "virtual/${TARGET_PREFIX}binutils-crosssdk:do_populate_sysroot"
POPULATESYSROOTDEPS_class-nativesdk="virtual/x86_64-poky-linux-musl-binutils-crosssdk:do_populate_sysroot"
#
# $POPULATESYSROOTDEPS_class-target
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/staging.bbclass:116
#     "virtual/${MLPREFIX}${TARGET_PREFIX}binutils:do_populate_sysroot"
POPULATESYSROOTDEPS_class-target="virtual/x86_64-poky-linux-musl-binutils:do_populate_sysroot"
#
# $PR [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:204
#     "${@bb.parse.vars_from_file(d.getVar('FILE', False),d)[2] or 'r0'}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:330
#     [doc] "The revision of the recipe. The default value for this variable is 'r0'."
# pre-expansion value:
#   "${@bb.parse.vars_from_file(d.getVar('FILE', False),d)[2] or 'r0'}"
PR="r0"
#
# $PRAUTO
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:210
#     ""
PRAUTO=""
#
# $PRAUTOINX
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:212
#     "${PF}"
PRAUTOINX="defaultpkgname-1.0-r0"
#
# $PREFERRED_PROVIDER [74 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:331
#     [doc] "If multiple recipes provide an item, this variable determines which recipe should be given preference."
#   override[virtual/runc]:set? /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:35
#     "runc-docker"
#   override[virtual/containerd]:set? /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:36
#     "containerd-opencontainers"
#   override[virtual/docker]:set? /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:37
#     "docker-ce"
#   override[virtual/fakeroot-native]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:696
#     "pseudo-native"
#   override[virtual/kernel]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:290
#     "linux-vanilla"
#   override[virtual/kernel]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc:20
#     [_defaultval] "linux-yocto"
#   override[virtual/kernel]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc:5
#     "linux-yocto"
#   override[virtual/kernel]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:40
#     "linux-yocto-tiny"
#   override[virtual/kernel_poky-tiny]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:291
#     "linux-vanilla"
#   override[virtual/xserver]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc:6
#     "xserver-xorg"
#   override[virtual/xserver]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:4
#     "xserver-xorg"
#   override[virtual/xserver-xf86]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:5
#     "xserver-xorg"
#   override[virtual/egl]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:6
#     "mesa"
#   override[virtual/libgl]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:7
#     "mesa"
#   override[virtual/libgl-native]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:8
#     "mesa-native"
#   override[virtual/nativesdk-libgl]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:9
#     "nativesdk-mesa"
#   override[virtual/libgles1]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:10
#     "mesa"
#   override[virtual/libgles2]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:11
#     "mesa"
#   override[virtual/mesa]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:12
#     "mesa"
#   override[virtual/update-alternatives]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:13
#     "opkg-utils"
#   override[virtual/update-alternatives-native]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:14
#     "opkg-utils-native"
#   override[virtual/libx11]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:15
#     "libx11"
#   override[virtual/base-utils]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:16
#     "busybox"
#   override[xf86-video-intel]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:17
#     "xf86-video-intel"
#   override[virtual/make]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:18
#     "make"
#   override[virtual/make-native]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:19
#     "make-native"
#   override[dbus-glib]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:35
#     "dbus-glib"
#   override[dbus-glib-native]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:36
#     "dbus-glib-native"
#   override[gdk-pixbuf]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:37
#     "gdk-pixbuf"
#   override[libgcc]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:38
#     "libgcc"
#   override[nativesdk-libgcc]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:39
#     "nativesdk-libgcc"
#   override[linux-libc-headers]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:40
#     "linux-libc-headers"
#   override[nativesdk-linux-libc-headers]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:41
#     "nativesdk-linux-libc-headers"
#   override[matchbox-panel]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:42
#     "matchbox-panel-2"
#   override[opkg]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:43
#     "opkg"
#   override[opkg-native]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:44
#     "opkg-native"
#   override[nativesdk-opkg]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:45
#     "nativesdk-opkg"
#   override[console-tools]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:46
#     "kbd"
#   override[gzip-native]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:47
#     "pigz-native"
#   override[udev]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:48
#     "${@bb.utils.contains('DISTRO_FEATURES','systemd','systemd','eudev',d)}"
#   override[ltp]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:50
#     "ltp"
#   override[getopt]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:51
#     "util-linux-getopt"
#   override[openssl]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:52
#     "openssl"
#   override[openssl-native]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:53
#     "openssl-native"
#   override[nativesdk-openssl]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:54
#     "nativesdk-openssl"
#   override[pkgconfig]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:55
#     "pkgconfig"
#   override[nativesdk-pkgconfig]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:56
#     "nativesdk-pkgconfig"
#   override[pkgconfig-native]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:57
#     "pkgconfig-native"
#   override[nativesdk-mesa]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:60
#     "nativesdk-mesa"
#   override[gdb]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:9
#     "gdb"
#   override[virtual/gettext]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:17
#     [_defaultval] "gettext"
#   override[virtual/libc]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:9
#     "musl"
#   override[virtual/libiconv]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:10
#     "musl"
#   override[virtual/libintl]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:11
#     "musl"
#   override[virtual/crypt]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:12
#     "musl"
#   override[virtual/nativesdk-libintl]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:13
#     "nativesdk-glibc"
#   override[virtual/nativesdk-libiconv]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:14
#     "nativesdk-glibc"
#   override[virtual/x86_64-pokysdk-linux-binutils-crosssdk]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:11
#     "binutils-crosssdk-${SDK_SYS}"
#   override[virtual/x86_64-pokysdk-linux-binutils-crosssdk]:rename from PREFERRED_PROVIDER_virtual/${SDK_PREFIX}binutils-crosssdk data.py:104 [expandKeys]
#     "binutils-crosssdk-${SDK_SYS}"
#   override[virtual/x86_64-pokysdk-linux-compilerlibs]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:14
#     "nativesdk-gcc-runtime"
#   override[virtual/x86_64-pokysdk-linux-compilerlibs]:rename from PREFERRED_PROVIDER_virtual/${SDK_PREFIX}compilerlibs data.py:104 [expandKeys]
#     "nativesdk-gcc-runtime"
#   override[virtual/x86_64-pokysdk-linux-g++]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:13
#     "gcc-crosssdk-${SDK_SYS}"
#   override[virtual/x86_64-pokysdk-linux-g++]:rename from PREFERRED_PROVIDER_virtual/${SDK_PREFIX}g++ data.py:104 [expandKeys]
#     "gcc-crosssdk-${SDK_SYS}"
#   override[virtual/x86_64-pokysdk-linux-gcc]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:12
#     "gcc-crosssdk-${SDK_SYS}"
#   override[virtual/x86_64-pokysdk-linux-gcc]:rename from PREFERRED_PROVIDER_virtual/${SDK_PREFIX}gcc data.py:104 [expandKeys]
#     "gcc-crosssdk-${SDK_SYS}"
#   override[virtual/x86_64-poky-linux-musl-binutils]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:5
#     "binutils-cross-${TARGET_ARCH}"
#   override[virtual/x86_64-poky-linux-musl-binutils]:rename from PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}binutils data.py:104 [expandKeys]
#     "binutils-cross-${TARGET_ARCH}"
#   override[virtual/x86_64-poky-linux-musl-compilerlibs]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:8
#     "gcc-runtime"
#   override[virtual/x86_64-poky-linux-musl-compilerlibs]:rename from PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}compilerlibs data.py:104 [expandKeys]
#     "gcc-runtime"
#   override[virtual/x86_64-poky-linux-musl-g++]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:7
#     "gcc-cross-${TARGET_ARCH}"
#   override[virtual/x86_64-poky-linux-musl-g++]:rename from PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}g++ data.py:104 [expandKeys]
#     "gcc-cross-${TARGET_ARCH}"
#   override[virtual/x86_64-poky-linux-musl-gcc]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:6
#     "gcc-cross-${TARGET_ARCH}"
#   override[virtual/x86_64-poky-linux-musl-gcc]:rename from PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}gcc data.py:104 [expandKeys]
#     "gcc-cross-${TARGET_ARCH}"
# pre-expansion value:
#   "None"
#
# $PREFERRED_PROVIDER_console-tools
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:46
#     "kbd"
PREFERRED_PROVIDER_console-tools="kbd"
#
# $PREFERRED_PROVIDER_dbus-glib
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:35
#     "dbus-glib"
PREFERRED_PROVIDER_dbus-glib="dbus-glib"
#
# $PREFERRED_PROVIDER_dbus-glib-native
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:36
#     "dbus-glib-native"
PREFERRED_PROVIDER_dbus-glib-native="dbus-glib-native"
#
# $PREFERRED_PROVIDER_gdb
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:9
#     "gdb"
PREFERRED_PROVIDER_gdb="gdb"
#
# $PREFERRED_PROVIDER_gdk-pixbuf
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:37
#     "gdk-pixbuf"
PREFERRED_PROVIDER_gdk-pixbuf="gdk-pixbuf"
#
# $PREFERRED_PROVIDER_getopt
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:51
#     "util-linux-getopt"
PREFERRED_PROVIDER_getopt="util-linux-getopt"
#
# $PREFERRED_PROVIDER_gzip-native
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:47
#     "pigz-native"
PREFERRED_PROVIDER_gzip-native="pigz-native"
#
# $PREFERRED_PROVIDER_libgcc
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:38
#     "libgcc"
PREFERRED_PROVIDER_libgcc="libgcc"
#
# $PREFERRED_PROVIDER_linux-libc-headers
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:40
#     "linux-libc-headers"
PREFERRED_PROVIDER_linux-libc-headers="linux-libc-headers"
#
# $PREFERRED_PROVIDER_ltp
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:50
#     "ltp"
PREFERRED_PROVIDER_ltp="ltp"
#
# $PREFERRED_PROVIDER_matchbox-panel
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:42
#     "matchbox-panel-2"
PREFERRED_PROVIDER_matchbox-panel="matchbox-panel-2"
#
# $PREFERRED_PROVIDER_nativesdk-libgcc
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:39
#     "nativesdk-libgcc"
PREFERRED_PROVIDER_nativesdk-libgcc="nativesdk-libgcc"
#
# $PREFERRED_PROVIDER_nativesdk-linux-libc-headers
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:41
#     "nativesdk-linux-libc-headers"
PREFERRED_PROVIDER_nativesdk-linux-libc-headers="nativesdk-linux-libc-headers"
#
# $PREFERRED_PROVIDER_nativesdk-mesa
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:60
#     "nativesdk-mesa"
PREFERRED_PROVIDER_nativesdk-mesa="nativesdk-mesa"
#
# $PREFERRED_PROVIDER_nativesdk-openssl
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:54
#     "nativesdk-openssl"
PREFERRED_PROVIDER_nativesdk-openssl="nativesdk-openssl"
#
# $PREFERRED_PROVIDER_nativesdk-opkg
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:45
#     "nativesdk-opkg"
PREFERRED_PROVIDER_nativesdk-opkg="nativesdk-opkg"
#
# $PREFERRED_PROVIDER_nativesdk-pkgconfig
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:56
#     "nativesdk-pkgconfig"
PREFERRED_PROVIDER_nativesdk-pkgconfig="nativesdk-pkgconfig"
#
# $PREFERRED_PROVIDER_openssl
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:52
#     "openssl"
PREFERRED_PROVIDER_openssl="openssl"
#
# $PREFERRED_PROVIDER_openssl-native
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:53
#     "openssl-native"
PREFERRED_PROVIDER_openssl-native="openssl-native"
#
# $PREFERRED_PROVIDER_opkg
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:43
#     "opkg"
PREFERRED_PROVIDER_opkg="opkg"
#
# $PREFERRED_PROVIDER_opkg-native
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:44
#     "opkg-native"
PREFERRED_PROVIDER_opkg-native="opkg-native"
#
# $PREFERRED_PROVIDER_pkgconfig
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:55
#     "pkgconfig"
PREFERRED_PROVIDER_pkgconfig="pkgconfig"
#
# $PREFERRED_PROVIDER_pkgconfig-native
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:57
#     "pkgconfig-native"
PREFERRED_PROVIDER_pkgconfig-native="pkgconfig-native"
#
# $PREFERRED_PROVIDER_udev
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:48
#     "${@bb.utils.contains('DISTRO_FEATURES','systemd','systemd','eudev',d)}"
PREFERRED_PROVIDER_udev="eudev"
#
# $PREFERRED_PROVIDER_virtual/base-utils
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:16
#     "busybox"
PREFERRED_PROVIDER_virtual/base-utils="busybox"
#
# $PREFERRED_PROVIDER_virtual/containerd
#   set? /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:36
#     "containerd-opencontainers"
PREFERRED_PROVIDER_virtual/containerd="containerd-opencontainers"
#
# $PREFERRED_PROVIDER_virtual/crypt
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:12
#     "musl"
PREFERRED_PROVIDER_virtual/crypt="musl"
#
# $PREFERRED_PROVIDER_virtual/docker
#   set? /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:37
#     "docker-ce"
PREFERRED_PROVIDER_virtual/docker="docker-ce"
#
# $PREFERRED_PROVIDER_virtual/egl
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:6
#     "mesa"
PREFERRED_PROVIDER_virtual/egl="mesa"
#
# $PREFERRED_PROVIDER_virtual/fakeroot-native
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:696
#     "pseudo-native"
PREFERRED_PROVIDER_virtual/fakeroot-native="pseudo-native"
#
# $PREFERRED_PROVIDER_virtual/gettext
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:17
#     [_defaultval] "gettext"
PREFERRED_PROVIDER_virtual/gettext="gettext"
#
# $PREFERRED_PROVIDER_virtual/kernel [5 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:290
#     "linux-vanilla"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc:20
#     [_defaultval] "linux-yocto"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc:5
#     "linux-yocto"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:40
#     "linux-yocto-tiny"
#   override[poky-tiny]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:291
#     "linux-vanilla"
# pre-expansion value:
#   "linux-vanilla"
PREFERRED_PROVIDER_virtual/kernel="linux-vanilla"
#
# $PREFERRED_PROVIDER_virtual/kernel_poky-tiny
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:291
#     "linux-vanilla"
PREFERRED_PROVIDER_virtual/kernel_poky-tiny="linux-vanilla"
#
# $PREFERRED_PROVIDER_virtual/libc
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:9
#     "musl"
PREFERRED_PROVIDER_virtual/libc="musl"
#
# $PREFERRED_PROVIDER_virtual/libgl
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:7
#     "mesa"
PREFERRED_PROVIDER_virtual/libgl="mesa"
#
# $PREFERRED_PROVIDER_virtual/libgl-native
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:8
#     "mesa-native"
PREFERRED_PROVIDER_virtual/libgl-native="mesa-native"
#
# $PREFERRED_PROVIDER_virtual/libgles1
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:10
#     "mesa"
PREFERRED_PROVIDER_virtual/libgles1="mesa"
#
# $PREFERRED_PROVIDER_virtual/libgles2
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:11
#     "mesa"
PREFERRED_PROVIDER_virtual/libgles2="mesa"
#
# $PREFERRED_PROVIDER_virtual/libiconv
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:10
#     "musl"
PREFERRED_PROVIDER_virtual/libiconv="musl"
#
# $PREFERRED_PROVIDER_virtual/libintl
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:11
#     "musl"
PREFERRED_PROVIDER_virtual/libintl="musl"
#
# $PREFERRED_PROVIDER_virtual/libx11
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:15
#     "libx11"
PREFERRED_PROVIDER_virtual/libx11="libx11"
#
# $PREFERRED_PROVIDER_virtual/make
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:18
#     "make"
PREFERRED_PROVIDER_virtual/make="make"
#
# $PREFERRED_PROVIDER_virtual/make-native
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:19
#     "make-native"
PREFERRED_PROVIDER_virtual/make-native="make-native"
#
# $PREFERRED_PROVIDER_virtual/mesa
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:12
#     "mesa"
PREFERRED_PROVIDER_virtual/mesa="mesa"
#
# $PREFERRED_PROVIDER_virtual/nativesdk-libgl
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:9
#     "nativesdk-mesa"
PREFERRED_PROVIDER_virtual/nativesdk-libgl="nativesdk-mesa"
#
# $PREFERRED_PROVIDER_virtual/nativesdk-libiconv
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:14
#     "nativesdk-glibc"
PREFERRED_PROVIDER_virtual/nativesdk-libiconv="nativesdk-glibc"
#
# $PREFERRED_PROVIDER_virtual/nativesdk-libintl
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tclibc-musl.inc:13
#     "nativesdk-glibc"
PREFERRED_PROVIDER_virtual/nativesdk-libintl="nativesdk-glibc"
#
# $PREFERRED_PROVIDER_virtual/runc
#   set? /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/layer.conf:35
#     "runc-docker"
PREFERRED_PROVIDER_virtual/runc="runc-docker"
#
# $PREFERRED_PROVIDER_virtual/update-alternatives
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:13
#     "opkg-utils"
PREFERRED_PROVIDER_virtual/update-alternatives="opkg-utils"
#
# $PREFERRED_PROVIDER_virtual/update-alternatives-native
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:14
#     "opkg-utils-native"
PREFERRED_PROVIDER_virtual/update-alternatives-native="opkg-utils-native"
#
# $PREFERRED_PROVIDER_virtual/x86_64-poky-linux-musl-binutils [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:5
#     "binutils-cross-${TARGET_ARCH}"
#   rename from PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}binutils data.py:104 [expandKeys]
#     "binutils-cross-${TARGET_ARCH}"
# pre-expansion value:
#   "binutils-cross-${TARGET_ARCH}"
PREFERRED_PROVIDER_virtual/x86_64-poky-linux-musl-binutils="binutils-cross-x86_64"
#
# $PREFERRED_PROVIDER_virtual/x86_64-poky-linux-musl-compilerlibs [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:8
#     "gcc-runtime"
#   rename from PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}compilerlibs data.py:104 [expandKeys]
#     "gcc-runtime"
# pre-expansion value:
#   "gcc-runtime"
PREFERRED_PROVIDER_virtual/x86_64-poky-linux-musl-compilerlibs="gcc-runtime"
#
# $PREFERRED_PROVIDER_virtual/x86_64-poky-linux-musl-g++ [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:7
#     "gcc-cross-${TARGET_ARCH}"
#   rename from PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}g++ data.py:104 [expandKeys]
#     "gcc-cross-${TARGET_ARCH}"
# pre-expansion value:
#   "gcc-cross-${TARGET_ARCH}"
PREFERRED_PROVIDER_virtual/x86_64-poky-linux-musl-g++="gcc-cross-x86_64"
#
# $PREFERRED_PROVIDER_virtual/x86_64-poky-linux-musl-gcc [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:6
#     "gcc-cross-${TARGET_ARCH}"
#   rename from PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}gcc data.py:104 [expandKeys]
#     "gcc-cross-${TARGET_ARCH}"
# pre-expansion value:
#   "gcc-cross-${TARGET_ARCH}"
PREFERRED_PROVIDER_virtual/x86_64-poky-linux-musl-gcc="gcc-cross-x86_64"
#
# $PREFERRED_PROVIDER_virtual/x86_64-pokysdk-linux-binutils-crosssdk [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:11
#     "binutils-crosssdk-${SDK_SYS}"
#   rename from PREFERRED_PROVIDER_virtual/${SDK_PREFIX}binutils-crosssdk data.py:104 [expandKeys]
#     "binutils-crosssdk-${SDK_SYS}"
# pre-expansion value:
#   "binutils-crosssdk-${SDK_SYS}"
PREFERRED_PROVIDER_virtual/x86_64-pokysdk-linux-binutils-crosssdk="binutils-crosssdk-x86_64-pokysdk-linux"
#
# $PREFERRED_PROVIDER_virtual/x86_64-pokysdk-linux-compilerlibs [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:14
#     "nativesdk-gcc-runtime"
#   rename from PREFERRED_PROVIDER_virtual/${SDK_PREFIX}compilerlibs data.py:104 [expandKeys]
#     "nativesdk-gcc-runtime"
# pre-expansion value:
#   "nativesdk-gcc-runtime"
PREFERRED_PROVIDER_virtual/x86_64-pokysdk-linux-compilerlibs="nativesdk-gcc-runtime"
#
# $PREFERRED_PROVIDER_virtual/x86_64-pokysdk-linux-g++ [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:13
#     "gcc-crosssdk-${SDK_SYS}"
#   rename from PREFERRED_PROVIDER_virtual/${SDK_PREFIX}g++ data.py:104 [expandKeys]
#     "gcc-crosssdk-${SDK_SYS}"
# pre-expansion value:
#   "gcc-crosssdk-${SDK_SYS}"
PREFERRED_PROVIDER_virtual/x86_64-pokysdk-linux-g++="gcc-crosssdk-x86_64-pokysdk-linux"
#
# $PREFERRED_PROVIDER_virtual/x86_64-pokysdk-linux-gcc [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:12
#     "gcc-crosssdk-${SDK_SYS}"
#   rename from PREFERRED_PROVIDER_virtual/${SDK_PREFIX}gcc data.py:104 [expandKeys]
#     "gcc-crosssdk-${SDK_SYS}"
# pre-expansion value:
#   "gcc-crosssdk-${SDK_SYS}"
PREFERRED_PROVIDER_virtual/x86_64-pokysdk-linux-gcc="gcc-crosssdk-x86_64-pokysdk-linux"
#
# $PREFERRED_PROVIDER_virtual/xserver [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc:6
#     "xserver-xorg"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:4
#     "xserver-xorg"
# pre-expansion value:
#   "xserver-xorg"
PREFERRED_PROVIDER_virtual/xserver="xserver-xorg"
#
# $PREFERRED_PROVIDER_virtual/xserver-xf86
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:5
#     "xserver-xorg"
PREFERRED_PROVIDER_virtual/xserver-xf86="xserver-xorg"
#
# $PREFERRED_PROVIDER_xf86-video-intel
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:17
#     "xf86-video-intel"
PREFERRED_PROVIDER_xf86-video-intel="xf86-video-intel"
#
# $PREFERRED_RPROVIDER_initd-functions
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:58
#     "initscripts"
PREFERRED_RPROVIDER_initd-functions="initscripts"
#
# $PREFERRED_RPROVIDER_libdevmapper
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:36
#     "lvm2"
PREFERRED_RPROVIDER_libdevmapper="lvm2"
#
# $PREFERRED_VERSION [65 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:332
#     [doc] "If there are multiple versions of recipes available, this variable determines which recipe should be given preference."
#   override[linux-yocto]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc:21
#     [_defaultval] "5.2%"
#   override[linux-yocto]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:24
#     "5.2%"
#   override[linux-yocto-tiny]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:41
#     "5.0%"
#   override[gcc]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:31
#     "${GCCVERSION}"
#   override[gcc-runtime]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:37
#     "${GCCVERSION}"
#   override[gcc-sanitizers]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:38
#     "${GCCVERSION}"
#   override[nativesdk-gcc-runtime]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:39
#     "${SDKGCCVERSION}"
#   override[nativesdk-gcc-sanitizers]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:40
#     "${SDKGCCVERSION}"
#   override[libgcc]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:41
#     "${GCCVERSION}"
#   override[libgcc-initial]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:42
#     "${GCCVERSION}"
#   override[libgfortran]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:43
#     "${GCCVERSION}"
#   override[nativesdk-gcc]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:44
#     "${SDKGCCVERSION}"
#   override[nativesdk-libgcc]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:45
#     "${SDKGCCVERSION}"
#   override[nativesdk-libgcc-initial]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:46
#     "${SDKGCCVERSION}"
#   override[binutils]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:47
#     "${BINUVERSION}"
#   override[binutils-native]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:48
#     "${BINUVERSION}"
#   override[gdb]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:52
#     "${GDBVERSION}"
#   override[linux-libc-headers]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:56
#     "${LINUXLIBCVERSION}"
#   override[nativesdk-linux-libc-headers]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:57
#     "${LINUXLIBCVERSION}"
#   override[glibc]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:58
#     "${GLIBCVERSION}"
#   override[glibc-locale]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:59
#     "${GLIBCVERSION}"
#   override[glibc-mtrace]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:60
#     "${GLIBCVERSION}"
#   override[glibc-scripts]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:61
#     "${GLIBCVERSION}"
#   override[nativesdk-glibc]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:62
#     "${GLIBCVERSION}"
#   override[cross-localedef-native]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:63
#     "${GLIBCVERSION}"
#   override[qemu]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:65
#     "${QEMUVERSION}"
#   override[qemu-native]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:66
#     "${QEMUVERSION}"
#   override[nativesdk-qemu]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:67
#     "${QEMUVERSION}"
#   override[go]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:73
#     "${GOVERSION}"
#   override[go-native]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:74
#     "${GOVERSION}"
#   override[go-runtime]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:75
#     "${GOVERSION}"
#   override[nativesdk-go]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:76
#     "${GOVERSION}"
#   override[nativesdk-go-runtime]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:77
#     "${GOVERSION}"
#   override[llvm]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:79
#     "${LLVMVERSION}"
#   override[llvm-native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:80
#     "${LLVMVERSION}"
#   override[nativesdk-llvm]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:81
#     "${LLVMVERSION}"
#   override[binutils-cross-x86_64]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:49
#     "${BINUVERSION}"
#   override[binutils-cross-x86_64]:rename from PREFERRED_VERSION_binutils-cross-${TARGET_ARCH} data.py:104 [expandKeys]
#     "${BINUVERSION}"
#   override[binutils-cross-canadian-x86-64]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:51
#     "${BINUVERSION}"
#   override[binutils-cross-canadian-x86-64]:rename from PREFERRED_VERSION_binutils-cross-canadian-${TRANSLATED_TARGET_ARCH} data.py:104 [expandKeys]
#     "${BINUVERSION}"
#   override[binutils-crosssdk-x86_64-pokysdk-linux]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:50
#     "${BINUVERSION}"
#   override[binutils-crosssdk-x86_64-pokysdk-linux]:rename from PREFERRED_VERSION_binutils-crosssdk-${SDK_SYS} data.py:104 [expandKeys]
#     "${BINUVERSION}"
#   override[gcc-cross-x86_64]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:32
#     "${GCCVERSION}"
#   override[gcc-cross-x86_64]:rename from PREFERRED_VERSION_gcc-cross-${TARGET_ARCH} data.py:104 [expandKeys]
#     "${GCCVERSION}"
#   override[gcc-cross-canadian-x86-64]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:36
#     "${GCCVERSION}"
#   override[gcc-cross-canadian-x86-64]:rename from PREFERRED_VERSION_gcc-cross-canadian-${TRANSLATED_TARGET_ARCH} data.py:104 [expandKeys]
#     "${GCCVERSION}"
#   override[gcc-cross-initial-x86_64]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:33
#     "${GCCVERSION}"
#   override[gcc-cross-initial-x86_64]:rename from PREFERRED_VERSION_gcc-cross-initial-${TARGET_ARCH} data.py:104 [expandKeys]
#     "${GCCVERSION}"
#   override[gcc-crosssdk-x86_64-pokysdk-linux]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:34
#     "${SDKGCCVERSION}"
#   override[gcc-crosssdk-x86_64-pokysdk-linux]:rename from PREFERRED_VERSION_gcc-crosssdk-${SDK_SYS} data.py:104 [expandKeys]
#     "${SDKGCCVERSION}"
#   override[gcc-crosssdk-initial-x86_64-pokysdk-linux]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:35
#     "${SDKGCCVERSION}"
#   override[gcc-crosssdk-initial-x86_64-pokysdk-linux]:rename from PREFERRED_VERSION_gcc-crosssdk-initial-${SDK_SYS} data.py:104 [expandKeys]
#     "${SDKGCCVERSION}"
#   override[gdb-cross-x86_64]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:53
#     "${GDBVERSION}"
#   override[gdb-cross-x86_64]:rename from PREFERRED_VERSION_gdb-cross-${TARGET_ARCH} data.py:104 [expandKeys]
#     "${GDBVERSION}"
#   override[gdb-cross-canadian-x86-64]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:54
#     "${GDBVERSION}"
#   override[gdb-cross-canadian-x86-64]:rename from PREFERRED_VERSION_gdb-cross-canadian-${TRANSLATED_TARGET_ARCH} data.py:104 [expandKeys]
#     "${GDBVERSION}"
#   override[go-cross-core2-64]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:70
#     "${GOVERSION}"
#   override[go-cross-core2-64]:rename from PREFERRED_VERSION_go-cross-${TUNE_PKGARCH} data.py:104 [expandKeys]
#     "${GOVERSION}"
#   override[go-cross-canadian-x86-64]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:72
#     "${GOVERSION}"
#   override[go-cross-canadian-x86-64]:rename from PREFERRED_VERSION_go-cross-canadian-${TRANSLATED_TARGET_ARCH} data.py:104 [expandKeys]
#     "${GOVERSION}"
#   override[go-crosssdk-x86_64]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:71
#     "${GOVERSION}"
#   override[go-crosssdk-x86_64]:rename from PREFERRED_VERSION_go-crosssdk-${SDK_ARCH} data.py:104 [expandKeys]
#     "${GOVERSION}"
#   override[virtual/x86_64-poky-linux-musl-go]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:69
#     "${GOVERSION}"
#   override[virtual/x86_64-poky-linux-musl-go]:rename from PREFERRED_VERSION_virtual/${TARGET_PREFIX}go data.py:104 [expandKeys]
#     "${GOVERSION}"
# pre-expansion value:
#   "None"
#
# $PREFERRED_VERSION_binutils
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:47
#     "${BINUVERSION}"
PREFERRED_VERSION_binutils="2.32%"
#
# $PREFERRED_VERSION_binutils-cross-canadian-x86-64 [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:51
#     "${BINUVERSION}"
#   rename from PREFERRED_VERSION_binutils-cross-canadian-${TRANSLATED_TARGET_ARCH} data.py:104 [expandKeys]
#     "${BINUVERSION}"
# pre-expansion value:
#   "${BINUVERSION}"
PREFERRED_VERSION_binutils-cross-canadian-x86-64="2.32%"
#
# $PREFERRED_VERSION_binutils-cross-x86_64 [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:49
#     "${BINUVERSION}"
#   rename from PREFERRED_VERSION_binutils-cross-${TARGET_ARCH} data.py:104 [expandKeys]
#     "${BINUVERSION}"
# pre-expansion value:
#   "${BINUVERSION}"
PREFERRED_VERSION_binutils-cross-x86_64="2.32%"
#
# $PREFERRED_VERSION_binutils-crosssdk-x86_64-pokysdk-linux [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:50
#     "${BINUVERSION}"
#   rename from PREFERRED_VERSION_binutils-crosssdk-${SDK_SYS} data.py:104 [expandKeys]
#     "${BINUVERSION}"
# pre-expansion value:
#   "${BINUVERSION}"
PREFERRED_VERSION_binutils-crosssdk-x86_64-pokysdk-linux="2.32%"
#
# $PREFERRED_VERSION_binutils-native
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:48
#     "${BINUVERSION}"
PREFERRED_VERSION_binutils-native="2.32%"
#
# $PREFERRED_VERSION_cross-localedef-native
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:63
#     "${GLIBCVERSION}"
PREFERRED_VERSION_cross-localedef-native="2.30%"
#
# $PREFERRED_VERSION_gcc
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:31
#     "${GCCVERSION}"
PREFERRED_VERSION_gcc="9.%"
#
# $PREFERRED_VERSION_gcc-cross-canadian-x86-64 [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:36
#     "${GCCVERSION}"
#   rename from PREFERRED_VERSION_gcc-cross-canadian-${TRANSLATED_TARGET_ARCH} data.py:104 [expandKeys]
#     "${GCCVERSION}"
# pre-expansion value:
#   "${GCCVERSION}"
PREFERRED_VERSION_gcc-cross-canadian-x86-64="9.%"
#
# $PREFERRED_VERSION_gcc-cross-initial-x86_64 [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:33
#     "${GCCVERSION}"
#   rename from PREFERRED_VERSION_gcc-cross-initial-${TARGET_ARCH} data.py:104 [expandKeys]
#     "${GCCVERSION}"
# pre-expansion value:
#   "${GCCVERSION}"
PREFERRED_VERSION_gcc-cross-initial-x86_64="9.%"
#
# $PREFERRED_VERSION_gcc-cross-x86_64 [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:32
#     "${GCCVERSION}"
#   rename from PREFERRED_VERSION_gcc-cross-${TARGET_ARCH} data.py:104 [expandKeys]
#     "${GCCVERSION}"
# pre-expansion value:
#   "${GCCVERSION}"
PREFERRED_VERSION_gcc-cross-x86_64="9.%"
#
# $PREFERRED_VERSION_gcc-crosssdk-initial-x86_64-pokysdk-linux [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:35
#     "${SDKGCCVERSION}"
#   rename from PREFERRED_VERSION_gcc-crosssdk-initial-${SDK_SYS} data.py:104 [expandKeys]
#     "${SDKGCCVERSION}"
# pre-expansion value:
#   "${SDKGCCVERSION}"
PREFERRED_VERSION_gcc-crosssdk-initial-x86_64-pokysdk-linux="9.%"
#
# $PREFERRED_VERSION_gcc-crosssdk-x86_64-pokysdk-linux [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:34
#     "${SDKGCCVERSION}"
#   rename from PREFERRED_VERSION_gcc-crosssdk-${SDK_SYS} data.py:104 [expandKeys]
#     "${SDKGCCVERSION}"
# pre-expansion value:
#   "${SDKGCCVERSION}"
PREFERRED_VERSION_gcc-crosssdk-x86_64-pokysdk-linux="9.%"
#
# $PREFERRED_VERSION_gcc-runtime
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:37
#     "${GCCVERSION}"
PREFERRED_VERSION_gcc-runtime="9.%"
#
# $PREFERRED_VERSION_gcc-sanitizers
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:38
#     "${GCCVERSION}"
PREFERRED_VERSION_gcc-sanitizers="9.%"
#
# $PREFERRED_VERSION_gdb
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:52
#     "${GDBVERSION}"
PREFERRED_VERSION_gdb="8.3%"
#
# $PREFERRED_VERSION_gdb-cross-canadian-x86-64 [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:54
#     "${GDBVERSION}"
#   rename from PREFERRED_VERSION_gdb-cross-canadian-${TRANSLATED_TARGET_ARCH} data.py:104 [expandKeys]
#     "${GDBVERSION}"
# pre-expansion value:
#   "${GDBVERSION}"
PREFERRED_VERSION_gdb-cross-canadian-x86-64="8.3%"
#
# $PREFERRED_VERSION_gdb-cross-x86_64 [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:53
#     "${GDBVERSION}"
#   rename from PREFERRED_VERSION_gdb-cross-${TARGET_ARCH} data.py:104 [expandKeys]
#     "${GDBVERSION}"
# pre-expansion value:
#   "${GDBVERSION}"
PREFERRED_VERSION_gdb-cross-x86_64="8.3%"
#
# $PREFERRED_VERSION_glibc
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:58
#     "${GLIBCVERSION}"
PREFERRED_VERSION_glibc="2.30%"
#
# $PREFERRED_VERSION_glibc-locale
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:59
#     "${GLIBCVERSION}"
PREFERRED_VERSION_glibc-locale="2.30%"
#
# $PREFERRED_VERSION_glibc-mtrace
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:60
#     "${GLIBCVERSION}"
PREFERRED_VERSION_glibc-mtrace="2.30%"
#
# $PREFERRED_VERSION_glibc-scripts
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:61
#     "${GLIBCVERSION}"
PREFERRED_VERSION_glibc-scripts="2.30%"
#
# $PREFERRED_VERSION_go
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:73
#     "${GOVERSION}"
PREFERRED_VERSION_go="1.12%"
#
# $PREFERRED_VERSION_go-cross-canadian-x86-64 [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:72
#     "${GOVERSION}"
#   rename from PREFERRED_VERSION_go-cross-canadian-${TRANSLATED_TARGET_ARCH} data.py:104 [expandKeys]
#     "${GOVERSION}"
# pre-expansion value:
#   "${GOVERSION}"
PREFERRED_VERSION_go-cross-canadian-x86-64="1.12%"
#
# $PREFERRED_VERSION_go-cross-core2-64 [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:70
#     "${GOVERSION}"
#   rename from PREFERRED_VERSION_go-cross-${TUNE_PKGARCH} data.py:104 [expandKeys]
#     "${GOVERSION}"
# pre-expansion value:
#   "${GOVERSION}"
PREFERRED_VERSION_go-cross-core2-64="1.12%"
#
# $PREFERRED_VERSION_go-crosssdk-x86_64 [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:71
#     "${GOVERSION}"
#   rename from PREFERRED_VERSION_go-crosssdk-${SDK_ARCH} data.py:104 [expandKeys]
#     "${GOVERSION}"
# pre-expansion value:
#   "${GOVERSION}"
PREFERRED_VERSION_go-crosssdk-x86_64="1.12%"
#
# $PREFERRED_VERSION_go-native
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:74
#     "${GOVERSION}"
PREFERRED_VERSION_go-native="1.12%"
#
# $PREFERRED_VERSION_go-runtime
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:75
#     "${GOVERSION}"
PREFERRED_VERSION_go-runtime="1.12%"
#
# $PREFERRED_VERSION_libgcc
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:41
#     "${GCCVERSION}"
PREFERRED_VERSION_libgcc="9.%"
#
# $PREFERRED_VERSION_libgcc-initial
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:42
#     "${GCCVERSION}"
PREFERRED_VERSION_libgcc-initial="9.%"
#
# $PREFERRED_VERSION_libgfortran
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:43
#     "${GCCVERSION}"
PREFERRED_VERSION_libgfortran="9.%"
#
# $PREFERRED_VERSION_linux-libc-headers
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:56
#     "${LINUXLIBCVERSION}"
PREFERRED_VERSION_linux-libc-headers="5.2%"
#
# $PREFERRED_VERSION_linux-yocto [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc:21
#     [_defaultval] "5.2%"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:24
#     "5.2%"
# pre-expansion value:
#   "5.2%"
PREFERRED_VERSION_linux-yocto="5.2%"
#
# $PREFERRED_VERSION_linux-yocto-tiny
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:41
#     "5.0%"
PREFERRED_VERSION_linux-yocto-tiny="5.0%"
#
# $PREFERRED_VERSION_llvm
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:79
#     "${LLVMVERSION}"
PREFERRED_VERSION_llvm="8.0.1"
#
# $PREFERRED_VERSION_llvm-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:80
#     "${LLVMVERSION}"
PREFERRED_VERSION_llvm-native="8.0.1"
#
# $PREFERRED_VERSION_nativesdk-gcc
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:44
#     "${SDKGCCVERSION}"
PREFERRED_VERSION_nativesdk-gcc="9.%"
#
# $PREFERRED_VERSION_nativesdk-gcc-runtime
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:39
#     "${SDKGCCVERSION}"
PREFERRED_VERSION_nativesdk-gcc-runtime="9.%"
#
# $PREFERRED_VERSION_nativesdk-gcc-sanitizers
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:40
#     "${SDKGCCVERSION}"
PREFERRED_VERSION_nativesdk-gcc-sanitizers="9.%"
#
# $PREFERRED_VERSION_nativesdk-glibc
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:62
#     "${GLIBCVERSION}"
PREFERRED_VERSION_nativesdk-glibc="2.30%"
#
# $PREFERRED_VERSION_nativesdk-go
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:76
#     "${GOVERSION}"
PREFERRED_VERSION_nativesdk-go="1.12%"
#
# $PREFERRED_VERSION_nativesdk-go-runtime
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:77
#     "${GOVERSION}"
PREFERRED_VERSION_nativesdk-go-runtime="1.12%"
#
# $PREFERRED_VERSION_nativesdk-libgcc
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:45
#     "${SDKGCCVERSION}"
PREFERRED_VERSION_nativesdk-libgcc="9.%"
#
# $PREFERRED_VERSION_nativesdk-libgcc-initial
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:46
#     "${SDKGCCVERSION}"
PREFERRED_VERSION_nativesdk-libgcc-initial="9.%"
#
# $PREFERRED_VERSION_nativesdk-linux-libc-headers
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:57
#     "${LINUXLIBCVERSION}"
PREFERRED_VERSION_nativesdk-linux-libc-headers="5.2%"
#
# $PREFERRED_VERSION_nativesdk-llvm
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:81
#     "${LLVMVERSION}"
PREFERRED_VERSION_nativesdk-llvm="8.0.1"
#
# $PREFERRED_VERSION_nativesdk-qemu
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:67
#     "${QEMUVERSION}"
PREFERRED_VERSION_nativesdk-qemu="4.1%"
#
# $PREFERRED_VERSION_qemu
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:65
#     "${QEMUVERSION}"
PREFERRED_VERSION_qemu="4.1%"
#
# $PREFERRED_VERSION_qemu-native
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:66
#     "${QEMUVERSION}"
PREFERRED_VERSION_qemu-native="4.1%"
#
# $PREFERRED_VERSION_virtual/x86_64-poky-linux-musl-go [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:69
#     "${GOVERSION}"
#   rename from PREFERRED_VERSION_virtual/${TARGET_PREFIX}go data.py:104 [expandKeys]
#     "${GOVERSION}"
# pre-expansion value:
#   "${GOVERSION}"
PREFERRED_VERSION_virtual/x86_64-poky-linux-musl-go="1.12%"
#
# $PREMIRRORS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:50
#     [_defaultval] "bzr://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n cvs://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n git://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n gitsm://.*/.* http://downloads.yoctoproject.org/mirror/sources/ \n hg://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n osc://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n p4://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n svn://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:333
#     [doc] "Specifies additional paths from which the OpenEmbedded build system gets source code."
# pre-expansion value:
#   "bzr://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n cvs://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n git://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n gitsm://.*/.* http://downloads.yoctoproject.org/mirror/sources/ \n hg://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n osc://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n p4://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n svn://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n"
PREMIRRORS="bzr://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n cvs://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n git://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n gitsm://.*/.* http://downloads.yoctoproject.org/mirror/sources/ \n hg://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n osc://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n p4://.*/.*    http://downloads.yoctoproject.org/mirror/sources/ \n svn://.*/.*   http://downloads.yoctoproject.org/mirror/sources/ \n"
#
# $PREPROCESS_RELOCATE_DIRS
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/chrpath.bbclass:2
#     ""
PREPROCESS_RELOCATE_DIRS=""
#
# $PRIORITY [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:230
#     "optional"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:334
#     [doc] "Indicates the importance of a package.  The default value is 'optional'.  Other standard values are 'required', 'standard' and 'extra'."
# pre-expansion value:
#   "optional"
PRIORITY="optional"
#
# $PROVIDES [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:274
#     ""
#   _prepend /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:275
#     "${PN} "
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:335
#     [doc] "A list of aliases that a recipe also provides. These aliases are useful for satisfying dependencies of other recipes during the build as specified by DEPENDS."
# pre-expansion value:
#   "${PN} "
PROVIDES="defaultpkgname "
#
# $PRSERV_HOST
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:336
#     [doc] "The network based PR service host and port."
#
# $PSEUDO_DISABLED [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:687
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:687
#     "1"
# pre-expansion value:
#   "1"
export PSEUDO_DISABLED="1"
#
# $PSEUDO_LOCALSTATEDIR
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:684
#     "${WORKDIR}/pseudo/"
PSEUDO_LOCALSTATEDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/pseudo/"
#
# $PSEUDO_PASSWD
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:685
#     "${STAGING_DIR_TARGET}:${PSEUDO_SYSROOT}"
PSEUDO_PASSWD="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot:/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/sysroots-components/x86_64/pseudo-native"
#
# $PSEUDO_SYSROOT
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:686
#     "${COMPONENTS_DIR}/${BUILD_ARCH}/pseudo-native"
PSEUDO_SYSROOT="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/sysroots-components/x86_64/pseudo-native"
#
# $PV [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:203
#     "${@bb.parse.vars_from_file(d.getVar('FILE', False),d)[1] or '1.0'}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:337
#     [doc] "The version of the recipe. The version is normally extracted from the recipe filename."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:21
#     [vardepvalue] "${PV}"
# pre-expansion value:
#   "${@bb.parse.vars_from_file(d.getVar('FILE', False),d)[1] or '1.0'}"
PV="1.0"
#
# $PWD [2 operations]
#   from env data.py:112 [inheritFromOS]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/meta-trustx"
#   auto env export data.py:114 [inheritFromOS]
#     [export] "True"
# pre-expansion value:
#   "/mnt/ramdisk/epple/ramdisk/tme_usb_token/meta-trustx"
export PWD="/mnt/ramdisk/epple/ramdisk/tme_usb_token/meta-trustx"
#
# $PYPI_PACKAGE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:338
#     [doc] "The python package name to use for fetching from pypi. Default is parsed from the recipe name, but can be overridden if upstream name is different than recipe name."
#
# $PYPI_PACKAGE_EXT
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:339
#     [doc] "The archive file extension to use for fetching from pypi. Default is tar.gz, but can be overridden if upstream uses a different compression scheme."
#
# $PYPI_SRC_URI
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:340
#     [doc] "The URI to use to fetch from pypi, default uses pythonhosted.org and is constructed from PYPI_PACKAGE, PYPI_PACKAGE_EXT and PV."
#
# $PYTHON
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:533
#     "${@sys.executable}"
PYTHON="/usr/bin/python3"
#
# $QAPATHTEST [16 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:85
#     [libexec] "package_qa_check_libexec"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:99
#     [rpaths] "package_qa_check_rpath"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:124
#     [useless-rpaths] "package_qa_check_useless_rpaths"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:154
#     [dev-so] "package_qa_check_dev"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:164
#     [dev-elf] "package_qa_check_dev_elf"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:175
#     [staticdev] "package_qa_check_staticdev"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:251
#     [debug-files] "package_qa_check_dbg"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:262
#     [arch] "package_qa_check_arch"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:311
#     [desktop] "package_qa_check_desktop"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:323
#     [textrel] "package_qa_textrel"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:347
#     [ldflags] "package_qa_hash_style"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:383
#     [buildpaths] "package_qa_check_buildpaths"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:408
#     [xorg-driver-abi] "package_qa_check_xorg_driver_abi"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:426
#     [infodir] "package_qa_check_infodir"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:436
#     [symlink-to-sysroot] "package_qa_check_symlink_to_sysroot"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:856
#     [host-user-contaminated] "package_qa_check_host_user"
# pre-expansion value:
#   "None"
#
# $QAPKGTEST [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:786
#     [usrmerge] "package_qa_check_usrmerge"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:798
#     [perllocalpod] "package_qa_check_perllocalpod"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:815
#     [expanded-d] "package_qa_check_expanded_d"
# pre-expansion value:
#   "None"
#
# $QARECIPETEST
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:887
#     [src-uri-bad] "package_qa_check_src_uri"
#
# $QA_LOGFILE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:1
#     "${TMPDIR}/qa.log"
QA_LOGFILE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/qa.log"
#
# $QA_SANE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:21
#     "True"
QA_SANE="True"
#
# $QB_AUDIO_DRV
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc:9
#     "alsa"
QB_AUDIO_DRV="alsa"
#
# $QB_AUDIO_OPT
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc:10
#     "-soundhw ac97,es1370"
QB_AUDIO_OPT="-soundhw ac97,es1370"
#
# $QB_CPU [2 operations]
#   override[x86]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc:3
#     "-cpu core2duo"
#   override[x86-64]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc:6
#     "-cpu core2duo"
# pre-expansion value:
#   "-cpu core2duo"
QB_CPU="-cpu core2duo"
#
# $QB_CPU_KVM [2 operations]
#   override[x86]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc:4
#     "-cpu core2duo"
#   override[x86-64]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc:7
#     "-cpu core2duo"
# pre-expansion value:
#   "-cpu core2duo"
QB_CPU_KVM="-cpu core2duo"
#
# $QB_CPU_KVM_x86
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc:4
#     "-cpu core2duo"
QB_CPU_KVM_x86="-cpu core2duo"
#
# $QB_CPU_KVM_x86-64
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc:7
#     "-cpu core2duo"
QB_CPU_KVM_x86-64="-cpu core2duo"
#
# $QB_CPU_x86
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc:3
#     "-cpu core2duo"
QB_CPU_x86="-cpu core2duo"
#
# $QB_CPU_x86-64
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc:6
#     "-cpu core2duo"
QB_CPU_x86-64="-cpu core2duo"
#
# $QB_DEFAULT_FSTYPE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:97
#     "${IMAGE_FSTYPES}"
QB_DEFAULT_FSTYPE="cpio.gz"
#
# $QB_KERNEL_CMDLINE_APPEND
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc:11
#     "vga=0 uvesafb.mode_option=${UVESA_MODE} oprofile.timer=1 uvesafb.task_timeout=-1"
QB_KERNEL_CMDLINE_APPEND="vga=0 uvesafb.mode_option=640x480-32 oprofile.timer=1 uvesafb.task_timeout=-1"
#
# $QB_OPT_APPEND [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc:12
#     "-show-cursor -usb -device usb-tablet"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc:14
#     "-object rng-random,filename=/dev/urandom,id=rng0 -device virtio-rng-pci,rng=rng0"
# pre-expansion value:
#   "-show-cursor -usb -device usb-tablet -object rng-random,filename=/dev/urandom,id=rng0 -device virtio-rng-pci,rng=rng0"
QB_OPT_APPEND="-show-cursor -usb -device usb-tablet -object rng-random,filename=/dev/urandom,id=rng0 -device virtio-rng-pci,rng=rng0"
#
# $QB_SYSTEM_NAME
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/genericx86-64.conf:11
#     "qemu-system-x86_64"
QB_SYSTEM_NAME="qemu-system-x86_64"
#
# $QEMUVERSION
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:25
#     "4.1%"
QEMUVERSION="4.1%"
#
# $QEMU_EXTRAOPTIONS_core2-32
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:24
#     " -cpu n270"
QEMU_EXTRAOPTIONS_core2-32=" -cpu n270"
#
# $QEMU_EXTRAOPTIONS_core2-64
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:31
#     " -cpu core2duo"
QEMU_EXTRAOPTIONS_core2-64=" -cpu core2duo"
#
# $QEMU_EXTRAOPTIONS_core2-64-x32
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:38
#     " -cpu core2duo"
QEMU_EXTRAOPTIONS_core2-64-x32=" -cpu core2duo"
#
# $QMAKE_PROFILES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:344
#     [doc] "Specifies your own subset of .pro files to be built for use with qmake."
#
# $QUILTRCFILE
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/patch.bbclass:4
#     "${STAGING_ETCDIR_NATIVE}/quiltrc"
QUILTRCFILE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/etc/quiltrc"
#
# $RANLIB [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:526
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:526
#     "${HOST_PREFIX}gcc-ranlib"
# pre-expansion value:
#   "${HOST_PREFIX}gcc-ranlib"
export RANLIB="x86_64-poky-linux-musl-gcc-ranlib"
#
# $RCONFLICTS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:348
#     [doc] "The list of packages that conflict with another package. Note that the package will not be installed if the conflicting packages are not first removed."
#
# $RDEPENDS [8 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:273
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:349
#     [doc] "Lists a package's runtime dependencies (i.e. other packages) that must be installed for the package to be built. They must be the names of other packages as listed in the PACKAGES variable, not recipe names (PN)."
#   override[defaultpkgname-dev]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:321
#     "${PN} (= ${EXTENDPKGV})"
#   override[defaultpkgname-dev]:rename from RDEPENDS_${PN}-dev data.py:104 [expandKeys]
#     "${PN} (= ${EXTENDPKGV})"
#   override[defaultpkgname-mtrace_pn-eglibc]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:109
#     ""
#   override[defaultpkgname-mtrace_pn-eglibc]:rename from RDEPENDS_${PN}-mtrace_pn-eglibc data.py:104 [expandKeys]
#     ""
#   override[defaultpkgname-staticdev]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:325
#     "${PN}-dev (= ${EXTENDPKGV})"
#   override[defaultpkgname-staticdev]:rename from RDEPENDS_${PN}-staticdev data.py:104 [expandKeys]
#     "${PN}-dev (= ${EXTENDPKGV})"
# pre-expansion value:
#   ""
RDEPENDS=""
#
# $RDEPENDS_defaultpkgname-dev [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:321
#     "${PN} (= ${EXTENDPKGV})"
#   rename from RDEPENDS_${PN}-dev data.py:104 [expandKeys]
#     "${PN} (= ${EXTENDPKGV})"
# pre-expansion value:
#   "${PN} (= ${EXTENDPKGV})"
RDEPENDS_defaultpkgname-dev="defaultpkgname (= 1.0-r0)"
#
# $RDEPENDS_defaultpkgname-mtrace_pn-eglibc [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:109
#     ""
#   rename from RDEPENDS_${PN}-mtrace_pn-eglibc data.py:104 [expandKeys]
#     ""
# pre-expansion value:
#   ""
RDEPENDS_defaultpkgname-mtrace_pn-eglibc=""
#
# $RDEPENDS_defaultpkgname-staticdev [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:325
#     "${PN}-dev (= ${EXTENDPKGV})"
#   rename from RDEPENDS_${PN}-staticdev data.py:104 [expandKeys]
#     "${PN}-dev (= ${EXTENDPKGV})"
# pre-expansion value:
#   "${PN}-dev (= ${EXTENDPKGV})"
RDEPENDS_defaultpkgname-staticdev="defaultpkgname-dev (= 1.0-r0)"
#
# $READELF [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:532
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:532
#     "${HOST_PREFIX}readelf"
# pre-expansion value:
#   "${HOST_PREFIX}readelf"
export READELF="x86_64-poky-linux-musl-readelf"
#
# $RECIPE_MAINTAINER_pn-acl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:30
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-acl="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-acpica
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:31
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-acpica="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-acpid
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:32
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-acpid="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-adwaita-icon-theme
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:33
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-adwaita-icon-theme="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-alsa-lib
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:34
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-alsa-lib="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-alsa-plugins
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:35
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-alsa-plugins="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-alsa-state
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:36
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-alsa-state="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-alsa-tools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:37
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-alsa-tools="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-alsa-utils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:38
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-alsa-utils="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-alsa-utils-scripts
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:39
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-alsa-utils-scripts="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-apmd
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:40
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-apmd="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-apr
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:41
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-apr="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-apr-util
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:42
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-apr-util="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-apt
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:43
#     "Aníbal Limón <limon.anibal@gmail.com>"
RECIPE_MAINTAINER_pn-apt="Aníbal Limón <limon.anibal@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-apt-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:44
#     "Aníbal Limón <limon.anibal@gmail.com>"
RECIPE_MAINTAINER_pn-apt-native="Aníbal Limón <limon.anibal@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-argp-standalone
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:45
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-argp-standalone="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-asciidoc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:46
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-asciidoc="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-aspell
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:47
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-aspell="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-assimp
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:48
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-assimp="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-at
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:49
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-at="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-at-spi2-atk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:50
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-at-spi2-atk="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-at-spi2-core
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:51
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-at-spi2-core="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-atk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:52
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-atk="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-attr
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:53
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-attr="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-autoconf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:54
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-autoconf="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-autoconf-archive
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:55
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-autoconf-archive="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-automake
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:56
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-automake="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-avahi
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:57
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-avahi="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-avahi-ui
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:58
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-avahi-ui="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-babeltrace
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:59
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-babeltrace="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-base-files
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:60
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-base-files="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-base-passwd
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:61
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-base-passwd="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-bash
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:62
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-bash="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-bash-completion
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:63
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-bash-completion="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-bc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:64
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-bc="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-bind
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:65
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-bind="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-binutils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:66
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-binutils="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-binutils-cross-canadian-x86-64 [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:68
#     "Khem Raj <raj.khem@gmail.com>"
#   rename from RECIPE_MAINTAINER_pn-binutils-cross-canadian-${TRANSLATED_TARGET_ARCH} data.py:104 [expandKeys]
#     "Khem Raj <raj.khem@gmail.com>"
# pre-expansion value:
#   "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-binutils-cross-canadian-x86-64="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-binutils-cross-testsuite
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:69
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-binutils-cross-testsuite="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-binutils-cross-x86_64 [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:67
#     "Khem Raj <raj.khem@gmail.com>"
#   rename from RECIPE_MAINTAINER_pn-binutils-cross-${TARGET_ARCH} data.py:104 [expandKeys]
#     "Khem Raj <raj.khem@gmail.com>"
# pre-expansion value:
#   "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-binutils-cross-x86_64="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-binutils-crosssdk-x86_64-pokysdk-linux [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:70
#     "Khem Raj <raj.khem@gmail.com>"
#   rename from RECIPE_MAINTAINER_pn-binutils-crosssdk-${SDK_SYS} data.py:104 [expandKeys]
#     "Khem Raj <raj.khem@gmail.com>"
# pre-expansion value:
#   "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-binutils-crosssdk-x86_64-pokysdk-linux="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-bison
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:71
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-bison="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-bjam-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:72
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-bjam-native="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-blktool
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:73
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-blktool="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-blktrace
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:74
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-blktrace="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-bluez5
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:75
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-bluez5="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-bmap-tools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:76
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-bmap-tools="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-boost
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:77
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-boost="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-bootchart2
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:78
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-bootchart2="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-bsd-headers
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:79
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-bsd-headers="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-btrfs-tools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:80
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-btrfs-tools="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-build-appliance-image
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:81
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-build-appliance-image="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-build-compare
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:82
#     "Paul Eggleton <paul.eggleton@linux.intel.com>"
RECIPE_MAINTAINER_pn-build-compare="Paul Eggleton <paul.eggleton@linux.intel.com>"
#
# $RECIPE_MAINTAINER_pn-build-sysroots
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:83
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-build-sysroots="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-builder
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:84
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-builder="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-buildtools-extended-tarball
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:85
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-buildtools-extended-tarball="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-buildtools-tarball
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:86
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-buildtools-tarball="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-busybox
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:87
#     "Andrej Valek <andrej.valek@siemens.com>"
RECIPE_MAINTAINER_pn-busybox="Andrej Valek <andrej.valek@siemens.com>"
#
# $RECIPE_MAINTAINER_pn-busybox-inittab
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:88
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-busybox-inittab="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-bzip2
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:89
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-bzip2="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-ca-certificates
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:90
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-ca-certificates="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-cairo
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:91
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-cairo="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-cantarell-fonts
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:92
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-cantarell-fonts="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-ccache
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:93
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-ccache="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-cdrtools-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:94
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-cdrtools-native="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-chkconfig
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:95
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-chkconfig="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-chkconfig-alternatives-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:96
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-chkconfig-alternatives-native="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-chrpath
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:97
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-chrpath="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-clutter-1.0
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:98
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-clutter-1.0="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-clutter-gst-3.0
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:99
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-clutter-gst-3.0="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-clutter-gtk-1.0
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:100
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-clutter-gtk-1.0="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-cmake
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:101
#     "Pascal Bach <pascal.bach@siemens.com>"
RECIPE_MAINTAINER_pn-cmake="Pascal Bach <pascal.bach@siemens.com>"
#
# $RECIPE_MAINTAINER_pn-cmake-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:102
#     "Pascal Bach <pascal.bach@siemens.com>"
RECIPE_MAINTAINER_pn-cmake-native="Pascal Bach <pascal.bach@siemens.com>"
#
# $RECIPE_MAINTAINER_pn-cogl-1.0
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:103
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-cogl-1.0="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-connman
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:104
#     "Changhyeok Bae <changhyeok.bae@gmail.com>"
RECIPE_MAINTAINER_pn-connman="Changhyeok Bae <changhyeok.bae@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-connman-conf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:105
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-connman-conf="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-connman-gnome
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:106
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-connman-gnome="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-console-tools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:107
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-console-tools="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-consolekit
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:108
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-consolekit="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-core-image-base
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:109
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-base="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-core-image-clutter
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:121
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-clutter="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-core-image-full-cmdline
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:115
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-full-cmdline="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-core-image-kernel-dev
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:116
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-kernel-dev="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-core-image-minimal
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:110
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-minimal="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-core-image-minimal-dev
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:111
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-minimal-dev="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-core-image-minimal-initramfs
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:112
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-minimal-initramfs="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-core-image-minimal-mtdutils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:113
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-minimal-mtdutils="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-core-image-sato
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:117
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-sato="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-core-image-sato-dev
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:124
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-sato-dev="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-core-image-sato-ptest-fast
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:125
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-sato-ptest-fast="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-core-image-sato-sdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:118
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-sato-sdk="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-core-image-sato-sdk-ptest
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:126
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-sato-sdk-ptest="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-core-image-testmaster
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:120
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-testmaster="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-core-image-testmaster-initramfs
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:119
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-testmaster-initramfs="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-core-image-tiny-initramfs
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:114
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-tiny-initramfs="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-core-image-weston
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:122
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-weston="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-core-image-x11
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:123
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-core-image-x11="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-coreutils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:127
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-coreutils="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-cpio
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:128
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-cpio="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-cracklib
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:129
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-cracklib="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-createrepo-c
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:130
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-createrepo-c="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-cronie
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:131
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-cronie="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-cross-localedef-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:132
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-cross-localedef-native="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-cryptodev-linux
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:133
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-cryptodev-linux="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-cryptodev-module
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:134
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-cryptodev-module="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-cryptodev-tests
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:135
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-cryptodev-tests="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-cups
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:136
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-cups="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-curl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:137
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-curl="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-cve-check-tool
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:138
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-cve-check-tool="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-cve-update-db-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:139
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-cve-update-db-native="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-cwautomacros
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:140
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-cwautomacros="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-db
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:141
#     "Mark Hatle <mark.hatle@windriver.com>"
RECIPE_MAINTAINER_pn-db="Mark Hatle <mark.hatle@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-dbus
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:142
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-dbus="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-dbus-glib
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:143
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-dbus-glib="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-dbus-test
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:144
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-dbus-test="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-dbus-wait
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:145
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-dbus-wait="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-debianutils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:146
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-debianutils="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-dejagnu
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:147
#     "Nathan Rossi <nathan@nathanrossi.com>"
RECIPE_MAINTAINER_pn-dejagnu="Nathan Rossi <nathan@nathanrossi.com>"
#
# $RECIPE_MAINTAINER_pn-depmodwrapper-cross
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:148
#     "Mark Hatle <mark.hatle@windriver.com>"
RECIPE_MAINTAINER_pn-depmodwrapper-cross="Mark Hatle <mark.hatle@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-desktop-file-utils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:149
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-desktop-file-utils="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-dhcp
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:150
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-dhcp="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-diffstat
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:151
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-diffstat="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-diffutils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:152
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-diffutils="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-distcc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:153
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-distcc="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-distcc-config
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:154
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-distcc-config="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-dmidecode
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:155
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-dmidecode="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-dnf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:156
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-dnf="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-docbook-xml-dtd4
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:157
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-docbook-xml-dtd4="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-docbook-xsl-stylesheets
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:158
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-docbook-xsl-stylesheets="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-dos2unix
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:159
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-dos2unix="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-dosfstools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:160
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-dosfstools="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-dpkg
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:161
#     "Aníbal Limón <limon.anibal@gmail.com>"
RECIPE_MAINTAINER_pn-dpkg="Aníbal Limón <limon.anibal@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-dropbear
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:162
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-dropbear="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-dtc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:163
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-dtc="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-dwarfsrcfiles
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:164
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-dwarfsrcfiles="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-e2fsprogs
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:165
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-e2fsprogs="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-ed
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:166
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-ed="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-efibootmgr
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:168
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-efibootmgr="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-efivar
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:167
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-efivar="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-elfutils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:169
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-elfutils="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-ell
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:170
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-ell="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-enchant
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:171
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-enchant="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-encodings
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:172
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-encodings="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-epiphany
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:173
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-epiphany="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-ethtool
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:174
#     "Changhyeok Bae <changhyeok.bae@gmail.com>"
RECIPE_MAINTAINER_pn-ethtool="Changhyeok Bae <changhyeok.bae@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-eudev
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:175
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-eudev="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-expat
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:176
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-expat="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-expect
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:177
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-expect="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-ffmpeg
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:178
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-ffmpeg="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-file
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:179
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-file="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-findutils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:180
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-findutils="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-flac
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:181
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-flac="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-flex
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:182
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-flex="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-font-alias
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:183
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-font-alias="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-font-util
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:184
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-font-util="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-fontconfig
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:185
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-fontconfig="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-foomatic-filters
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:186
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-foomatic-filters="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-formfactor
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:187
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-formfactor="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-freetype
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:188
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-freetype="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-fribidi
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:189
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-fribidi="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-fts
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:190
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-fts="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gawk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:191
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-gawk="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-gcc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:192
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-gcc="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gcc-cross-canadian-x86-64 [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:194
#     "Khem Raj <raj.khem@gmail.com>"
#   rename from RECIPE_MAINTAINER_pn-gcc-cross-canadian-${TRANSLATED_TARGET_ARCH} data.py:104 [expandKeys]
#     "Khem Raj <raj.khem@gmail.com>"
# pre-expansion value:
#   "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-gcc-cross-canadian-x86-64="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gcc-cross-initial-x86_64 [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:195
#     "Khem Raj <raj.khem@gmail.com>"
#   rename from RECIPE_MAINTAINER_pn-gcc-cross-initial-${TARGET_ARCH} data.py:104 [expandKeys]
#     "Khem Raj <raj.khem@gmail.com>"
# pre-expansion value:
#   "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-gcc-cross-initial-x86_64="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gcc-cross-x86_64 [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:193
#     "Khem Raj <raj.khem@gmail.com>"
#   rename from RECIPE_MAINTAINER_pn-gcc-cross-${TARGET_ARCH} data.py:104 [expandKeys]
#     "Khem Raj <raj.khem@gmail.com>"
# pre-expansion value:
#   "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-gcc-cross-x86_64="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gcc-crosssdk-initial-x86_64-pokysdk-linux [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:197
#     "Khem Raj <raj.khem@gmail.com>"
#   rename from RECIPE_MAINTAINER_pn-gcc-crosssdk-initial-${SDK_SYS} data.py:104 [expandKeys]
#     "Khem Raj <raj.khem@gmail.com>"
# pre-expansion value:
#   "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-gcc-crosssdk-initial-x86_64-pokysdk-linux="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gcc-crosssdk-x86_64-pokysdk-linux [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:196
#     "Khem Raj <raj.khem@gmail.com>"
#   rename from RECIPE_MAINTAINER_pn-gcc-crosssdk-${SDK_SYS} data.py:104 [expandKeys]
#     "Khem Raj <raj.khem@gmail.com>"
# pre-expansion value:
#   "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-gcc-crosssdk-x86_64-pokysdk-linux="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gcc-runtime
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:198
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-gcc-runtime="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gcc-sanitizers
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:199
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-gcc-sanitizers="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gcc-source-8.3.0
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:200
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-gcc-source-8.3.0="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gcc-source-9.2.0
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:201
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-gcc-source-9.2.0="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gccmakedep
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:202
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-gccmakedep="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gconf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:203
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-gconf="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gcr
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:204
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-gcr="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gdb
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:205
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-gdb="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gdb-cross-canadian-x86-64 [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:207
#     "Khem Raj <raj.khem@gmail.com>"
#   rename from RECIPE_MAINTAINER_pn-gdb-cross-canadian-${TRANSLATED_TARGET_ARCH} data.py:104 [expandKeys]
#     "Khem Raj <raj.khem@gmail.com>"
# pre-expansion value:
#   "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-gdb-cross-canadian-x86-64="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gdb-cross-x86_64 [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:206
#     "Khem Raj <raj.khem@gmail.com>"
#   rename from RECIPE_MAINTAINER_pn-gdb-cross-${TARGET_ARCH} data.py:104 [expandKeys]
#     "Khem Raj <raj.khem@gmail.com>"
# pre-expansion value:
#   "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-gdb-cross-x86_64="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gdbm
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:208
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-gdbm="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gdk-pixbuf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:209
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-gdk-pixbuf="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gettext
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:210
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-gettext="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-gettext-minimal-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:211
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-gettext-minimal-native="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-ghostscript
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:212
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-ghostscript="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-git
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:213
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-git="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-glew
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:214
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-glew="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-glib-2.0
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:215
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-glib-2.0="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-glib-networking
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:216
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-glib-networking="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-glibc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:217
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-glibc="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-glibc-locale
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:218
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-glibc-locale="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-glibc-mtrace
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:219
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-glibc-mtrace="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-glibc-scripts
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:220
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-glibc-scripts="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-glibc-testsuite
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:221
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-glibc-testsuite="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-glide
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:222
#     "Otavio Salvador <otavio.salvador@ossystems.com.br>"
RECIPE_MAINTAINER_pn-glide="Otavio Salvador <otavio.salvador@ossystems.com.br>"
#
# $RECIPE_MAINTAINER_pn-gmp
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:223
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-gmp="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gnome-desktop-testing
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:224
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-gnome-desktop-testing="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gnome-themes-standard
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:225
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-gnome-themes-standard="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gnu-config
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:226
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-gnu-config="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-gnu-efi
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:227
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-gnu-efi="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-gnupg
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:228
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-gnupg="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-gnutls
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:229
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-gnutls="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-go
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:230
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-go="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-go-cross-canadian-x86-64 [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:232
#     "Khem Raj <raj.khem@gmail.com>"
#   rename from RECIPE_MAINTAINER_pn-go-cross-canadian-${TRANSLATED_TARGET_ARCH} data.py:104 [expandKeys]
#     "Khem Raj <raj.khem@gmail.com>"
# pre-expansion value:
#   "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-go-cross-canadian-x86-64="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-go-cross-core2-64 [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:231
#     "Khem Raj <raj.khem@gmail.com>"
#   rename from RECIPE_MAINTAINER_pn-go-cross-${TUNE_PKGARCH} data.py:104 [expandKeys]
#     "Khem Raj <raj.khem@gmail.com>"
# pre-expansion value:
#   "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-go-cross-core2-64="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-go-crosssdk-x86_64-pokysdk-linux [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:233
#     "Khem Raj <raj.khem@gmail.com>"
#   rename from RECIPE_MAINTAINER_pn-go-crosssdk-${SDK_SYS} data.py:104 [expandKeys]
#     "Khem Raj <raj.khem@gmail.com>"
# pre-expansion value:
#   "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-go-crosssdk-x86_64-pokysdk-linux="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-go-dep
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:234
#     "Otavio Salvador <otavio.salvador@ossystems.com.br>"
RECIPE_MAINTAINER_pn-go-dep="Otavio Salvador <otavio.salvador@ossystems.com.br>"
#
# $RECIPE_MAINTAINER_pn-go-helloworld
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:235
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-go-helloworld="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-go-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:236
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-go-native="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-go-runtime
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:237
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-go-runtime="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gobject-introspection
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:238
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-gobject-introspection="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gperf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:239
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-gperf="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gpgme
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:240
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-gpgme="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-gptfdisk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:241
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-gptfdisk="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-grep
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:242
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-grep="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-groff
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:243
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-groff="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-grub
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:244
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-grub="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-grub-bootconf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:245
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-grub-bootconf="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-grub-efi
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:246
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-grub-efi="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gsettings-desktop-schemas
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:247
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-gsettings-desktop-schemas="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gst-examples
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:248
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-gst-examples="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gst-validate
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:249
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-gst-validate="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gstreamer1.0
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:250
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-gstreamer1.0="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gstreamer1.0-libav
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:251
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-gstreamer1.0-libav="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gstreamer1.0-meta-base
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:253
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-gstreamer1.0-meta-base="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gstreamer1.0-omx
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:252
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-gstreamer1.0-omx="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gstreamer1.0-plugins-bad
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:254
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-gstreamer1.0-plugins-bad="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gstreamer1.0-plugins-base
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:255
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-gstreamer1.0-plugins-base="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gstreamer1.0-plugins-good
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:256
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-gstreamer1.0-plugins-good="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gstreamer1.0-plugins-ugly
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:257
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-gstreamer1.0-plugins-ugly="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gstreamer1.0-python
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:258
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-gstreamer1.0-python="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gstreamer1.0-rtsp-server
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:259
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-gstreamer1.0-rtsp-server="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gstreamer1.0-vaapi
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:260
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-gstreamer1.0-vaapi="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gtk+
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:261
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-gtk+="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gtk+3
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:262
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-gtk+3="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gtk-doc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:263
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-gtk-doc="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-gtk-icon-utils-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:264
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-gtk-icon-utils-native="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-gzip
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:265
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-gzip="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-harfbuzz
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:266
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-harfbuzz="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-hdparm
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:267
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-hdparm="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-help2man-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:268
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-help2man-native="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-hicolor-icon-theme
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:269
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-hicolor-icon-theme="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-hwlatdetect
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:270
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-hwlatdetect="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-i2c-tools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:271
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-i2c-tools="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-icecc-create-env
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:272
#     "Joshua Watt <JPEWhacker@gmail.com>"
RECIPE_MAINTAINER_pn-icecc-create-env="Joshua Watt <JPEWhacker@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-icu
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:273
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-icu="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-ifupdown
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:274
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-ifupdown="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-inetutils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:275
#     "Tom Rini <trini@konsulko.com>"
RECIPE_MAINTAINER_pn-inetutils="Tom Rini <trini@konsulko.com>"
#
# $RECIPE_MAINTAINER_pn-init-ifupdown
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:276
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-init-ifupdown="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-initramfs-boot
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:277
#     "Otavio Salvador <otavio.salvador@ossystems.com.br>"
RECIPE_MAINTAINER_pn-initramfs-boot="Otavio Salvador <otavio.salvador@ossystems.com.br>"
#
# $RECIPE_MAINTAINER_pn-initramfs-framework
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:278
#     "Otavio Salvador <otavio.salvador@ossystems.com.br>"
RECIPE_MAINTAINER_pn-initramfs-framework="Otavio Salvador <otavio.salvador@ossystems.com.br>"
#
# $RECIPE_MAINTAINER_pn-initramfs-live-boot
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:279
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-initramfs-live-boot="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-initramfs-live-boot-tiny
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:280
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-initramfs-live-boot-tiny="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-initramfs-live-install
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:281
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-initramfs-live-install="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-initramfs-live-install-efi
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:282
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-initramfs-live-install-efi="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-initramfs-live-install-efi-testfs
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:283
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-initramfs-live-install-efi-testfs="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-initramfs-live-install-testfs
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:284
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-initramfs-live-install-testfs="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-initscripts
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:285
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-initscripts="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-intltool
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:286
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-intltool="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-iproute2
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:287
#     "Changhyeok Bae <changhyeok.bae@gmail.com>"
RECIPE_MAINTAINER_pn-iproute2="Changhyeok Bae <changhyeok.bae@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-iptables
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:288
#     "Changhyeok Bae <changhyeok.bae@gmail.com>"
RECIPE_MAINTAINER_pn-iptables="Changhyeok Bae <changhyeok.bae@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-iputils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:289
#     "Changhyeok Bae <changhyeok.bae@gmail.com>"
RECIPE_MAINTAINER_pn-iputils="Changhyeok Bae <changhyeok.bae@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-iso-codes
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:290
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-iso-codes="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-iw
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:291
#     "Changhyeok Bae <changhyeok.bae@gmail.com>"
RECIPE_MAINTAINER_pn-iw="Changhyeok Bae <changhyeok.bae@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-json-c
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:293
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-json-c="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-json-glib
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:294
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-json-glib="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-kbd
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:295
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-kbd="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-kern-tools-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:296
#     "Bruce Ashfield <bruce.ashfield@gmail.com>"
RECIPE_MAINTAINER_pn-kern-tools-native="Bruce Ashfield <bruce.ashfield@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-kernel-devsrc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:297
#     "Bruce Ashfield <bruce.ashfield@gmail.com>"
RECIPE_MAINTAINER_pn-kernel-devsrc="Bruce Ashfield <bruce.ashfield@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-kexec-tools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:298
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-kexec-tools="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-keymaps
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:299
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-keymaps="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-kmod
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:300
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-kmod="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-kmod-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:301
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-kmod-native="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-kmscube
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:302
#     "Carlos Rafael Giani <dv@pseudoterminal.org>"
RECIPE_MAINTAINER_pn-kmscube="Carlos Rafael Giani <dv@pseudoterminal.org>"
#
# $RECIPE_MAINTAINER_pn-l3afpad
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:303
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-l3afpad="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-lame
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:304
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-lame="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-ldconfig-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:305
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-ldconfig-native="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-less
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:306
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-less="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-liba52
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:307
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-liba52="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-libacpi
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:308
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libacpi="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libaio
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:309
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libaio="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libarchive
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:310
#     "Otavio Salvador <otavio.salvador@ossystems.com.br>"
RECIPE_MAINTAINER_pn-libarchive="Otavio Salvador <otavio.salvador@ossystems.com.br>"
#
# $RECIPE_MAINTAINER_pn-libassuan
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:311
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libassuan="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libatomic-ops
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:312
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libatomic-ops="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libbsd
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:313
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-libbsd="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-libcap
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:314
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-libcap="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-libcap-ng
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:315
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-libcap-ng="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-libcap-ng-python
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:316
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-libcap-ng-python="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-libcgroup
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:317
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libcgroup="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libcheck
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:318
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-libcheck="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-libcomps
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:319
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libcomps="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libconvert-asn1-perl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:320
#     "Tim Orling <timothy.t.orling@linux.intel.com>"
RECIPE_MAINTAINER_pn-libconvert-asn1-perl="Tim Orling <timothy.t.orling@linux.intel.com>"
#
# $RECIPE_MAINTAINER_pn-libcroco
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:321
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libcroco="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libdaemon
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:322
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libdaemon="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libdazzle
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:323
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libdazzle="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libdmx
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:324
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libdmx="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libdnf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:325
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libdnf="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libdrm
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:326
#     "Otavio Salvador <otavio.salvador@ossystems.com.br>"
RECIPE_MAINTAINER_pn-libdrm="Otavio Salvador <otavio.salvador@ossystems.com.br>"
#
# $RECIPE_MAINTAINER_pn-libedit
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:327
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-libedit="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libepoxy
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:328
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libepoxy="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-liberation-fonts
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:329
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-liberation-fonts="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-liberror-perl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:330
#     "Tim Orling <timothy.t.orling@linux.intel.com>"
RECIPE_MAINTAINER_pn-liberror-perl="Tim Orling <timothy.t.orling@linux.intel.com>"
#
# $RECIPE_MAINTAINER_pn-libevdev
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:331
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libevdev="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libevent
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:332
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libevent="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libexif
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:333
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libexif="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libfakekey
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:334
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libfakekey="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libffi
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:335
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libffi="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libfm
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:336
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libfm="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libfm-extra
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:337
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libfm-extra="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libfontenc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:338
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libfontenc="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libgcc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:339
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-libgcc="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libgcc-initial
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:340
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-libgcc-initial="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libgcrypt
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:341
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-libgcrypt="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-libgfortran
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:342
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-libgfortran="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libgloss
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:343
#     "Alejandro Hernandez <aehs29@gmail.com>"
RECIPE_MAINTAINER_pn-libgloss="Alejandro Hernandez <aehs29@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libglu
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:344
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-libglu="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libgpg-error
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:345
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-libgpg-error="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-libgudev
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:346
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-libgudev="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libical
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:347
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-libical="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libice
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:348
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libice="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libid3tag
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:349
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-libid3tag="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-libidn
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:350
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libidn="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libidn2
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:351
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-libidn2="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libinput
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:352
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-libinput="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libjitterentropy
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:353
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-libjitterentropy="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libjpeg-turbo
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:292
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libjpeg-turbo="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libksba
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:354
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libksba="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libmatchbox
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:355
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-libmatchbox="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libmnl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:356
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-libmnl="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libmodule-build-perl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:358
#     "Tim Orling <timothy.t.orling@linux.intel.com>"
RECIPE_MAINTAINER_pn-libmodule-build-perl="Tim Orling <timothy.t.orling@linux.intel.com>"
#
# $RECIPE_MAINTAINER_pn-libmodulemd
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:359
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libmodulemd="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libmpc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:357
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-libmpc="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libnewt
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:360
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-libnewt="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-libnewt-python
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:361
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-libnewt-python="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-libnl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:362
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libnl="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libnotify
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:363
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libnotify="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libnsl2
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:364
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-libnsl2="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libnss-mdns
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:365
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libnss-mdns="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libnss-nis
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:366
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-libnss-nis="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libogg
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:367
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libogg="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libomxil
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:368
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libomxil="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libpam
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:369
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libpam="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libpcap
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:370
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libpcap="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libpciaccess
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:371
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libpciaccess="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libpcre
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:372
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-libpcre="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-libpcre2
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:373
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libpcre2="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libpipeline
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:374
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libpipeline="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libpng
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:375
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libpng="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libproxy
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:376
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libproxy="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libpsl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:378
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libpsl="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libpthread-stubs
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:377
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libpthread-stubs="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-librepo
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:379
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-librepo="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-librsvg
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:380
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-librsvg="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libsamplerate0
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:381
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-libsamplerate0="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-libsdl2
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:382
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-libsdl2="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-libsecret
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:383
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libsecret="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libsm
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:384
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libsm="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libsndfile1
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:385
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-libsndfile1="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-libsolv
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:386
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libsolv="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libsoup-2.4
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:387
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libsoup-2.4="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libssp-nonshared
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:388
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-libssp-nonshared="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libtasn1
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:389
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libtasn1="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libtest-needs-perl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:390
#     "Tim Orling <timothy.t.orling@linux.intel.com>"
RECIPE_MAINTAINER_pn-libtest-needs-perl="Tim Orling <timothy.t.orling@linux.intel.com>"
#
# $RECIPE_MAINTAINER_pn-libtheora
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:391
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libtheora="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libtimedate-perl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:392
#     "Tim Orling <timothy.t.orling@linux.intel.com>"
RECIPE_MAINTAINER_pn-libtimedate-perl="Tim Orling <timothy.t.orling@linux.intel.com>"
#
# $RECIPE_MAINTAINER_pn-libtirpc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:393
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libtirpc="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libtool
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:394
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-libtool="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-libtool-cross
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:395
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-libtool-cross="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-libtool-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:396
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-libtool-native="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-libunistring
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:397
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libunistring="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libunwind
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:398
#     "Bruce Ashfield <bruce.ashfield@gmail.com>"
RECIPE_MAINTAINER_pn-libunwind="Bruce Ashfield <bruce.ashfield@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-liburcu
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:399
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-liburcu="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-liburi-perl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:400
#     "Tim Orling <timothy.t.orling@linux.intel.com>"
RECIPE_MAINTAINER_pn-liburi-perl="Tim Orling <timothy.t.orling@linux.intel.com>"
#
# $RECIPE_MAINTAINER_pn-libusb1
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:401
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libusb1="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libva
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:402
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libva="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libva-utils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:403
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-libva-utils="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-libvorbis
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:404
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-libvorbis="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-libwebp
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:405
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libwebp="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libx11
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:406
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libx11="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxau
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:407
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxau="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxcb
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:408
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxcb="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxcomposite
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:409
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxcomposite="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxcrypt
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:411
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-libxcrypt="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxcrypt-compat
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:412
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-libxcrypt-compat="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxcursor
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:410
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxcursor="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxdamage
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:413
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxdamage="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxdmcp
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:414
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxdmcp="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxext
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:415
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxext="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxfixes
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:416
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxfixes="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxfont
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:417
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxfont="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxfont2
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:418
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxfont2="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxft
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:419
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxft="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxi
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:420
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxi="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxinerama
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:421
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxinerama="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxkbcommon
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:422
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxkbcommon="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxkbfile
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:423
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxkbfile="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxml-namespacesupport-perl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:424
#     "Tim Orling <timothy.t.orling@linux.intel.com>"
RECIPE_MAINTAINER_pn-libxml-namespacesupport-perl="Tim Orling <timothy.t.orling@linux.intel.com>"
#
# $RECIPE_MAINTAINER_pn-libxml-parser-perl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:425
#     "Tim Orling <timothy.t.orling@linux.intel.com>"
RECIPE_MAINTAINER_pn-libxml-parser-perl="Tim Orling <timothy.t.orling@linux.intel.com>"
#
# $RECIPE_MAINTAINER_pn-libxml-perl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:426
#     "Tim Orling <timothy.t.orling@linux.intel.com>"
RECIPE_MAINTAINER_pn-libxml-perl="Tim Orling <timothy.t.orling@linux.intel.com>"
#
# $RECIPE_MAINTAINER_pn-libxml-sax-base-perl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:427
#     "Tim Orling <timothy.t.orling@linux.intel.com>"
RECIPE_MAINTAINER_pn-libxml-sax-base-perl="Tim Orling <timothy.t.orling@linux.intel.com>"
#
# $RECIPE_MAINTAINER_pn-libxml-sax-perl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:428
#     "Tim Orling <timothy.t.orling@linux.intel.com>"
RECIPE_MAINTAINER_pn-libxml-sax-perl="Tim Orling <timothy.t.orling@linux.intel.com>"
#
# $RECIPE_MAINTAINER_pn-libxml-simple-perl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:429
#     "Tim Orling <timothy.t.orling@linux.intel.com>"
RECIPE_MAINTAINER_pn-libxml-simple-perl="Tim Orling <timothy.t.orling@linux.intel.com>"
#
# $RECIPE_MAINTAINER_pn-libxml2
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:430
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-libxml2="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-libxmu
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:431
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxmu="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxpm
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:432
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxpm="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxrandr
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:433
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxrandr="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxrender
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:434
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxrender="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxres
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:435
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxres="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxscrnsaver
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:436
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxscrnsaver="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxshmfence
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:437
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxshmfence="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxslt
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:438
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libxslt="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxt
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:439
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxt="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxtst
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:440
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxtst="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxv
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:441
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxv="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxvmc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:442
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxvmc="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libxxf86vm
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:443
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-libxxf86vm="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-libyaml
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:444
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-libyaml="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-lighttpd
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:445
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-lighttpd="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-linux-dummy
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:446
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-linux-dummy="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-linux-firmware
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:447
#     "Otavio Salvador <otavio.salvador@ossystems.com.br>"
RECIPE_MAINTAINER_pn-linux-firmware="Otavio Salvador <otavio.salvador@ossystems.com.br>"
#
# $RECIPE_MAINTAINER_pn-linux-libc-headers
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:448
#     "Bruce Ashfield <bruce.ashfield@gmail.com>"
RECIPE_MAINTAINER_pn-linux-libc-headers="Bruce Ashfield <bruce.ashfield@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-linux-yocto
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:449
#     "Bruce Ashfield <bruce.ashfield@gmail.com>"
RECIPE_MAINTAINER_pn-linux-yocto="Bruce Ashfield <bruce.ashfield@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-linux-yocto-dev
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:450
#     "Bruce Ashfield <bruce.ashfield@gmail.com>"
RECIPE_MAINTAINER_pn-linux-yocto-dev="Bruce Ashfield <bruce.ashfield@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-linux-yocto-rt
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:451
#     "Bruce Ashfield <bruce.ashfield@gmail.com>"
RECIPE_MAINTAINER_pn-linux-yocto-rt="Bruce Ashfield <bruce.ashfield@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-linux-yocto-tiny
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:452
#     "Bruce Ashfield <bruce.ashfield@gmail.com>"
RECIPE_MAINTAINER_pn-linux-yocto-tiny="Bruce Ashfield <bruce.ashfield@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-llvm
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:453
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-llvm="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-logrotate
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:454
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-logrotate="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-lrzsz
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:455
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-lrzsz="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-lsb-release
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:456
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-lsb-release="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-lsof
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:457
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-lsof="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-ltp
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:458
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-ltp="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-lttng-modules
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:459
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-lttng-modules="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-lttng-tools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:460
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-lttng-tools="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-lttng-ust
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:461
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-lttng-ust="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-lz4
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:462
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-lz4="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-lzip
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:464
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-lzip="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-lzo
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:463
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-lzo="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-lzop
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:465
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-lzop="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-m4
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:466
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-m4="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-m4-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:467
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-m4-native="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-make
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:468
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-make="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-make-mod-scripts
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:471
#     "Bruce Ashfield <bruce.ashfield@gmail.com>"
RECIPE_MAINTAINER_pn-make-mod-scripts="Bruce Ashfield <bruce.ashfield@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-makedepend
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:469
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-makedepend="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-makedevs
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:470
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-makedevs="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-man-db
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:472
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-man-db="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-man-pages
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:473
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-man-pages="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-matchbox-config-gtk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:474
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-matchbox-config-gtk="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-matchbox-desktop
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:475
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-matchbox-desktop="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-matchbox-keyboard
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:476
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-matchbox-keyboard="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-matchbox-panel-2
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:477
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-matchbox-panel-2="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-matchbox-session
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:478
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-matchbox-session="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-matchbox-session-sato
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:479
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-matchbox-session-sato="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-matchbox-terminal
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:480
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-matchbox-terminal="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-matchbox-theme-sato
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:481
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-matchbox-theme-sato="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-matchbox-wm
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:482
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-matchbox-wm="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-mc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:483
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-mc="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-mdadm
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:484
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-mdadm="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-menu-cache
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:485
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-menu-cache="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-mesa
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:486
#     "Otavio Salvador <otavio.salvador@ossystems.com.br>"
RECIPE_MAINTAINER_pn-mesa="Otavio Salvador <otavio.salvador@ossystems.com.br>"
#
# $RECIPE_MAINTAINER_pn-mesa-demos
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:487
#     "Otavio Salvador <otavio.salvador@ossystems.com.br>"
RECIPE_MAINTAINER_pn-mesa-demos="Otavio Salvador <otavio.salvador@ossystems.com.br>"
#
# $RECIPE_MAINTAINER_pn-mesa-gl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:488
#     "Otavio Salvador <otavio.salvador@ossystems.com.br>"
RECIPE_MAINTAINER_pn-mesa-gl="Otavio Salvador <otavio.salvador@ossystems.com.br>"
#
# $RECIPE_MAINTAINER_pn-meson
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:489
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-meson="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-meta-environment-extsdk-genericx86-64 [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:491
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
#   rename from RECIPE_MAINTAINER_pn-meta-environment-extsdk-${MACHINE} data.py:104 [expandKeys]
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
# pre-expansion value:
#   "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-meta-environment-extsdk-genericx86-64="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-meta-environment-genericx86-64 [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:490
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
#   rename from RECIPE_MAINTAINER_pn-meta-environment-${MACHINE} data.py:104 [expandKeys]
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
# pre-expansion value:
#   "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-meta-environment-genericx86-64="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-meta-extsdk-toolchain
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:492
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-meta-extsdk-toolchain="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-meta-go-toolchain
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:493
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-meta-go-toolchain="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-meta-ide-support
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:494
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-meta-ide-support="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-meta-toolchain
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:495
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-meta-toolchain="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-meta-world-pkgdata
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:496
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-meta-world-pkgdata="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-mingetty
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:497
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-mingetty="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-mini-x-session
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:498
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-mini-x-session="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-minicom
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:499
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-minicom="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-mkfontdir
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:500
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-mkfontdir="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-mkfontscale
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:501
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-mkfontscale="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-mklibs-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:502
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-mklibs-native="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-mmc-utils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:503
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-mmc-utils="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-mobile-broadband-provider-info
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:504
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-mobile-broadband-provider-info="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-modutils-initscripts
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:505
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-modutils-initscripts="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-mpeg2dec
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:506
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-mpeg2dec="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-mpfr
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:507
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-mpfr="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-mpg123
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:508
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-mpg123="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-msmtp
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:509
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-msmtp="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-mtd-utils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:510
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-mtd-utils="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-mtdev
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:511
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-mtdev="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-mtools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:512
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-mtools="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-musl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:513
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-musl="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-musl-obstack
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:514
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-musl-obstack="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-musl-utils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:515
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-musl-utils="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-mx-1.0
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:516
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-mx-1.0="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-nasm
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:517
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-nasm="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-nativesdk-buildtools-perl-dummy
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:518
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-nativesdk-buildtools-perl-dummy="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-nativesdk-icecc-toolchain
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:519
#     "Joshua Watt <JPEWhacker@gmail.com>"
RECIPE_MAINTAINER_pn-nativesdk-icecc-toolchain="Joshua Watt <JPEWhacker@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-nativesdk-libtool
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:520
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-nativesdk-libtool="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-nativesdk-meson
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:521
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-nativesdk-meson="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-nativesdk-packagegroup-sdk-host
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:522
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-nativesdk-packagegroup-sdk-host="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-nativesdk-qemu-helper
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:523
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-nativesdk-qemu-helper="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-nativesdk-sdk-provides-dummy
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:524
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-nativesdk-sdk-provides-dummy="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-ncurses
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:526
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-ncurses="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-neard
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:527
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-neard="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-net-tools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:528
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-net-tools="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-netbase
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:529
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-netbase="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-nettle
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:530
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-nettle="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-newlib
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:525
#     "Alejandro Hernandez <aehs29@gmail.com>"
RECIPE_MAINTAINER_pn-newlib="Alejandro Hernandez <aehs29@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-nfs-export-root
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:531
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-nfs-export-root="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-nfs-utils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:532
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-nfs-utils="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-ninja
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:533
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-ninja="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-npth
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:534
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-npth="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-nspr
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:535
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-nspr="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-nss
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:536
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-nss="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-nss-myhostname
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:537
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-nss-myhostname="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-ofono
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:538
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-ofono="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-opensbi
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:539
#     "Alistair Francis <alistair.francis@wdc.com>"
RECIPE_MAINTAINER_pn-opensbi="Alistair Francis <alistair.francis@wdc.com>"
#
# $RECIPE_MAINTAINER_pn-openssh
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:540
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-openssh="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-openssl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:541
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-openssl="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-opkg
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:542
#     "Alejandro del Castillo <alejandro.delcastillo@ni.com>"
RECIPE_MAINTAINER_pn-opkg="Alejandro del Castillo <alejandro.delcastillo@ni.com>"
#
# $RECIPE_MAINTAINER_pn-opkg-arch-config
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:543
#     "Alejandro del Castillo <alejandro.delcastillo@ni.com>"
RECIPE_MAINTAINER_pn-opkg-arch-config="Alejandro del Castillo <alejandro.delcastillo@ni.com>"
#
# $RECIPE_MAINTAINER_pn-opkg-keyrings
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:544
#     "Alejandro del Castillo <alejandro.delcastillo@ni.com>"
RECIPE_MAINTAINER_pn-opkg-keyrings="Alejandro del Castillo <alejandro.delcastillo@ni.com>"
#
# $RECIPE_MAINTAINER_pn-opkg-utils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:545
#     "Alejandro del Castillo <alejandro.delcastillo@ni.com>"
RECIPE_MAINTAINER_pn-opkg-utils="Alejandro del Castillo <alejandro.delcastillo@ni.com>"
#
# $RECIPE_MAINTAINER_pn-orc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:546
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-orc="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-os-release
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:547
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-os-release="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-ovmf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:548
#     "Ricardo Neri <ricardo.neri-calderon@linux.intel.com>"
RECIPE_MAINTAINER_pn-ovmf="Ricardo Neri <ricardo.neri-calderon@linux.intel.com>"
#
# $RECIPE_MAINTAINER_pn-ovmf-shell-image
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:549
#     "Ricardo Neri <ricardo.neri-calderon@linux.intel.com>"
RECIPE_MAINTAINER_pn-ovmf-shell-image="Ricardo Neri <ricardo.neri-calderon@linux.intel.com>"
#
# $RECIPE_MAINTAINER_pn-p11-kit
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:550
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-p11-kit="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-package-index
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:551
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-package-index="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-pango
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:552
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-pango="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-parted
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:553
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-parted="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-patch
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:554
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-patch="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-patchelf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:555
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-patchelf="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-pbzip2
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:556
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-pbzip2="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-pciutils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:557
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-pciutils="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-pcmanfm
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:558
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-pcmanfm="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-perf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:559
#     "Bruce Ashfield <bruce.ashfield@gmail.com>"
RECIPE_MAINTAINER_pn-perf="Bruce Ashfield <bruce.ashfield@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-perl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:560
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-perl="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-perl-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:561
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-perl-native="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-piglit
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:562
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-piglit="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-pigz
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:563
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-pigz="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-pinentry
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:564
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-pinentry="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-pixman
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:565
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-pixman="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-pkgconf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:566
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-pkgconf="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-pkgconfig
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:567
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-pkgconfig="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-pm-utils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:568
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-pm-utils="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-pointercal-xinput
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:569
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-pointercal-xinput="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-pong-clock
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:570
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-pong-clock="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-popt
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:571
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-popt="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-powertop
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:572
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-powertop="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-ppp
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:573
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-ppp="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-ppp-dialin
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:574
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-ppp-dialin="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-prelink
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:575
#     "Mark Hatle <mark.hatle@windriver.com>"
RECIPE_MAINTAINER_pn-prelink="Mark Hatle <mark.hatle@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-procps
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:576
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-procps="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-pseudo
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:577
#     "Mark Hatle <mark.hatle@windriver.com>"
RECIPE_MAINTAINER_pn-pseudo="Mark Hatle <mark.hatle@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-psmisc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:578
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-psmisc="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-psplash
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:579
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-psplash="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-ptest-runner
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:580
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-ptest-runner="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-pulseaudio
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:581
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-pulseaudio="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-pulseaudio-client-conf-sato
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:582
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-pulseaudio-client-conf-sato="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-puzzles
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:583
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-puzzles="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-python
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:584
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:585
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python-native="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python-setuptools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:586
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python-setuptools="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:587
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-async
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:588
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-async="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-dbus
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:589
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-dbus="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-docutils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:590
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-docutils="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-extras
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:591
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-extras="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-file-utils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:592
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-file-utils="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-git
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:593
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-git="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-gitdb
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:594
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-gitdb="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-iniparse
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:595
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-iniparse="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-mako
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:596
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-mako="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:597
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-native="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-nose
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:598
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-nose="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-numpy
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:599
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-numpy="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-pbr
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:600
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-pbr="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-pip
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:601
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-pip="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-pycairo
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:602
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-pycairo="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-pygments
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:603
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-pygments="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-pygobject
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:604
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-pygobject="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-scons
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:605
#     "Tim Orling <timothy.t.orling@linux.intel.com>"
RECIPE_MAINTAINER_pn-python3-scons="Tim Orling <timothy.t.orling@linux.intel.com>"
#
# $RECIPE_MAINTAINER_pn-python3-scons-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:606
#     "Tim Orling <timothy.t.orling@linux.intel.com>"
RECIPE_MAINTAINER_pn-python3-scons-native="Tim Orling <timothy.t.orling@linux.intel.com>"
#
# $RECIPE_MAINTAINER_pn-python3-setuptools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:607
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-setuptools="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-six
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:608
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-six="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-smmap
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:609
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-smmap="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-subunit
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:610
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-subunit="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-python3-testtools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:611
#     "Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
RECIPE_MAINTAINER_pn-python3-testtools="Oleksandr Kravchuk <open.source@oleksandr-kravchuk.com>"
#
# $RECIPE_MAINTAINER_pn-qemu
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:612
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-qemu="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-qemu-helper-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:613
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-qemu-helper-native="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-qemu-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:614
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-qemu-native="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-qemu-system-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:615
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-qemu-system-native="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-qemuwrapper-cross
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:616
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-qemuwrapper-cross="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-quilt
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:617
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-quilt="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-quilt-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:618
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-quilt-native="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-quota
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:619
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-quota="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-re2c
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:620
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-re2c="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-readline
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:621
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-readline="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-resolvconf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:622
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-resolvconf="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-rgb
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:623
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-rgb="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-rng-tools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:625
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-rng-tools="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-rpcbind
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:624
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-rpcbind="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-rpcsvc-proto
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:626
#     "Khem Raj <raj.khem@gmail.com>"
RECIPE_MAINTAINER_pn-rpcsvc-proto="Khem Raj <raj.khem@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-rpm
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:627
#     "Mark Hatle <mark.hatle@windriver.com>"
RECIPE_MAINTAINER_pn-rpm="Mark Hatle <mark.hatle@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-rsync
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:628
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-rsync="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-rt-tests
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:629
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-rt-tests="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-ruby
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:630
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-ruby="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-run-postinsts
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:631
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-run-postinsts="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-rxvt-unicode
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:632
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-rxvt-unicode="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-sato-screenshot
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:633
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-sato-screenshot="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-sbc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:634
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-sbc="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-screen
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:635
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-screen="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-sed
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:636
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-sed="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-serf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:637
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-serf="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-setserial
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:638
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-setserial="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-settings-daemon
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:639
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-settings-daemon="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-shadow
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:640
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-shadow="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-shadow-securetty
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:641
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-shadow-securetty="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-shadow-sysroot
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:642
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-shadow-sysroot="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-shared-mime-info
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:643
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-shared-mime-info="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-shutdown-desktop
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:644
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-shutdown-desktop="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-signing-keys
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:645
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-signing-keys="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-slang
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:646
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-slang="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-socat
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:647
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-socat="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-speex
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:648
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-speex="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-speexdsp
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:649
#     "Tanu Kaskinen <tanuk@iki.fi>"
RECIPE_MAINTAINER_pn-speexdsp="Tanu Kaskinen <tanuk@iki.fi>"
#
# $RECIPE_MAINTAINER_pn-sqlite3
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:650
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-sqlite3="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-squashfs-tools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:651
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-squashfs-tools="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-startup-notification
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:652
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-startup-notification="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-strace
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:653
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-strace="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-stress-ng
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:654
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-stress-ng="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-subversion
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:655
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-subversion="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-sudo
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:656
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-sudo="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-swig
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:657
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-swig="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-sysfsutils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:658
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-sysfsutils="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-sysklogd
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:659
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-sysklogd="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-syslinux
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:660
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-syslinux="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-sysprof
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:661
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-sysprof="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-sysstat
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:662
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-sysstat="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-systemd
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:663
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-systemd="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-systemd-boot
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:664
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-systemd-boot="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-systemd-bootchart
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:665
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-systemd-bootchart="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-systemd-bootconf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:666
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-systemd-bootconf="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-systemd-compat-units
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:668
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-systemd-compat-units="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-systemd-conf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:667
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-systemd-conf="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-systemd-serialgetty
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:669
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-systemd-serialgetty="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-systemd-systemctl-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:670
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-systemd-systemctl-native="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-systemtap
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:671
#     "Victor Kamensky <kamensky@cisco.com>"
RECIPE_MAINTAINER_pn-systemtap="Victor Kamensky <kamensky@cisco.com>"
#
# $RECIPE_MAINTAINER_pn-systemtap-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:672
#     "Victor Kamensky <kamensky@cisco.com>"
RECIPE_MAINTAINER_pn-systemtap-native="Victor Kamensky <kamensky@cisco.com>"
#
# $RECIPE_MAINTAINER_pn-systemtap-uprobes
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:673
#     "Victor Kamensky <kamensky@cisco.com>"
RECIPE_MAINTAINER_pn-systemtap-uprobes="Victor Kamensky <kamensky@cisco.com>"
#
# $RECIPE_MAINTAINER_pn-sysvinit
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:674
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-sysvinit="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-sysvinit-inittab
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:675
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-sysvinit-inittab="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-taglib
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:676
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-taglib="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-tar
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:677
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-tar="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-tcf-agent
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:678
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-tcf-agent="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-tcl
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:679
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-tcl="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-tcp-wrappers
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:680
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-tcp-wrappers="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-testexport-tarball
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:681
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-testexport-tarball="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-texi2html
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:682
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-texi2html="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-texinfo
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:683
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-texinfo="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-texinfo-dummy-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:684
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-texinfo-dummy-native="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-tiff
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:685
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-tiff="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-time
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:686
#     "Robert Yang <liezhi.yang@windriver.com>"
RECIPE_MAINTAINER_pn-time="Robert Yang <liezhi.yang@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-ttf-bitstream-vera
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:687
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-ttf-bitstream-vera="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-tzcode-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:688
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-tzcode-native="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-tzdata
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:689
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-tzdata="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-u-boot
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:690
#     "Marek Vasut <marek.vasut@gmail.com>"
RECIPE_MAINTAINER_pn-u-boot="Marek Vasut <marek.vasut@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-u-boot-fw-utils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:691
#     "Marek Vasut <marek.vasut@gmail.com>"
RECIPE_MAINTAINER_pn-u-boot-fw-utils="Marek Vasut <marek.vasut@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-u-boot-tools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:692
#     "Marek Vasut <marek.vasut@gmail.com>"
RECIPE_MAINTAINER_pn-u-boot-tools="Marek Vasut <marek.vasut@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-udev-extraconf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:693
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-udev-extraconf="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-unfs3
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:694
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-unfs3="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-unifdef
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:695
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-unifdef="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-uninative-tarball
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:696
#     "Richard Purdie <richard.purdie@linuxfoundation.org>"
RECIPE_MAINTAINER_pn-uninative-tarball="Richard Purdie <richard.purdie@linuxfoundation.org>"
#
# $RECIPE_MAINTAINER_pn-unzip
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:697
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-unzip="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-update-rc.d
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:698
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-update-rc.d="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-usbinit
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:699
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-usbinit="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-usbutils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:700
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-usbutils="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-util-linux
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:701
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-util-linux="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-util-macros
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:702
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-util-macros="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-v86d
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:703
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-v86d="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-vala
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:704
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-vala="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-valgrind
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:705
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-valgrind="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-vim
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:706
#     "Tom Rini <trini@konsulko.com>"
RECIPE_MAINTAINER_pn-vim="Tom Rini <trini@konsulko.com>"
#
# $RECIPE_MAINTAINER_pn-vim-tiny
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:707
#     "Tom Rini <trini@konsulko.com>"
RECIPE_MAINTAINER_pn-vim-tiny="Tom Rini <trini@konsulko.com>"
#
# $RECIPE_MAINTAINER_pn-virglrenderer
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:708
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-virglrenderer="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-volatile-binds
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:709
#     "Chen Qi <Qi.Chen@windriver.com>"
RECIPE_MAINTAINER_pn-volatile-binds="Chen Qi <Qi.Chen@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-vte
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:710
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-vte="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-vulkan-demos
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:711
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-vulkan-demos="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-vulkan-headers
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:712
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-vulkan-headers="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-vulkan-loader
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:713
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-vulkan-loader="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-vulkan-tools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:714
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-vulkan-tools="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-waffle
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:715
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-waffle="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-watchdog
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:716
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-watchdog="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-watchdog-config
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:717
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-watchdog-config="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-wayland
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:718
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-wayland="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-wayland-protocols
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:719
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-wayland-protocols="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-webkitgtk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:720
#     "Alexander Kanavin <alex.kanavin@gmail.com>"
RECIPE_MAINTAINER_pn-webkitgtk="Alexander Kanavin <alex.kanavin@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-weston
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:721
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-weston="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-weston-init
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:722
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-weston-init="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-wget
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:723
#     "Yi Zhao <yi.zhao@windriver.com>"
RECIPE_MAINTAINER_pn-wget="Yi Zhao <yi.zhao@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-which
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:724
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-which="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-wic-tools
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:725
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-wic-tools="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-wireless-regdb
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:726
#     "Adrian Bunk <bunk@kernel.org>"
RECIPE_MAINTAINER_pn-wireless-regdb="Adrian Bunk <bunk@kernel.org>"
#
# $RECIPE_MAINTAINER_pn-wpa-supplicant
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:727
#     "Changhyeok Bae <changhyeok.bae@gmail.com>"
RECIPE_MAINTAINER_pn-wpa-supplicant="Changhyeok Bae <changhyeok.bae@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-x11perf
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:728
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-x11perf="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-x264
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:729
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-x264="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-xauth
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:730
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xauth="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xcb-proto
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:731
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xcb-proto="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xcb-util
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:732
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xcb-util="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xcb-util-image
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:733
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xcb-util-image="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xcb-util-keysyms
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:734
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xcb-util-keysyms="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xcb-util-renderutil
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:735
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xcb-util-renderutil="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xcb-util-wm
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:736
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xcb-util-wm="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xcursor-transparent-theme
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:737
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xcursor-transparent-theme="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xdg-utils
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:738
#     "Anuj Mittal <anuj.mittal@intel.com>"
RECIPE_MAINTAINER_pn-xdg-utils="Anuj Mittal <anuj.mittal@intel.com>"
#
# $RECIPE_MAINTAINER_pn-xdpyinfo
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:739
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xdpyinfo="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xev
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:740
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xev="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xeyes
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:741
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xeyes="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xf86-input-evdev
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:742
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xf86-input-evdev="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xf86-input-keyboard
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:743
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xf86-input-keyboard="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xf86-input-libinput
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:744
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xf86-input-libinput="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xf86-input-mouse
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:745
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xf86-input-mouse="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xf86-input-synaptics
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:746
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xf86-input-synaptics="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xf86-input-vmmouse
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:747
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xf86-input-vmmouse="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xf86-video-cirrus
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:748
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xf86-video-cirrus="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xf86-video-fbdev
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:749
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xf86-video-fbdev="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xf86-video-intel
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:750
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xf86-video-intel="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xf86-video-vesa
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:751
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xf86-video-vesa="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xf86-video-vmware
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:752
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xf86-video-vmware="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xhost
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:753
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xhost="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xinetd
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:754
#     "Ross Burton <ross.burton@intel.com>"
RECIPE_MAINTAINER_pn-xinetd="Ross Burton <ross.burton@intel.com>"
#
# $RECIPE_MAINTAINER_pn-xinit
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:755
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xinit="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xinput
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:756
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xinput="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xinput-calibrator
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:757
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xinput-calibrator="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xkbcomp
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:758
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xkbcomp="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xkeyboard-config
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:759
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xkeyboard-config="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xmlto
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:760
#     "Hongxu Jia <hongxu.jia@windriver.com>"
RECIPE_MAINTAINER_pn-xmlto="Hongxu Jia <hongxu.jia@windriver.com>"
#
# $RECIPE_MAINTAINER_pn-xmodmap
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:761
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xmodmap="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xorg-minimal-fonts
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:762
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xorg-minimal-fonts="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xorgproto
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:763
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xorgproto="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xprop
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:764
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xprop="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xrandr
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:765
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xrandr="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xrestop
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:766
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xrestop="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xserver-nodm-init
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:767
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xserver-nodm-init="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xserver-xf86-config
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:768
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xserver-xf86-config="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xserver-xorg
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:769
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xserver-xorg="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xset
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:770
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xset="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xtrans
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:771
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xtrans="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xuser-account
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:772
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xuser-account="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xvinfo
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:773
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xvinfo="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xwininfo
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:774
#     "Armin Kuster <akuster808@gmail.com>"
RECIPE_MAINTAINER_pn-xwininfo="Armin Kuster <akuster808@gmail.com>"
#
# $RECIPE_MAINTAINER_pn-xz
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:775
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-xz="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-zip
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:776
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-zip="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_MAINTAINER_pn-zlib
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/maintainers.inc:777
#     "Denys Dmytriyenko <denys@ti.com>"
RECIPE_MAINTAINER_pn-zlib="Denys Dmytriyenko <denys@ti.com>"
#
# $RECIPE_SYSROOT
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:376
#     "${WORKDIR}/recipe-sysroot"
RECIPE_SYSROOT="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot"
#
# $RECIPE_SYSROOT_NATIVE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:377
#     "${WORKDIR}/recipe-sysroot-native"
RECIPE_SYSROOT_NATIVE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native"
#
# $REMOVE_LIBTOOL_LA
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/remove-libtool.bbclass:3
#     "1"
REMOVE_LIBTOOL_LA="1"
#
# $REQUIRED_DISTRO_FEATURES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:350
#     [doc] "When a recipe inherits the distro_features_check class, this variable identifies distribution features that must exist in the current configuration in order for the OpenEmbedded build system to build the recipe."
#
# $REQUIRED_POKY_BBLAYERS_CONF_VERSION
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/layer.conf:20
#     "2"
REQUIRED_POKY_BBLAYERS_CONF_VERSION="2"
#
# $RM_WORK_EXCLUDE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:351
#     [doc] "With rm_work enabled, this variable specifies a list of packages whose work directories should not be removed."
#
# $ROOTFS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:352
#     [doc] "Indicates a filesystem image to include as the root filesystem."
#
# $ROOTFS_POSTPROCESS_COMMAND
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:353
#     [doc] "Added by classes to run post processing commands once the OpenEmbedded build system has created the root filesystem."
#
# $ROOT_HOME
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:86
#     [_defaultval] "/home/root"
ROOT_HOME="/home/root"
#
# $RPMDEPS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:1520
#     "${STAGING_LIBDIR_NATIVE}/rpm/rpmdeps --alldeps"
RPMDEPS="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/lib/rpm/rpmdeps --alldeps"
#
# $RPROVIDES [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:276
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:354
#     [doc] "A list of package name aliases that a package also provides. These aliases are useful for satisfying runtime dependencies of other packages both during the build and on the target."
# pre-expansion value:
#   ""
RPROVIDES=""
#
# $RRECOMMENDS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:355
#     [doc] "A list of packages that extends the usability of a package being built. The package being built does not depend on this list of packages in order to successfully build, but needs them for the extended usability."
#
# $RREPLACES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:356
#     [doc] "A list of packages replaced by a package. The package manager uses this variable to determine which package should be installed to replace other package(s) during an upgrade."
#
# $RSUGGESTS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:357
#     [doc] "A list of additional packages that you can suggest for installation by the package manager at the time a package is installed. Not all package managers support this functionality."
#
# $S [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:371
#     "${WORKDIR}/${BP}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:361
#     [doc] "The location in the Build Directory where unpacked package source code resides."
# pre-expansion value:
#   "${WORKDIR}/${BP}"
S="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/defaultpkgname-1.0"
#
# $SANITY_ABIFILE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/sanity.conf:8
#     "${TMPDIR}/abi_version"
SANITY_ABIFILE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/abi_version"
#
# $SANITY_BBLAYERCONF_SAMPLE
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sanity.bbclass:79
#     "${COREBASE}/meta*/conf/bblayers.conf.sample"
SANITY_BBLAYERCONF_SAMPLE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta*/conf/bblayers.conf.sample"
#
# $SANITY_DIFF_TOOL
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sanity.bbclass:37
#     "meld"
SANITY_DIFF_TOOL="meld"
#
# $SANITY_LOCALCONF_SAMPLE
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sanity.bbclass:39
#     "${COREBASE}/meta*/conf/local.conf.sample"
SANITY_LOCALCONF_SAMPLE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta*/conf/local.conf.sample"
#
# $SANITY_REQUIRED_UTILITIES
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sanity.bbclass:6
#     "patch diffstat makeinfo git bzip2 tar     gzip gawk chrpath wget cpio perl file which"
SANITY_REQUIRED_UTILITIES="patch diffstat makeinfo git bzip2 tar     gzip gawk chrpath wget cpio perl file which"
#
# $SANITY_SITECONF_SAMPLE
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sanity.bbclass:59
#     "${COREBASE}/meta*/conf/site.conf.sample"
SANITY_SITECONF_SAMPLE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta*/conf/site.conf.sample"
#
# $SANITY_TESTED_DISTROS [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:66
#     "             poky-2.7 \n             poky-3.0 \n             ubuntu-16.04 \n             ubuntu-18.04 \n             ubuntu-19.04 \n             fedora-28 \n             fedora-29 \n             fedora-30 \n             centos-7 \n             debian-8 \n             debian-9 \n             debian-10 \n             opensuseleap-15.1 \n             "
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:362
#     [doc] "A list of the host distribution identifiers that the build system has been tested against."
# pre-expansion value:
#   "             poky-2.7 \n             poky-3.0 \n             ubuntu-16.04 \n             ubuntu-18.04 \n             ubuntu-19.04 \n             fedora-28 \n             fedora-29 \n             fedora-30 \n             centos-7 \n             debian-8 \n             debian-9 \n             debian-10 \n             opensuseleap-15.1 \n             "
SANITY_TESTED_DISTROS="             poky-2.7 \n             poky-3.0 \n             ubuntu-16.04 \n             ubuntu-18.04 \n             ubuntu-19.04 \n             fedora-28 \n             fedora-29 \n             fedora-30 \n             centos-7 \n             debian-8 \n             debian-9 \n             debian-10 \n             opensuseleap-15.1 \n             "
#
# $SANITY_VERSION
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/sanity.conf:10
#     "1"
SANITY_VERSION="1"
#
# $SAVANNAH_GNU_MIRROR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:647
#     "https://download.savannah.gnu.org/releases"
SAVANNAH_GNU_MIRROR="https://download.savannah.gnu.org/releases"
#
# $SAVANNAH_NONGNU_MIRROR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:648
#     "https://download.savannah.nongnu.org/releases"
SAVANNAH_NONGNU_MIRROR="https://download.savannah.nongnu.org/releases"
#
# $SDKGCCVERSION
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/tcmode-default.inc:20
#     "${GCCVERSION}"
SDKGCCVERSION="9.%"
#
# $SDKIMAGE_FEATURES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:368
#     [doc] "Equivalent to IMAGE_FEATURES. However, this variable applies to the SDK generated from an image using the command 'bitbake -c populate_sdk imagename'."
#
# $SDKMACHINE [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:138
#     [_defaultval] "x86_64"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:369
#     [doc] "Specifies the architecture (i.e. i686 or x86_64) for which to build SDK and ADT items."
# pre-expansion value:
#   "x86_64"
SDKMACHINE="x86_64"
#
# $SDKPATH [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:422
#     "/usr/local/${SDK_NAME_PREFIX}-${SDK_ARCH}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:27
#     "/opt/${DISTRO}/${SDK_VERSION}"
# pre-expansion value:
#   "/opt/${DISTRO}/${SDK_VERSION}"
SDKPATH="/opt/poky-tiny/3.0.2"
#
# $SDKPATHNATIVE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:423
#     "${SDKPATH}/sysroots/${SDK_SYS}"
SDKPATHNATIVE="/opt/poky-tiny/3.0.2/sysroots/x86_64-pokysdk-linux"
#
# $SDKPKGSUFFIX
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:144
#     "nativesdk"
SDKPKGSUFFIX="nativesdk"
#
# $SDKUSE_NLS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:127
#     [_defaultval] "yes"
SDKUSE_NLS="yes"
#
# $SDK_ARCH [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine-sdk/x86_64.conf:1
#     "x86_64"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:363
#     [doc] "The target architecture for the SDK."
# pre-expansion value:
#   "x86_64"
SDK_ARCH="x86_64"
#
# $SDK_AS_ARCH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:147
#     "${BUILD_AS_ARCH}"
SDK_AS_ARCH=""
#
# $SDK_CC_ARCH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:143
#     "${BUILD_CC_ARCH}"
SDK_CC_ARCH=""
#
# $SDK_DEPLOY
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:364
#     [doc] "The directory set up and used by the populate_sdk_base to which the SDK is deployed."
#
# $SDK_DIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:365
#     [doc] "The parent directory used by the OpenEmbedded build system when creating SDK output."
#
# $SDK_LD_ARCH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:146
#     "${BUILD_LD_ARCH}"
SDK_LD_ARCH=""
#
# $SDK_NAME [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:421
#     "${SDK_NAME_PREFIX}-${SDK_ARCH}-${TUNE_PKGARCH}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:26
#     "${DISTRO}-${TCLIBC}-${SDKMACHINE}-${IMAGE_BASENAME}-${TUNE_PKGARCH}-${MACHINE}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:366
#     [doc] "The base name for SDK output files."
# pre-expansion value:
#   "${DISTRO}-${TCLIBC}-${SDKMACHINE}-${IMAGE_BASENAME}-${TUNE_PKGARCH}-${MACHINE}"
SDK_NAME="poky-tiny-musl-x86_64-defaultpkgname-core2-64-genericx86-64"
#
# $SDK_NAME_PREFIX
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:420
#     "oecore"
SDK_NAME_PREFIX="oecore"
#
# $SDK_OLDEST_KERNEL
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:438
#     "3.2.0"
SDK_OLDEST_KERNEL="3.2.0"
#
# $SDK_OS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:139
#     "${BUILD_OS}"
SDK_OS="linux"
#
# $SDK_OUTPUT
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:367
#     [doc] "The location used by the OpenEmbedded build system when creating SDK output."
#
# $SDK_PACKAGE_ARCHS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:145
#     "all any noarch ${SDK_ARCH}-${SDKPKGSUFFIX}"
SDK_PACKAGE_ARCHS="all any noarch x86_64-nativesdk"
#
# $SDK_PREFIX
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:142
#     "${SDK_SYS}-"
SDK_PREFIX="x86_64-pokysdk-linux-"
#
# $SDK_SYS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:141
#     "${SDK_ARCH}${SDK_VENDOR}${@['-' + d.getVar('SDK_OS'), ''][d.getVar('SDK_OS') == ('' or 'custom')]}"
SDK_SYS="x86_64-pokysdk-linux"
#
# $SDK_VENDOR [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:140
#     "-oesdk"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:5
#     "-pokysdk"
# pre-expansion value:
#   "-pokysdk"
SDK_VENDOR="-pokysdk"
#
# $SDK_VERSION [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:6
#     "${@d.getVar('DISTRO_VERSION').replace('snapshot-${DATE}', 'snapshot')}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:15
#     [vardepsexclude] "DATE"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:32
#     [_defaultval] "nodistro.0"
# pre-expansion value:
#   "${@d.getVar('DISTRO_VERSION').replace('snapshot-${DATE}', 'snapshot')}"
SDK_VERSION="3.0.2"
#
# $SECTION [12 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:229
#     "base"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:370
#     [doc] "The section in which packages should be categorized. Package management utilities can make use of this variable."
#   override[defaultpkgname-dbg]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:328
#     "devel"
#   override[defaultpkgname-dbg]:rename from SECTION_${PN}-dbg data.py:104 [expandKeys]
#     "devel"
#   override[defaultpkgname-dev]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:319
#     "devel"
#   override[defaultpkgname-dev]:rename from SECTION_${PN}-dev data.py:104 [expandKeys]
#     "devel"
#   override[defaultpkgname-doc]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:311
#     "doc"
#   override[defaultpkgname-doc]:rename from SECTION_${PN}-doc data.py:104 [expandKeys]
#     "doc"
#   override[defaultpkgname-src]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:334
#     "devel"
#   override[defaultpkgname-src]:rename from SECTION_${PN}-src data.py:104 [expandKeys]
#     "devel"
#   override[defaultpkgname-staticdev]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:324
#     "devel"
#   override[defaultpkgname-staticdev]:rename from SECTION_${PN}-staticdev data.py:104 [expandKeys]
#     "devel"
# pre-expansion value:
#   "base"
SECTION="base"
#
# $SECTION_defaultpkgname-dbg [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:328
#     "devel"
#   rename from SECTION_${PN}-dbg data.py:104 [expandKeys]
#     "devel"
# pre-expansion value:
#   "devel"
SECTION_defaultpkgname-dbg="devel"
#
# $SECTION_defaultpkgname-dev [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:319
#     "devel"
#   rename from SECTION_${PN}-dev data.py:104 [expandKeys]
#     "devel"
# pre-expansion value:
#   "devel"
SECTION_defaultpkgname-dev="devel"
#
# $SECTION_defaultpkgname-doc [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:311
#     "doc"
#   rename from SECTION_${PN}-doc data.py:104 [expandKeys]
#     "doc"
# pre-expansion value:
#   "doc"
SECTION_defaultpkgname-doc="doc"
#
# $SECTION_defaultpkgname-src [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:334
#     "devel"
#   rename from SECTION_${PN}-src data.py:104 [expandKeys]
#     "devel"
# pre-expansion value:
#   "devel"
SECTION_defaultpkgname-src="devel"
#
# $SECTION_defaultpkgname-staticdev [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:324
#     "devel"
#   rename from SECTION_${PN}-staticdev data.py:104 [expandKeys]
#     "devel"
# pre-expansion value:
#   "devel"
SECTION_defaultpkgname-staticdev="devel"
#
# $SECURITY_CFLAGS [17 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:26
#     "${SECURITY_STACK_PROTECTOR} ${SECURITY_PIE_CFLAGS} ${lcl_maybe_fortify} ${SECURITY_STRINGFORMAT}"
#   _remove[powerpc] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:35
#     "${SECURITY_PIE_CFLAGS}"
#   override[pn-libvirt]:set /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/distro/include/virt_security_flags.inc:2
#     "${SECURITY_NO_PIE_CFLAGS}"
#   override[pn-lxc]:set /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/distro/include/virt_security_flags.inc:5
#     "${SECURITY_NO_PIE_CFLAGS}"
#   override[pn-libgcc_powerpc]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:36
#     ""
#   override[pn-glibc]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:38
#     ""
#   override[pn-glibc-testsuite]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:39
#     ""
#   override[pn-gcc-runtime]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:40
#     ""
#   override[pn-grub]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:41
#     ""
#   override[pn-grub-efi]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:42
#     ""
#   override[pn-grub-efi-native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:43
#     ""
#   override[pn-grub-efi-x86-native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:44
#     ""
#   override[pn-grub-efi-i586-native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:45
#     ""
#   override[pn-grub-efi-x86-64-native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:46
#     ""
#   override[pn-mkelfimage_x86]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:47
#     ""
#   override[pn-valgrind]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:49
#     "${SECURITY_NOPIE_CFLAGS}"
#   override[pn-sysklogd]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:51
#     "${SECURITY_NOPIE_CFLAGS}"
# pre-expansion value:
#   "${SECURITY_STACK_PROTECTOR} ${SECURITY_PIE_CFLAGS} ${lcl_maybe_fortify} ${SECURITY_STRINGFORMAT}"
SECURITY_CFLAGS="-fstack-protector-strong  -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security"
#
# $SECURITY_CFLAGS_pn-gcc-runtime
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:40
#     ""
SECURITY_CFLAGS_pn-gcc-runtime=""
#
# $SECURITY_CFLAGS_pn-glibc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:38
#     ""
SECURITY_CFLAGS_pn-glibc=""
#
# $SECURITY_CFLAGS_pn-glibc-testsuite
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:39
#     ""
SECURITY_CFLAGS_pn-glibc-testsuite=""
#
# $SECURITY_CFLAGS_pn-grub
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:41
#     ""
SECURITY_CFLAGS_pn-grub=""
#
# $SECURITY_CFLAGS_pn-grub-efi
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:42
#     ""
SECURITY_CFLAGS_pn-grub-efi=""
#
# $SECURITY_CFLAGS_pn-grub-efi-i586-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:45
#     ""
SECURITY_CFLAGS_pn-grub-efi-i586-native=""
#
# $SECURITY_CFLAGS_pn-grub-efi-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:43
#     ""
SECURITY_CFLAGS_pn-grub-efi-native=""
#
# $SECURITY_CFLAGS_pn-grub-efi-x86-64-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:46
#     ""
SECURITY_CFLAGS_pn-grub-efi-x86-64-native=""
#
# $SECURITY_CFLAGS_pn-grub-efi-x86-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:44
#     ""
SECURITY_CFLAGS_pn-grub-efi-x86-native=""
#
# $SECURITY_CFLAGS_pn-libgcc_powerpc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:36
#     ""
SECURITY_CFLAGS_pn-libgcc_powerpc=""
#
# $SECURITY_CFLAGS_pn-libvirt
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/distro/include/virt_security_flags.inc:2
#     "${SECURITY_NO_PIE_CFLAGS}"
SECURITY_CFLAGS_pn-libvirt="-fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security"
#
# $SECURITY_CFLAGS_pn-lxc
#   set /home/epple/projects/ramdisk/tme_usb_token/meta-virtualization/conf/distro/include/virt_security_flags.inc:5
#     "${SECURITY_NO_PIE_CFLAGS}"
SECURITY_CFLAGS_pn-lxc="-fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security"
#
# $SECURITY_CFLAGS_pn-mkelfimage_x86
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:47
#     ""
SECURITY_CFLAGS_pn-mkelfimage_x86=""
#
# $SECURITY_CFLAGS_pn-sysklogd
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:51
#     "${SECURITY_NOPIE_CFLAGS}"
SECURITY_CFLAGS_pn-sysklogd="-no-pie -fno-PIE"
#
# $SECURITY_CFLAGS_pn-valgrind
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:49
#     "${SECURITY_NOPIE_CFLAGS}"
SECURITY_CFLAGS_pn-valgrind="-no-pie -fno-PIE"
#
# $SECURITY_LDFLAGS [4 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:29
#     "${SECURITY_STACK_PROTECTOR} -Wl,-z,relro,-z,now"
#   override[pn-valgrind]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:50
#     ""
#   override[pn-sysklogd]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:52
#     ""
#   override[pn-xserver-xorg]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:68
#     "${SECURITY_X_LDFLAGS}"
# pre-expansion value:
#   "${SECURITY_STACK_PROTECTOR} -Wl,-z,relro,-z,now"
SECURITY_LDFLAGS="-fstack-protector-strong -Wl,-z,relro,-z,now"
#
# $SECURITY_LDFLAGS_pn-sysklogd
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:52
#     ""
SECURITY_LDFLAGS_pn-sysklogd=""
#
# $SECURITY_LDFLAGS_pn-valgrind
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:50
#     ""
SECURITY_LDFLAGS_pn-valgrind=""
#
# $SECURITY_LDFLAGS_pn-xserver-xorg
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:68
#     "${SECURITY_X_LDFLAGS}"
SECURITY_LDFLAGS_pn-xserver-xorg="-fstack-protector-strong -Wl,-z,relro"
#
# $SECURITY_NOPIE_CFLAGS
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:22
#     "-no-pie -fno-PIE"
SECURITY_NOPIE_CFLAGS="-no-pie -fno-PIE"
#
# $SECURITY_NO_PIE_CFLAGS
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:27
#     "${SECURITY_STACK_PROTECTOR} ${lcl_maybe_fortify} ${SECURITY_STRINGFORMAT}"
SECURITY_NO_PIE_CFLAGS="-fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security"
#
# $SECURITY_PIE_CFLAGS
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:20
#     "${@'' if '${GCCPIE}' else '-pie -fPIE'}"
SECURITY_PIE_CFLAGS=""
#
# $SECURITY_STACK_PROTECTOR [4 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:24
#     "-fstack-protector-strong"
#   override[pn-gcc-runtime]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:63
#     ""
#   override[pn-glibc]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:64
#     ""
#   override[pn-glibc-testsuite]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:65
#     ""
# pre-expansion value:
#   "-fstack-protector-strong"
SECURITY_STACK_PROTECTOR="-fstack-protector-strong"
#
# $SECURITY_STACK_PROTECTOR_pn-gcc-runtime
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:63
#     ""
SECURITY_STACK_PROTECTOR_pn-gcc-runtime=""
#
# $SECURITY_STACK_PROTECTOR_pn-glibc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:64
#     ""
SECURITY_STACK_PROTECTOR_pn-glibc=""
#
# $SECURITY_STACK_PROTECTOR_pn-glibc-testsuite
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:65
#     ""
SECURITY_STACK_PROTECTOR_pn-glibc-testsuite=""
#
# $SECURITY_STRINGFORMAT [3 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:16
#     "-Wformat -Wformat-security -Werror=format-security"
#   override[pn-busybox]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:55
#     ""
#   override[pn-gcc]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:56
#     ""
# pre-expansion value:
#   "-Wformat -Wformat-security -Werror=format-security"
SECURITY_STRINGFORMAT="-Wformat -Wformat-security -Werror=format-security"
#
# $SECURITY_STRINGFORMAT_pn-busybox
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:55
#     ""
SECURITY_STRINGFORMAT_pn-busybox=""
#
# $SECURITY_STRINGFORMAT_pn-gcc
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:56
#     ""
SECURITY_STRINGFORMAT_pn-gcc=""
#
# $SECURITY_X_LDFLAGS
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:30
#     "${SECURITY_STACK_PROTECTOR} -Wl,-z,relro"
SECURITY_X_LDFLAGS="-fstack-protector-strong -Wl,-z,relro"
#
# $SELECTED_OPTIMIZATION [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:620
#     "${@d.getVar(oe.utils.vartrue('DEBUG_BUILD', 'DEBUG_OPTIMIZATION', 'FULL_OPTIMIZATION', d))}"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:621
#     [vardeps] "FULL_OPTIMIZATION DEBUG_OPTIMIZATION DEBUG_BUILD"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:371
#     [doc] "The variable takes the value of FULL_OPTIMIZATION unless DEBUG_BUILD = '1'. In this case, the value of DEBUG_OPTIMIZATION is used."
# pre-expansion value:
#   "${@d.getVar(oe.utils.vartrue('DEBUG_BUILD', 'DEBUG_OPTIMIZATION', 'FULL_OPTIMIZATION', d))}"
SELECTED_OPTIMIZATION="-O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot=                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native= "
#
# $SERIAL_CONSOLE [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:372
#     [doc] "The speed and device for the serial port used to attach the serial console. This variable is given to the kernel as the 'console' parameter. After booting occurs, getty is started on that port so remote login is possible."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:836
#     [_defaultval] ""
# pre-expansion value:
#   ""
SERIAL_CONSOLE=""
#
# $SERIAL_CONSOLES [3 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc:15
#     "115200;ttyS0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:373
#     [doc] "Defines the serial consoles (TTYs) to enable using getty."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:837
#     [_defaultval] "${@d.getVar('SERIAL_CONSOLE').replace(' ', ';')}"
# pre-expansion value:
#   "115200;ttyS0"
SERIAL_CONSOLES="115200;ttyS0"
#
# $SERIAL_CONSOLES_CHECK [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/genericx86-64.conf:9
#     "ttyS0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:374
#     [doc] "Similar to SERIAL_CONSOLES except the device is checked for existence before attempting to enable it. Supported only by SysVinit."
# pre-expansion value:
#   "ttyS0"
SERIAL_CONSOLES_CHECK="ttyS0"
#
# $SHELL [4 operations]
#   from env data.py:112 [inheritFromOS]
#     "/bin/bash"
#   auto env export data.py:114 [inheritFromOS]
#     [export] "True"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:858
#     [unexport] "1"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/terminal.bbclass:10
#     "bash"
# pre-expansion value:
#   "/bin/bash"
unset SHELL
#
# $SHLIBSDIRS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:1579
#     "${WORKDIR_PKGDATA}/${MLPREFIX}shlibs2"
SHLIBSDIRS="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/pkgdata-sysroot/shlibs2"
#
# $SHLIBSWORKDIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:1580
#     "${PKGDESTWORK}/${MLPREFIX}shlibs2"
SHLIBSWORKDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/pkgdata/shlibs2"
#
# $SIGGEN_EXCLUDERECIPES_ABISAFE [4 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:46
#     "   sysvinit-inittab   busybox-inittab   shadow-securetty   opkg-arch-config   netbase   init-ifupdown   connman-conf   formfactor   xserver-xf86-config   pointercal-xinput   base-files   keymaps   udev-extraconf   packagegroup-x11-xserver   systemd-serialgetty   initscripts   shadow   shadow-sysroot   base-passwd   opkg-utils   gstreamer1.0-meta-base   ca-certificates "
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:45
#     "   mplayer-common   fbset-modes   gpsd-machine-conf   distro-feed-configs   ca-certificates   pointercal "
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/layer.conf:17
#     "    ca-certificates-java "
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:376
#     [doc] "A list of recipes that are completely stable and will never change."
# pre-expansion value:
#   "    sysvinit-inittab   busybox-inittab   shadow-securetty   opkg-arch-config   netbase   init-ifupdown   connman-conf   formfactor   xserver-xf86-config   pointercal-xinput   base-files   keymaps   udev-extraconf   packagegroup-x11-xserver   systemd-serialgetty   initscripts   shadow   shadow-sysroot   base-passwd   opkg-utils   gstreamer1.0-meta-base   ca-certificates     mplayer-common   fbset-modes   gpsd-machine-conf   distro-feed-configs   ca-certificates   pointercal      ca-certificates-java "
SIGGEN_EXCLUDERECIPES_ABISAFE="    sysvinit-inittab   busybox-inittab   shadow-securetty   opkg-arch-config   netbase   init-ifupdown   connman-conf   formfactor   xserver-xf86-config   pointercal-xinput   base-files   keymaps   udev-extraconf   packagegroup-x11-xserver   systemd-serialgetty   initscripts   shadow   shadow-sysroot   base-passwd   opkg-utils   gstreamer1.0-meta-base   ca-certificates     mplayer-common   fbset-modes   gpsd-machine-conf   distro-feed-configs   ca-certificates   pointercal      ca-certificates-java "
#
# $SIGGEN_EXCLUDE_SAFE_RECIPE_DEPS [6 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:81
#     "   *->quilt-native   *->subversion-native   *->git-native   *->icecc-create-env-native   gcc-cross-${TARGET_ARCH}->linux-libc-headers   ppp-dialin->ppp   resolvconf->bash   docbook-xsl-stylesheets->perl   ca-certificates->openssl   initramfs-framework->${VIRTUAL-RUNTIME_base-utils}   initramfs-framework->eudev   initramfs-framework->systemd   initramfs-module-install-efi->dosfstools   initramfs-module-install-efi->e2fsprogs   initramfs-module-install-efi->parted   initramfs-module-install-efi->util-linux   initramfs-module-install->e2fsprogs   initramfs-module-install->grub   initramfs-module-install->parted   initramfs-module-install->util-linux   grub-efi->grub-bootconf   liberation-fonts->fontconfig   cantarell-fonts->fontconfig   gnome-icon-theme->librsvg   font-alias->font-util   systemd-boot->systemd-bootconf   systemd->systemd-conf   weston->weston-init   weston-init->weston   weston-init->kbd   connman->xl2tpd   lttng-tools->lttng-modules "
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:57
#     "   android-tools->android-tools-conf   usb-modeswitch-data->usb-modeswitch   lmsensors->lmsensors-config   phoronix-test-suite->bash   phoronix-test-suite->python   phoronix-test-suite->php   phoronix-test-suite->lsb-release   phoronix-test-suite->util-linux   phoronix-test-suite->busybox "
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-oe/conf/layer.conf:84
#     "   terminus-font->fontconfig   ttf-abyssinica->fontconfig   ttf-arphic-uming->fontconfig   ttf-dejavu->fontconfig   ttf-droid->fontconfig   ttf-gentium->fontconfig   ttf-hunkyfonts->fontconfig   ttf-inconsolata->fontconfig   ttf-liberation->fontconfig   ttf-liberation-sans-narrow->fontconfig   ttf-lklug->fontconfig   ttf-lohit->fontconfig   ttf-pt-sans->fontconfig   ttf-mplus->fontconfig   ttf-sazanami->fontconfig   ttf-tlwg->fontconfig   ttf-ubuntu-font-family->fontconfig   ttf-vlgothic->fontconfig   ttf-wqy-zenhei->fontconfig   source-han-sans-cn-fonts->fontconfig   source-han-sans-jp-fonts->fontconfig   source-han-sans-kr-fonts->fontconfig   source-han-sans-tw-fonts->fontconfig "
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-openembedded/meta-networking/conf/layer.conf:27
#     "   wireguard-tools->wireguard-module   wireless-regdb->crda "
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:375
#     [doc] "A list of recipe dependencies that should not be used to determine signatures of tasks from one recipe when they depend on tasks from another recipe."
#   set base.bbclass:255 [base_eventhandler]
#     "    *->quilt-native   *->subversion-native   *->git-native   *->icecc-create-env-native   gcc-cross-x86_64->linux-libc-headers   ppp-dialin->ppp   resolvconf->bash   docbook-xsl-stylesheets->perl   ca-certificates->openssl   initramfs-framework->busybox   initramfs-framework->eudev   initramfs-framework->systemd   initramfs-module-install-efi->dosfstools   initramfs-module-install-efi->e2fsprogs   initramfs-module-install-efi->parted   initramfs-module-install-efi->util-linux   initramfs-module-install->e2fsprogs   initramfs-module-install->grub   initramfs-module-install->parted   initramfs-module-install->util-linux   grub-efi->grub-bootconf   liberation-fonts->fontconfig   cantarell-fonts->fontconfig   gnome-icon-theme->librsvg   font-alias->font-util   systemd-boot->systemd-bootconf   systemd->systemd-conf   weston->weston-init   weston-init->weston   weston-init->kbd   connman->xl2tpd   lttng-tools->lttng-modules     android-tools->android-tools-conf   usb-modeswitch-data->usb-modeswitch   lmsensors->lmsensors-config   phoronix-test-suite->bash   phoronix-test-suite->python   phoronix-test-suite->php   phoronix-test-suite->lsb-release   phoronix-test-suite->util-linux   phoronix-test-suite->busybox     terminus-font->fontconfig   ttf-abyssinica->fontconfig   ttf-arphic-uming->fontconfig   ttf-dejavu->fontconfig   ttf-droid->fontconfig   ttf-gentium->fontconfig   ttf-hunkyfonts->fontconfig   ttf-inconsolata->fontconfig   ttf-liberation->fontconfig   ttf-liberation-sans-narrow->fontconfig   ttf-lklug->fontconfig   ttf-lohit->fontconfig   ttf-pt-sans->fontconfig   ttf-mplus->fontconfig   ttf-sazanami->fontconfig   ttf-tlwg->fontconfig   ttf-ubuntu-font-family->fontconfig   ttf-vlgothic->fontconfig   ttf-wqy-zenhei->fontconfig   source-han-sans-cn-fonts->fontconfig   source-han-sans-jp-fonts->fontconfig   source-han-sans-kr-fonts->fontconfig   source-han-sans-tw-fonts->fontconfig     wireguard-tools->wireguard-module   wireless-regdb->crda      *->quilt-native   *->subversion-native   *->git-native   *->icecc-create-env-native   gcc-cross-x86_64->linux-libc-headers   ppp-dialin->ppp   resolvconf->bash   docbook-xsl-stylesheets->perl   ca-certificates->openssl   initramfs-framework->busybox   initramfs-framework->eudev   initramfs-framework->systemd   initramfs-module-install-efi->dosfstools   initramfs-module-install-efi->e2fsprogs   initramfs-module-install-efi->parted   initramfs-module-install-efi->util-linux   initramfs-module-install->e2fsprogs   initramfs-module-install->grub   initramfs-module-install->parted   initramfs-module-install->util-linux   grub-efi->grub-bootconf   liberation-fonts->fontconfig   cantarell-fonts->fontconfig   gnome-icon-theme->librsvg   font-alias->font-util   systemd-boot->systemd-bootconf   systemd->systemd-conf   weston->weston-init   weston-init->weston   weston-init->kbd   connman->xl2tpd   lttng-tools->lttng-modules     android-tools->android-tools-conf   usb-modeswitch-data->usb-modeswitch   lmsensors->lmsensors-config   phoronix-test-suite->bash   phoronix-test-suite->python   phoronix-test-suite->php   phoronix-test-suite->lsb-release   phoronix-test-suite->util-linux   phoronix-test-suite->busybox     terminus-font->fontconfig   ttf-abyssinica->fontconfig   ttf-arphic-uming->fontconfig   ttf-dejavu->fontconfig   ttf-droid->fontconfig   ttf-gentium->fontconfig   ttf-hunkyfonts->fontconfig   ttf-inconsolata->fontconfig   ttf-liberation->fontconfig   ttf-liberation-sans-narrow->fontconfig   ttf-lklug->fontconfig   ttf-lohit->fontconfig   ttf-pt-sans->fontconfig   ttf-mplus->fontconfig   ttf-sazanami->fontconfig   ttf-tlwg->fontconfig   ttf-ubuntu-font-family->fontconfig   ttf-vlgothic->fontconfig   ttf-wqy-zenhei->fontconfig   source-han-sans-cn-fonts->fontconfig   source-han-sans-jp-fonts->fontconfig   source-han-sans-kr-fonts->fontconfig   source-han-sans-tw-fonts->fontconfig     wireguard-tools->wireguard-module   wireless-regdb->crda      *->quilt-native   *->subversion-native   *->git-native   *->icecc-create-env-native   gcc-cross-x86_64->linux-libc-headers   ppp-dialin->ppp   resolvconf->bash   docbook-xsl-stylesheets->perl   ca-certificates->openssl   initramfs-framework->busybox   initramfs-framework->eudev   initramfs-framework->systemd   initramfs-module-install-efi->dosfstools   initramfs-module-install-efi->e2fsprogs   initramfs-module-install-efi->parted   initramfs-module-install-efi->util-linux   initramfs-module-install->e2fsprogs   initramfs-module-install->grub   initramfs-module-install->parted   initramfs-module-install->util-linux   grub-efi->grub-bootconf   liberation-fonts->fontconfig   cantarell-fonts->fontconfig   gnome-icon-theme->librsvg   font-alias->font-util   systemd-boot->systemd-bootconf   systemd->systemd-conf   weston->weston-init   weston-init->weston   weston-init->kbd   connman->xl2tpd   lttng-tools->lttng-modules     android-tools->android-tools-conf   usb-modeswitch-data->usb-modeswitch   lmsensors->lmsensors-config   phoronix-test-suite->bash   phoronix-test-suite->python   phoronix-test-suite->php   phoronix-test-suite->lsb-release   phoronix-test-suite->util-linux   phoronix-test-suite->busybox     terminus-font->fontconfig   ttf-abyssinica->fontconfig   ttf-arphic-uming->fontconfig   ttf-dejavu->fontconfig   ttf-droid->fontconfig   ttf-gentium->fontconfig   ttf-hunkyfonts->fontconfig   ttf-inconsolata->fontconfig   ttf-liberation->fontconfig   ttf-liberation-sans-narrow->fontconfig   ttf-lklug->fontconfig   ttf-lohit->fontconfig   ttf-pt-sans->fontconfig   ttf-mplus->fontconfig   ttf-sazanami->fontconfig   ttf-tlwg->fontconfig   ttf-ubuntu-font-family->fontconfig   ttf-vlgothic->fontconfig   ttf-wqy-zenhei->fontconfig   source-han-sans-cn-fonts->fontconfig   source-han-sans-jp-fonts->fontconfig   source-han-sans-kr-fonts->fontconfig   source-han-sans-tw-fonts->fontconfig     wireguard-tools->wireguard-module   wireless-regdb->crda "
# pre-expansion value:
#   "    *->quilt-native   *->subversion-native   *->git-native   *->icecc-create-env-native   gcc-cross-x86_64->linux-libc-headers   ppp-dialin->ppp   resolvconf->bash   docbook-xsl-stylesheets->perl   ca-certificates->openssl   initramfs-framework->busybox   initramfs-framework->eudev   initramfs-framework->systemd   initramfs-module-install-efi->dosfstools   initramfs-module-install-efi->e2fsprogs   initramfs-module-install-efi->parted   initramfs-module-install-efi->util-linux   initramfs-module-install->e2fsprogs   initramfs-module-install->grub   initramfs-module-install->parted   initramfs-module-install->util-linux   grub-efi->grub-bootconf   liberation-fonts->fontconfig   cantarell-fonts->fontconfig   gnome-icon-theme->librsvg   font-alias->font-util   systemd-boot->systemd-bootconf   systemd->systemd-conf   weston->weston-init   weston-init->weston   weston-init->kbd   connman->xl2tpd   lttng-tools->lttng-modules     android-tools->android-tools-conf   usb-modeswitch-data->usb-modeswitch   lmsensors->lmsensors-config   phoronix-test-suite->bash   phoronix-test-suite->python   phoronix-test-suite->php   phoronix-test-suite->lsb-release   phoronix-test-suite->util-linux   phoronix-test-suite->busybox     terminus-font->fontconfig   ttf-abyssinica->fontconfig   ttf-arphic-uming->fontconfig   ttf-dejavu->fontconfig   ttf-droid->fontconfig   ttf-gentium->fontconfig   ttf-hunkyfonts->fontconfig   ttf-inconsolata->fontconfig   ttf-liberation->fontconfig   ttf-liberation-sans-narrow->fontconfig   ttf-lklug->fontconfig   ttf-lohit->fontconfig   ttf-pt-sans->fontconfig   ttf-mplus->fontconfig   ttf-sazanami->fontconfig   ttf-tlwg->fontconfig   ttf-ubuntu-font-family->fontconfig   ttf-vlgothic->fontconfig   ttf-wqy-zenhei->fontconfig   source-han-sans-cn-fonts->fontconfig   source-han-sans-jp-fonts->fontconfig   source-han-sans-kr-fonts->fontconfig   source-han-sans-tw-fonts->fontconfig     wireguard-tools->wireguard-module   wireless-regdb->crda      *->quilt-native   *->subversion-native   *->git-native   *->icecc-create-env-native   gcc-cross-x86_64->linux-libc-headers   ppp-dialin->ppp   resolvconf->bash   docbook-xsl-stylesheets->perl   ca-certificates->openssl   initramfs-framework->busybox   initramfs-framework->eudev   initramfs-framework->systemd   initramfs-module-install-efi->dosfstools   initramfs-module-install-efi->e2fsprogs   initramfs-module-install-efi->parted   initramfs-module-install-efi->util-linux   initramfs-module-install->e2fsprogs   initramfs-module-install->grub   initramfs-module-install->parted   initramfs-module-install->util-linux   grub-efi->grub-bootconf   liberation-fonts->fontconfig   cantarell-fonts->fontconfig   gnome-icon-theme->librsvg   font-alias->font-util   systemd-boot->systemd-bootconf   systemd->systemd-conf   weston->weston-init   weston-init->weston   weston-init->kbd   connman->xl2tpd   lttng-tools->lttng-modules     android-tools->android-tools-conf   usb-modeswitch-data->usb-modeswitch   lmsensors->lmsensors-config   phoronix-test-suite->bash   phoronix-test-suite->python   phoronix-test-suite->php   phoronix-test-suite->lsb-release   phoronix-test-suite->util-linux   phoronix-test-suite->busybox     terminus-font->fontconfig   ttf-abyssinica->fontconfig   ttf-arphic-uming->fontconfig   ttf-dejavu->fontconfig   ttf-droid->fontconfig   ttf-gentium->fontconfig   ttf-hunkyfonts->fontconfig   ttf-inconsolata->fontconfig   ttf-liberation->fontconfig   ttf-liberation-sans-narrow->fontconfig   ttf-lklug->fontconfig   ttf-lohit->fontconfig   ttf-pt-sans->fontconfig   ttf-mplus->fontconfig   ttf-sazanami->fontconfig   ttf-tlwg->fontconfig   ttf-ubuntu-font-family->fontconfig   ttf-vlgothic->fontconfig   ttf-wqy-zenhei->fontconfig   source-han-sans-cn-fonts->fontconfig   source-han-sans-jp-fonts->fontconfig   source-han-sans-kr-fonts->fontconfig   source-han-sans-tw-fonts->fontconfig     wireguard-tools->wireguard-module   wireless-regdb->crda      *->quilt-native   *->subversion-native   *->git-native   *->icecc-create-env-native   gcc-cross-x86_64->linux-libc-headers   ppp-dialin->ppp   resolvconf->bash   docbook-xsl-stylesheets->perl   ca-certificates->openssl   initramfs-framework->busybox   initramfs-framework->eudev   initramfs-framework->systemd   initramfs-module-install-efi->dosfstools   initramfs-module-install-efi->e2fsprogs   initramfs-module-install-efi->parted   initramfs-module-install-efi->util-linux   initramfs-module-install->e2fsprogs   initramfs-module-install->grub   initramfs-module-install->parted   initramfs-module-install->util-linux   grub-efi->grub-bootconf   liberation-fonts->fontconfig   cantarell-fonts->fontconfig   gnome-icon-theme->librsvg   font-alias->font-util   systemd-boot->systemd-bootconf   systemd->systemd-conf   weston->weston-init   weston-init->weston   weston-init->kbd   connman->xl2tpd   lttng-tools->lttng-modules     android-tools->android-tools-conf   usb-modeswitch-data->usb-modeswitch   lmsensors->lmsensors-config   phoronix-test-suite->bash   phoronix-test-suite->python   phoronix-test-suite->php   phoronix-test-suite->lsb-release   phoronix-test-suite->util-linux   phoronix-test-suite->busybox     terminus-font->fontconfig   ttf-abyssinica->fontconfig   ttf-arphic-uming->fontconfig   ttf-dejavu->fontconfig   ttf-droid->fontconfig   ttf-gentium->fontconfig   ttf-hunkyfonts->fontconfig   ttf-inconsolata->fontconfig   ttf-liberation->fontconfig   ttf-liberation-sans-narrow->fontconfig   ttf-lklug->fontconfig   ttf-lohit->fontconfig   ttf-pt-sans->fontconfig   ttf-mplus->fontconfig   ttf-sazanami->fontconfig   ttf-tlwg->fontconfig   ttf-ubuntu-font-family->fontconfig   ttf-vlgothic->fontconfig   ttf-wqy-zenhei->fontconfig   source-han-sans-cn-fonts->fontconfig   source-han-sans-jp-fonts->fontconfig   source-han-sans-kr-fonts->fontconfig   source-han-sans-tw-fonts->fontconfig     wireguard-tools->wireguard-module   wireless-regdb->crda "
SIGGEN_EXCLUDE_SAFE_RECIPE_DEPS="    *->quilt-native   *->subversion-native   *->git-native   *->icecc-create-env-native   gcc-cross-x86_64->linux-libc-headers   ppp-dialin->ppp   resolvconf->bash   docbook-xsl-stylesheets->perl   ca-certificates->openssl   initramfs-framework->busybox   initramfs-framework->eudev   initramfs-framework->systemd   initramfs-module-install-efi->dosfstools   initramfs-module-install-efi->e2fsprogs   initramfs-module-install-efi->parted   initramfs-module-install-efi->util-linux   initramfs-module-install->e2fsprogs   initramfs-module-install->grub   initramfs-module-install->parted   initramfs-module-install->util-linux   grub-efi->grub-bootconf   liberation-fonts->fontconfig   cantarell-fonts->fontconfig   gnome-icon-theme->librsvg   font-alias->font-util   systemd-boot->systemd-bootconf   systemd->systemd-conf   weston->weston-init   weston-init->weston   weston-init->kbd   connman->xl2tpd   lttng-tools->lttng-modules     android-tools->android-tools-conf   usb-modeswitch-data->usb-modeswitch   lmsensors->lmsensors-config   phoronix-test-suite->bash   phoronix-test-suite->python   phoronix-test-suite->php   phoronix-test-suite->lsb-release   phoronix-test-suite->util-linux   phoronix-test-suite->busybox     terminus-font->fontconfig   ttf-abyssinica->fontconfig   ttf-arphic-uming->fontconfig   ttf-dejavu->fontconfig   ttf-droid->fontconfig   ttf-gentium->fontconfig   ttf-hunkyfonts->fontconfig   ttf-inconsolata->fontconfig   ttf-liberation->fontconfig   ttf-liberation-sans-narrow->fontconfig   ttf-lklug->fontconfig   ttf-lohit->fontconfig   ttf-pt-sans->fontconfig   ttf-mplus->fontconfig   ttf-sazanami->fontconfig   ttf-tlwg->fontconfig   ttf-ubuntu-font-family->fontconfig   ttf-vlgothic->fontconfig   ttf-wqy-zenhei->fontconfig   source-han-sans-cn-fonts->fontconfig   source-han-sans-jp-fonts->fontconfig   source-han-sans-kr-fonts->fontconfig   source-han-sans-tw-fonts->fontconfig     wireguard-tools->wireguard-module   wireless-regdb->crda      *->quilt-native   *->subversion-native   *->git-native   *->icecc-create-env-native   gcc-cross-x86_64->linux-libc-headers   ppp-dialin->ppp   resolvconf->bash   docbook-xsl-stylesheets->perl   ca-certificates->openssl   initramfs-framework->busybox   initramfs-framework->eudev   initramfs-framework->systemd   initramfs-module-install-efi->dosfstools   initramfs-module-install-efi->e2fsprogs   initramfs-module-install-efi->parted   initramfs-module-install-efi->util-linux   initramfs-module-install->e2fsprogs   initramfs-module-install->grub   initramfs-module-install->parted   initramfs-module-install->util-linux   grub-efi->grub-bootconf   liberation-fonts->fontconfig   cantarell-fonts->fontconfig   gnome-icon-theme->librsvg   font-alias->font-util   systemd-boot->systemd-bootconf   systemd->systemd-conf   weston->weston-init   weston-init->weston   weston-init->kbd   connman->xl2tpd   lttng-tools->lttng-modules     android-tools->android-tools-conf   usb-modeswitch-data->usb-modeswitch   lmsensors->lmsensors-config   phoronix-test-suite->bash   phoronix-test-suite->python   phoronix-test-suite->php   phoronix-test-suite->lsb-release   phoronix-test-suite->util-linux   phoronix-test-suite->busybox     terminus-font->fontconfig   ttf-abyssinica->fontconfig   ttf-arphic-uming->fontconfig   ttf-dejavu->fontconfig   ttf-droid->fontconfig   ttf-gentium->fontconfig   ttf-hunkyfonts->fontconfig   ttf-inconsolata->fontconfig   ttf-liberation->fontconfig   ttf-liberation-sans-narrow->fontconfig   ttf-lklug->fontconfig   ttf-lohit->fontconfig   ttf-pt-sans->fontconfig   ttf-mplus->fontconfig   ttf-sazanami->fontconfig   ttf-tlwg->fontconfig   ttf-ubuntu-font-family->fontconfig   ttf-vlgothic->fontconfig   ttf-wqy-zenhei->fontconfig   source-han-sans-cn-fonts->fontconfig   source-han-sans-jp-fonts->fontconfig   source-han-sans-kr-fonts->fontconfig   source-han-sans-tw-fonts->fontconfig     wireguard-tools->wireguard-module   wireless-regdb->crda      *->quilt-native   *->subversion-native   *->git-native   *->icecc-create-env-native   gcc-cross-x86_64->linux-libc-headers   ppp-dialin->ppp   resolvconf->bash   docbook-xsl-stylesheets->perl   ca-certificates->openssl   initramfs-framework->busybox   initramfs-framework->eudev   initramfs-framework->systemd   initramfs-module-install-efi->dosfstools   initramfs-module-install-efi->e2fsprogs   initramfs-module-install-efi->parted   initramfs-module-install-efi->util-linux   initramfs-module-install->e2fsprogs   initramfs-module-install->grub   initramfs-module-install->parted   initramfs-module-install->util-linux   grub-efi->grub-bootconf   liberation-fonts->fontconfig   cantarell-fonts->fontconfig   gnome-icon-theme->librsvg   font-alias->font-util   systemd-boot->systemd-bootconf   systemd->systemd-conf   weston->weston-init   weston-init->weston   weston-init->kbd   connman->xl2tpd   lttng-tools->lttng-modules     android-tools->android-tools-conf   usb-modeswitch-data->usb-modeswitch   lmsensors->lmsensors-config   phoronix-test-suite->bash   phoronix-test-suite->python   phoronix-test-suite->php   phoronix-test-suite->lsb-release   phoronix-test-suite->util-linux   phoronix-test-suite->busybox     terminus-font->fontconfig   ttf-abyssinica->fontconfig   ttf-arphic-uming->fontconfig   ttf-dejavu->fontconfig   ttf-droid->fontconfig   ttf-gentium->fontconfig   ttf-hunkyfonts->fontconfig   ttf-inconsolata->fontconfig   ttf-liberation->fontconfig   ttf-liberation-sans-narrow->fontconfig   ttf-lklug->fontconfig   ttf-lohit->fontconfig   ttf-pt-sans->fontconfig   ttf-mplus->fontconfig   ttf-sazanami->fontconfig   ttf-tlwg->fontconfig   ttf-ubuntu-font-family->fontconfig   ttf-vlgothic->fontconfig   ttf-wqy-zenhei->fontconfig   source-han-sans-cn-fonts->fontconfig   source-han-sans-jp-fonts->fontconfig   source-han-sans-kr-fonts->fontconfig   source-han-sans-tw-fonts->fontconfig     wireguard-tools->wireguard-module   wireless-regdb->crda "
#
# $SIGGEN_LOCKEDSIGS_SSTATE_EXISTS_CHECK
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:74
#     "error"
SIGGEN_LOCKEDSIGS_SSTATE_EXISTS_CHECK="error"
#
# $SIGGEN_LOCKEDSIGS_TASKSIG_CHECK
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:78
#     "error"
SIGGEN_LOCKEDSIGS_TASKSIG_CHECK="error"
#
# $SITEINFO_BITS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:377
#     [doc] "Specifies the number of bits for the target system CPU."
#
# $SITEINFO_ENDIANNESS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:378
#     [doc] "Specifies the endian byte order of the target system. The value should be either 'le' for 'little-endian' or 'be' for 'big-endian'."
#
# $SITE_CONF_VERSION
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/sanity.conf:13
#     "1"
SITE_CONF_VERSION="1"
#
# $SOC_FAMILY
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:379
#     [doc] "Groups together machines based upon the same family of SOC (System On Chip). You typically set this variable in a common .inc file that you include in the configuration files of all the machines."
#
# $SOLIBS [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:280
#     ".so.*"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:380
#     [doc] "Defines the suffix for shared libraries used on the target platform."
#   override[darwin]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:281
#     ".dylib"
# pre-expansion value:
#   ".so.*"
SOLIBS=".so.*"
#
# $SOLIBSDEV [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:283
#     ".so"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:381
#     [doc] "Defines the suffix for the development symbolic link (symlink) for shared libraries on the target platform."
#   override[darwin]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:287
#     ".dylibbroken"
# pre-expansion value:
#   ".so"
SOLIBSDEV=".so"
#
# $SOLIBSDEV_darwin
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:287
#     ".dylibbroken"
SOLIBSDEV_darwin=".dylibbroken"
#
# $SOLIBS_darwin
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:281
#     ".dylib"
SOLIBS_darwin=".dylib"
#
# $SOURCEFORGE_MIRROR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:644
#     "https://downloads.sourceforge.net"
SOURCEFORGE_MIRROR="https://downloads.sourceforge.net"
#
# $SOURCE_MIRROR_FETCH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:382
#     [doc] "Switch marking build as source fetcher. Used to skip COMPATIBLE_* checking."
#
# $SOURCE_MIRROR_URL
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:383
#     [doc] "URL to source mirror that will be used before fetching from original SRC_URI."
#
# $SPDXLICENSEMAP [39 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:13
#     [AGPL-3] "AGPL-3.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:14
#     [AGPLv3] "AGPL-3.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:15
#     [AGPLv3.0] "AGPL-3.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:18
#     [GPL-1] "GPL-1.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:19
#     [GPLv1] "GPL-1.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:20
#     [GPLv1.0] "GPL-1.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:21
#     [GPL-2] "GPL-2.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:22
#     [GPLv2] "GPL-2.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:23
#     [GPLv2.0] "GPL-2.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:24
#     [GPL-3] "GPL-3.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:25
#     [GPLv3] "GPL-3.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:26
#     [GPLv3.0] "GPL-3.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:29
#     [LGPLv2] "LGPL-2.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:30
#     [LGPLv2.0] "LGPL-2.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:31
#     [LGPL2.1] "LGPL-2.1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:32
#     [LGPLv2.1] "LGPL-2.1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:33
#     [LGPLv3] "LGPL-3.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:36
#     [MPL-1] "MPL-1.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:37
#     [MPLv1] "MPL-1.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:38
#     [MPLv1.1] "MPL-1.1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:39
#     [MPLv2] "MPL-2.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:42
#     [MIT-X] "MIT"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:43
#     [MIT-style] "MIT"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:46
#     [openssl] "OpenSSL"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:49
#     [PSF] "Python-2.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:50
#     [PSFv2] "Python-2.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:51
#     [Python-2] "Python-2.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:54
#     [Apachev2] "Apache-2.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:55
#     [Apache-2] "Apache-2.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:58
#     [Artisticv1] "Artistic-1.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:59
#     [Artistic-1] "Artistic-1.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:62
#     [AFL-2] "AFL-2.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:63
#     [AFL-1] "AFL-1.2"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:64
#     [AFLv2] "AFL-2.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:65
#     [AFLv1] "AFL-1.2"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:68
#     [CDDLv1] "CDDL-1.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:69
#     [CDDL-1] "CDDL-1.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:72
#     [EPLv1.0] "EPL-1.0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:75
#     [SGIv1] "SGI-1"
# pre-expansion value:
#   "None"
#
# $SPDX_MANIFEST_DIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:89
#     "/home/yocto/fossology_scans"
SPDX_MANIFEST_DIR="/home/yocto/fossology_scans"
#
# $SPDX_TEMP_DIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:88
#     "${WORKDIR}/spdx_temp"
SPDX_TEMP_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/spdx_temp"
#
# $SPDX_VERSION
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/licenses.conf:92
#     "SPDX-1.1"
SPDX_VERSION="SPDX-1.1"
#
# $SPECIAL_PKGSUFFIX [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:223
#     "-native -cross -initial -intermediate -crosssdk -cross-canadian"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:384
#     [doc] "A list of prefixes for PN used by the OpenEmbedded build system to create variants of recipes or packages. The list specifies the prefixes to strip off during certain circumstances such as the generation of the BPN variable."
# pre-expansion value:
#   "-native -cross -initial -intermediate -crosssdk -cross-canadian"
SPECIAL_PKGSUFFIX="-native -cross -initial -intermediate -crosssdk -cross-canadian"
#
# $SRCDATE [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:673
#     "${DATE}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:387
#     [doc] "The date of the source code used to build the package. This variable applies only if the source was fetched from a Source Code Manager (SCM)."
# pre-expansion value:
#   "${DATE}"
SRCDATE="20200408"
#
# $SRCPV [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:679
#     [vardepvalue] "${SRCPV}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:388
#     [doc] "Returns the version string of the current package. This string is used to help define the value of PV."
# pre-expansion value:
#   "None"
#
# $SRCREV [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:674
#     [_defaultval] "INVALID"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:389
#     [doc] "The revision of the source code used to build the package. This variable applies to Subversion, Git, Mercurial and Bazaar only."
# pre-expansion value:
#   "INVALID"
SRCREV="INVALID"
#
# $SRC_URI [3 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:667
#     [vardepsexclude] "    APACHE_MIRROR     CPAN_MIRROR     DEBIAN_MIRROR     GENTOO_MIRROR     GNOME_GIT     GNOME_MIRROR     GNU_MIRROR     GNUPG_MIRROR     GPE_MIRROR     KERNELORG_MIRROR     SAVANNAH_GNU_MIRROR     SAVANNAH_NONGNU_MIRROR     SOURCEFORGE_MIRROR     XLIBS_MIRROR     XORG_MIRROR "
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:681
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:385
#     [doc] "The list of source files - local or remote. This variable tells the OpenEmbedded build system what bits to pull in for the build and how to pull them in."
# pre-expansion value:
#   ""
SRC_URI=""
#
# $SRC_URI_OVERRIDES_PACKAGE_ARCH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:386
#     [doc] "By default, the OpenEmbedded build system automatically detects whether SRC_URI contains files that are machine-specific. If so, the build system automatically changes PACKAGE_ARCH. Setting this variable to '0' disables this behavior."
#
# $SSH_AGENT_PID
#   from env data.py:112 [inheritFromOS]
#     "64923"
SSH_AGENT_PID="64923"
#
# $SSH_AUTH_SOCK
#   from env data.py:112 [inheritFromOS]
#     "/tmp/ssh-fdWA6EzD1NKP/agent.64922"
SSH_AUTH_SOCK="/tmp/ssh-fdWA6EzD1NKP/agent.64922"
#
# $SSTATECREATEFUNCS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:64
#     "sstate_hardcode_path"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:65
#     [vardeps] "SSTATE_SCAN_FILES"
# pre-expansion value:
#   "sstate_hardcode_path"
SSTATECREATEFUNCS="sstate_hardcode_path"
#
# $SSTATEPOSTCREATEFUNCS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:66
#     ""
SSTATEPOSTCREATEFUNCS=""
#
# $SSTATEPOSTINSTFUNCS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:69
#     ""
SSTATEPOSTINSTFUNCS=""
#
# $SSTATEPOSTUNPACKFUNCS [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:68
#     "sstate_hardcode_path_unpack"
#   append uninative.bbclass:131 [enable_uninative]
#     " uninative_changeinterp"
#   append uninative.bbclass:132 [enable_uninative]
#     [vardepvalueexclude] "| uninative_changeinterp"
# pre-expansion value:
#   "sstate_hardcode_path_unpack uninative_changeinterp"
SSTATEPOSTUNPACKFUNCS="sstate_hardcode_path_unpack uninative_changeinterp"
#
# $SSTATEPREINSTFUNCS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:67
#     ""
SSTATEPREINSTFUNCS=""
#
# $SSTATETASKS [7 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/staging.bbclass:120
#     "do_populate_sysroot"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:1025
#     "do_package_qa"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:2248
#     "do_package"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package.bbclass:2268
#     "do_packagedata"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_ipk.bbclass:245
#     "do_package_write_ipk"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/license.bbclass:418
#     "do_populate_lic"
#   set sstate.bbclass:121 [__anon_125__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_sstate_bbclass]
#     "do_package do_package_qa do_package_write_ipk do_packagedata do_populate_lic do_populate_sysroot"
# pre-expansion value:
#   "do_package do_package_qa do_package_write_ipk do_packagedata do_populate_lic do_populate_sysroot"
SSTATETASKS="do_package do_package_qa do_package_write_ipk do_packagedata do_populate_lic do_populate_sysroot"
#
# $SSTATE_ARCHS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:60
#     "     ${BUILD_ARCH}     ${BUILD_ARCH}_${SDK_ARCH}_${SDK_OS}     ${BUILD_ARCH}_${TARGET_ARCH}     ${SDK_ARCH}_${SDK_OS}     ${SDK_ARCH}_${PACKAGE_ARCH}     allarch     ${PACKAGE_ARCH}     ${PACKAGE_EXTRA_ARCHS}     ${MACHINE_ARCH}"
SSTATE_ARCHS="     x86_64     x86_64_x86_64_linux     x86_64_x86_64     x86_64_linux     x86_64_core2-64     allarch     core2-64     x86_64 core2-64     genericx86_64"
#
# $SSTATE_DIR [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:390
#     [doc] "The directory for the shared state cache."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:767
#     "${TOPDIR}/sstate-cache"
# pre-expansion value:
#   "${TOPDIR}/sstate-cache"
SSTATE_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache"
#
# $SSTATE_DUPWHITELIST [10 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:29
#     "${DEPLOY_DIR}/licenses/"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:31
#     "${STAGING_ETCDIR_NATIVE}/sgml ${STAGING_DATADIR_NATIVE}/sgml"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:33
#     "${DEPLOY_DIR_RPM}/sdk_provides_dummy_nativesdk/ ${DEPLOY_DIR_IPK}/sdk-provides-dummy-nativesdk/"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:34
#     "${DEPLOY_DIR_RPM}/buildtools_dummy_nativesdk/ ${DEPLOY_DIR_IPK}/buildtools-dummy-nativesdk/"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:36
#     "${COMPONENTS_DIR}/sdk-provides-dummy-target/ ${DEPLOY_DIR_RPM}/sdk_provides_dummy_target/ ${DEPLOY_DIR_IPK}/sdk-provides-dummy-target/"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:38
#     "${DEPLOY_DIR_SRC}"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:40
#     "${DEPLOY_DIR_IMAGE}/ovmf"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:41
#     "${DEPLOY_DIR_IMAGE}/grub-efi"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:42
#     "${DEPLOY_DIR_IMAGE}/systemd-boot"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:43
#     "${DEPLOY_DIR_IMAGE}/microcode"
# pre-expansion value:
#   "${DEPLOY_DIR}/licenses/ ${STAGING_ETCDIR_NATIVE}/sgml ${STAGING_DATADIR_NATIVE}/sgml ${DEPLOY_DIR_RPM}/sdk_provides_dummy_nativesdk/ ${DEPLOY_DIR_IPK}/sdk-provides-dummy-nativesdk/ ${DEPLOY_DIR_RPM}/buildtools_dummy_nativesdk/ ${DEPLOY_DIR_IPK}/buildtools-dummy-nativesdk/ ${COMPONENTS_DIR}/sdk-provides-dummy-target/ ${DEPLOY_DIR_RPM}/sdk_provides_dummy_target/ ${DEPLOY_DIR_IPK}/sdk-provides-dummy-target/ ${DEPLOY_DIR_SRC} ${DEPLOY_DIR_IMAGE}/ovmf ${DEPLOY_DIR_IMAGE}/grub-efi ${DEPLOY_DIR_IMAGE}/systemd-boot ${DEPLOY_DIR_IMAGE}/microcode"
SSTATE_DUPWHITELIST="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/licenses/ /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/etc/sgml /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/share/sgml /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/rpm/sdk_provides_dummy_nativesdk/ /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/ipk/sdk-provides-dummy-nativesdk/ /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/rpm/buildtools_dummy_nativesdk/ /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/ipk/buildtools-dummy-nativesdk/ /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/sysroots-components/sdk-provides-dummy-target/ /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/rpm/sdk_provides_dummy_target/ /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/ipk/sdk-provides-dummy-target/ \${DEPLOY_DIR_SRC} /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/images/genericx86-64/ovmf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/images/genericx86-64/grub-efi /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/images/genericx86-64/systemd-boot /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/deploy/images/genericx86-64/microcode"
#
# $SSTATE_EXCLUDEDEPS_SYSROOT [4 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:88
#     ".*->bison-native"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:94
#     "    .*->.*-initial.*     .*(base-passwd|shadow-sysroot)->.* "
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/layer.conf:97
#     ".*->autoconf-archive-native"
#   append /home/epple/projects/ramdisk/tme_usb_token/meta-java/conf/layer.conf:21
#     "    openjdk-8-native->(ant-native|attr-native|coreutils-native|icedtea7-native|libxslt-native|make-native|openssl-native|zip-native|unzip-native) "
# pre-expansion value:
#   " .*->bison-native     .*->.*-initial.*     .*(base-passwd|shadow-sysroot)->.*  .*->autoconf-archive-native     openjdk-8-native->(ant-native|attr-native|coreutils-native|icedtea7-native|libxslt-native|make-native|openssl-native|zip-native|unzip-native) "
SSTATE_EXCLUDEDEPS_SYSROOT=" .*->bison-native     .*->.*-initial.*     .*(base-passwd|shadow-sysroot)->.*  .*->autoconf-archive-native     openjdk-8-native->(ant-native|attr-native|coreutils-native|icedtea7-native|libxslt-native|make-native|openssl-native|zip-native|unzip-native) "
#
# $SSTATE_EXTRAPATH [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:16
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:25
#     [vardepvalue] ""
# pre-expansion value:
#   ""
SSTATE_EXTRAPATH=""
#
# $SSTATE_EXTRAPATHWILDCARD [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:17
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:26
#     [vardepvalue] ""
# pre-expansion value:
#   ""
SSTATE_EXTRAPATHWILDCARD=""
#
# $SSTATE_HASHEQUIV_METHOD [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:87
#     "oe.sstatesig.OEOuthashBasic"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:90
#     [doc] "The fully-qualified function used to calculate     the output hash for a task, which in turn is used to determine equivalency.     "
# pre-expansion value:
#   "oe.sstatesig.OEOuthashBasic"
SSTATE_HASHEQUIV_METHOD="oe.sstatesig.OEOuthashBasic"
#
# $SSTATE_HASHEQUIV_REPORT_TASKDATA [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:92
#     "0"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:97
#     [doc] "Report additional useful data to the     hash equivalency server, such as PN, PV, taskname, etc. This information     is very useful for developers looking at task data, but may leak sensitive     data if the equivalence server is public.     "
# pre-expansion value:
#   "0"
SSTATE_HASHEQUIV_REPORT_TASKDATA="0"
#
# $SSTATE_MANFILEPREFIX
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:4
#     "${SSTATE_MANIFESTS}/manifest-${SSTATE_MANMACH}-${PN}"
SSTATE_MANFILEPREFIX="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/sstate-control/manifest-core2-64-defaultpkgname"
#
# $SSTATE_MANIFESTS
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:3
#     "${TMPDIR}/sstate-control"
SSTATE_MANIFESTS="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/sstate-control"
#
# $SSTATE_MANMACH [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:62
#     "${SSTATE_PKGARCH}"
#   set sstate.bbclass:113 [__anon_125__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_sstate_bbclass]
#     "core2-64"
# pre-expansion value:
#   "core2-64"
SSTATE_MANMACH="core2-64"
#
# $SSTATE_MIRRORS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:391
#     [doc] "Configures the OpenEmbedded build system to search other mirror locations for prebuilt cache data objects before building out the data. You can specify a filesystem directory or a remote URL such as HTTP or FTP."
#
# $SSTATE_PATHSPEC
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:18
#     "${SSTATE_DIR}/${SSTATE_EXTRAPATHWILDCARD}*/${SSTATE_PKGSPEC}"
SSTATE_PATHSPEC="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/*/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:"
#
# $SSTATE_PKG
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:15
#     "${SSTATE_DIR}/${SSTATE_PKGNAME}"
SSTATE_PKG="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/\${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:\${BB_TASKHASH}"
#
# $SSTATE_PKGARCH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:11
#     "${PACKAGE_ARCH}"
SSTATE_PKGARCH="core2-64"
#
# $SSTATE_PKGNAME
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:14
#     "${SSTATE_EXTRAPATH}${@generate_sstatefn(d.getVar('SSTATE_PKGSPEC'), d.getVar('BB_UNIHASH'), d)}"
SSTATE_PKGNAME="\${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:\${BB_TASKHASH}"
#
# $SSTATE_PKGSPEC
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:12
#     "sstate:${PN}:${PACKAGE_ARCH}${TARGET_VENDOR}-${TARGET_OS}:${PV}:${PR}:${SSTATE_PKGARCH}:${SSTATE_VERSION}:"
SSTATE_PKGSPEC="sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:"
#
# $SSTATE_PRUNE_OBSOLETEWORKDIR
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:1097
#     "1"
SSTATE_PRUNE_OBSOLETEWORKDIR="1"
#
# $SSTATE_SCAN_CMD
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:46
#     [_defaultval] "find ${SSTATE_BUILDDIR} \( -name "${@"\" -o -name \"".join(d.getVar("SSTATE_SCAN_FILES").split())}" \) -type f"
SSTATE_SCAN_CMD="find \${SSTATE_BUILDDIR} \( -name \"*.la\" -o -name \"*-config\" -o -name \"*_config\" -o -name \"postinst-*\" \) -type f"
#
# $SSTATE_SCAN_CMD_NATIVE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:47
#     [_defaultval] "grep -Irl -e ${RECIPE_SYSROOT} -e ${RECIPE_SYSROOT_NATIVE} -e ${HOSTTOOLS_DIR} ${SSTATE_BUILDDIR}"
SSTATE_SCAN_CMD_NATIVE="grep -Irl -e /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot -e /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native -e /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/hosttools \${SSTATE_BUILDDIR}"
#
# $SSTATE_SCAN_FILES
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:45
#     "*.la *-config *_config postinst-*"
SSTATE_SCAN_FILES="*.la *-config *_config postinst-*"
#
# $SSTATE_SIG_KEY
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:82
#     ""
SSTATE_SIG_KEY=""
#
# $SSTATE_SIG_PASSPHRASE
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:83
#     ""
SSTATE_SIG_PASSPHRASE=""
#
# $SSTATE_SWSPEC
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:13
#     "sstate:${PN}::${PV}:${PR}::${SSTATE_VERSION}:"
SSTATE_SWSPEC="sstate:defaultpkgname::1.0:r0::3:"
#
# $SSTATE_VERIFY_SIG
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:85
#     "0"
SSTATE_VERIFY_SIG="0"
#
# $SSTATE_VERSION
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/sstate.bbclass:1
#     "3"
SSTATE_VERSION="3"
#
# $STAGING_BASELIBDIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:395
#     "${STAGING_DIR_HOST}${base_libdir}"
STAGING_BASELIBDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/lib"
#
# $STAGING_BASE_LIBDIR_NATIVE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:385
#     "${STAGING_DIR_NATIVE}${base_libdir_native}"
STAGING_BASE_LIBDIR_NATIVE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/lib"
#
# $STAGING_BINDIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:392
#     "${STAGING_DIR_HOST}${bindir}"
STAGING_BINDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/usr/bin"
#
# $STAGING_BINDIR_CROSS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:381
#     "${STAGING_BINDIR}/crossscripts"
STAGING_BINDIR_CROSS="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/usr/bin/crossscripts"
#
# $STAGING_BINDIR_NATIVE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:380
#     "${STAGING_DIR_NATIVE}${bindir_native}"
STAGING_BINDIR_NATIVE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/bin"
#
# $STAGING_BINDIR_TOOLCHAIN
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:382
#     "${STAGING_DIR_NATIVE}${bindir_native}/${TARGET_ARCH}${TARGET_VENDOR}-${TARGET_OS}"
STAGING_BINDIR_TOOLCHAIN="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/bin/x86_64-poky-linux-musl"
#
# $STAGING_DATADIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:397
#     "${STAGING_DIR_HOST}${datadir}"
STAGING_DATADIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/usr/share"
#
# $STAGING_DATADIR_NATIVE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:389
#     "${STAGING_DIR_NATIVE}${datadir_native}"
STAGING_DATADIR_NATIVE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/share"
#
# $STAGING_DIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:374
#     "${TMPDIR}/sysroots"
STAGING_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/sysroots"
#
# $STAGING_DIR_HOST
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:391
#     "${RECIPE_SYSROOT}"
STAGING_DIR_HOST="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot"
#
# $STAGING_DIR_NATIVE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:379
#     "${RECIPE_SYSROOT_NATIVE}"
STAGING_DIR_NATIVE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native"
#
# $STAGING_DIR_TARGET
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:402
#     "${RECIPE_SYSROOT}"
STAGING_DIR_TARGET="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot"
#
# $STAGING_ETCDIR_NATIVE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:388
#     "${STAGING_DIR_NATIVE}${sysconfdir_native}"
STAGING_ETCDIR_NATIVE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/etc"
#
# $STAGING_EXECPREFIXDIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:398
#     "${STAGING_DIR_HOST}${exec_prefix}"
STAGING_EXECPREFIXDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/usr"
#
# $STAGING_FIRMWARE_DIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:400
#     "${STAGING_DIR_HOST}/firmware"
STAGING_FIRMWARE_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/firmware"
#
# $STAGING_INCDIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:396
#     "${STAGING_DIR_HOST}${includedir}"
STAGING_INCDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/usr/include"
#
# $STAGING_INCDIR_NATIVE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:387
#     "${STAGING_DIR_NATIVE}${includedir_native}"
STAGING_INCDIR_NATIVE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/include"
#
# $STAGING_KERNEL_BUILDDIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:445
#     "${TMPDIR}/work-shared/${MACHINE}/kernel-build-artifacts"
STAGING_KERNEL_BUILDDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work-shared/genericx86-64/kernel-build-artifacts"
#
# $STAGING_KERNEL_DIR [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:444
#     "${TMPDIR}/work-shared/${MACHINE}/kernel-source"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:392
#     [doc] "The directory with kernel headers that are required to build out-of-tree modules."
# pre-expansion value:
#   "${TMPDIR}/work-shared/${MACHINE}/kernel-source"
STAGING_KERNEL_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work-shared/genericx86-64/kernel-source"
#
# $STAGING_LIBDIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:393
#     "${STAGING_DIR_HOST}${libdir}"
STAGING_LIBDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/usr/lib"
#
# $STAGING_LIBDIR_NATIVE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:383
#     "${STAGING_DIR_NATIVE}${libdir_native}"
STAGING_LIBDIR_NATIVE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/lib"
#
# $STAGING_LIBEXECDIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:394
#     "${STAGING_DIR_HOST}${libexecdir}"
STAGING_LIBEXECDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/usr/libexec"
#
# $STAGING_LIBEXECDIR_NATIVE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:384
#     "${STAGING_DIR_NATIVE}${libexecdir_native}"
STAGING_LIBEXECDIR_NATIVE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/libexec"
#
# $STAGING_LOADER_DIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:399
#     "${STAGING_DIR_HOST}/loader"
STAGING_LOADER_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/loader"
#
# $STAGING_SBINDIR_NATIVE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:386
#     "${STAGING_DIR_NATIVE}${sbindir_native}"
STAGING_SBINDIR_NATIVE="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/sbin"
#
# $STAMP [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:365
#     "${STAMPS_DIR}/${MULTIMACH_TARGET_SYS}/${PN}/${EXTENDPE}${PV}-${PR}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:393
#     [doc] "Specifies the base path used to create recipe stamp files. The path to an actual stamp file is constructed by evaluating this string and then appending additional information."
# pre-expansion value:
#   "${STAMPS_DIR}/${MULTIMACH_TARGET_SYS}/${PN}/${EXTENDPE}${PV}-${PR}"
STAMP="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/stamps/core2-64-poky-linux-musl/defaultpkgname/1.0-r0"
#
# $STAMPCLEAN
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:366
#     "${STAMPS_DIR}/${MULTIMACH_TARGET_SYS}/${PN}/*-*"
STAMPCLEAN="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/stamps/core2-64-poky-linux-musl/defaultpkgname/*-*"
#
# $STAMPS_DIR [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:364
#     "${TMPDIR}/stamps"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:394
#     [doc] "Specifies the base directory in which the OpenEmbedded build system places stamps."
# pre-expansion value:
#   "${TMPDIR}/stamps"
STAMPS_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/stamps"
#
# $STRINGS [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:530
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:530
#     "${HOST_PREFIX}strings"
# pre-expansion value:
#   "${HOST_PREFIX}strings"
export STRINGS="x86_64-poky-linux-musl-strings"
#
# $STRIP [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:527
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:527
#     "${HOST_PREFIX}strip"
# pre-expansion value:
#   "${HOST_PREFIX}strip"
export STRIP="x86_64-poky-linux-musl-strip"
#
# $SUMMARY [12 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:231
#     "${PN} version ${PV}-${PR}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:395
#     [doc] "The short (80 characters or less) summary of the binary package for packaging systems such as opkg, rpm or dpkg. By default, SUMMARY is used to define the DESCRIPTION variable if DESCRIPTION is not set in the recipe."
#   override[defaultpkgname-dbg]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:244
#     "${SUMMARY} - Debugging files"
#   override[defaultpkgname-dbg]:rename from SUMMARY_${PN}-dbg data.py:104 [expandKeys]
#     "${SUMMARY} - Debugging files"
#   override[defaultpkgname-dev]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:248
#     "${SUMMARY} - Development files"
#   override[defaultpkgname-dev]:rename from SUMMARY_${PN}-dev data.py:104 [expandKeys]
#     "${SUMMARY} - Development files"
#   override[defaultpkgname-doc]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:257
#     "${SUMMARY} - Documentation files"
#   override[defaultpkgname-doc]:rename from SUMMARY_${PN}-doc data.py:104 [expandKeys]
#     "${SUMMARY} - Documentation files"
#   override[defaultpkgname-src]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:240
#     "${SUMMARY} - Source files"
#   override[defaultpkgname-src]:rename from SUMMARY_${PN}-src data.py:104 [expandKeys]
#     "${SUMMARY} - Source files"
#   override[defaultpkgname-staticdev]:set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:253
#     "${SUMMARY} - Development files (Static Libraries)"
#   override[defaultpkgname-staticdev]:rename from SUMMARY_${PN}-staticdev data.py:104 [expandKeys]
#     "${SUMMARY} - Development files (Static Libraries)"
# pre-expansion value:
#   "${PN} version ${PV}-${PR}"
SUMMARY="defaultpkgname version 1.0-r0"
#
# $SUMMARY_defaultpkgname-dbg [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:244
#     "${SUMMARY} - Debugging files"
#   rename from SUMMARY_${PN}-dbg data.py:104 [expandKeys]
#     "${SUMMARY} - Debugging files"
# pre-expansion value:
#   "${SUMMARY} - Debugging files"
SUMMARY_defaultpkgname-dbg="defaultpkgname version 1.0-r0 - Debugging files"
#
# $SUMMARY_defaultpkgname-dev [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:248
#     "${SUMMARY} - Development files"
#   rename from SUMMARY_${PN}-dev data.py:104 [expandKeys]
#     "${SUMMARY} - Development files"
# pre-expansion value:
#   "${SUMMARY} - Development files"
SUMMARY_defaultpkgname-dev="defaultpkgname version 1.0-r0 - Development files"
#
# $SUMMARY_defaultpkgname-doc [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:257
#     "${SUMMARY} - Documentation files"
#   rename from SUMMARY_${PN}-doc data.py:104 [expandKeys]
#     "${SUMMARY} - Documentation files"
# pre-expansion value:
#   "${SUMMARY} - Documentation files"
SUMMARY_defaultpkgname-doc="defaultpkgname version 1.0-r0 - Documentation files"
#
# $SUMMARY_defaultpkgname-src [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:240
#     "${SUMMARY} - Source files"
#   rename from SUMMARY_${PN}-src data.py:104 [expandKeys]
#     "${SUMMARY} - Source files"
# pre-expansion value:
#   "${SUMMARY} - Source files"
SUMMARY_defaultpkgname-src="defaultpkgname version 1.0-r0 - Source files"
#
# $SUMMARY_defaultpkgname-staticdev [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:253
#     "${SUMMARY} - Development files (Static Libraries)"
#   rename from SUMMARY_${PN}-staticdev data.py:104 [expandKeys]
#     "${SUMMARY} - Development files (Static Libraries)"
# pre-expansion value:
#   "${SUMMARY} - Development files (Static Libraries)"
SUMMARY_defaultpkgname-staticdev="defaultpkgname version 1.0-r0 - Development files (Static Libraries)"
#
# $SVNDIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:396
#     [doc] "The directory where Subversion checkouts will be stored."
#
# $SYSLINUX_DEFAULT_CONSOLE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:397
#     [doc] "Specifies the kernel boot default console."
#
# $SYSLINUX_OPTS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:398
#     [doc] "Lists additional options to add to the syslinux file."
#
# $SYSLINUX_SERIAL
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:399
#     [doc] "Specifies the alternate serial port or turns it off."
#
# $SYSLINUX_SERIAL_TTY
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:401
#     [doc] "Specifies the alternate console=tty... kernel boot argument."
#
# $SYSLINUX_SPLASH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:400
#     [doc] "An .LSS file used as the background for the VGA boot menu when you are using the boot menu."
#
# $SYSROOT_DESTDIR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/staging.bbclass:93
#     "${WORKDIR}/sysroot-destdir"
SYSROOT_DESTDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/sysroot-destdir"
#
# $SYSROOT_DIRS [4 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/staging.bbclass:8
#     "     ${includedir}     ${libdir}     ${base_libdir}     ${nonarch_base_libdir}     ${datadir} "
#   _append[class-native] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/staging.bbclass:21
#     " ${SYSROOT_DIRS_NATIVE}"
#   _append[class-cross] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/staging.bbclass:22
#     " ${SYSROOT_DIRS_NATIVE}"
#   _append[class-crosssdk] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/staging.bbclass:23
#     " ${SYSROOT_DIRS_NATIVE}"
# pre-expansion value:
#   "     ${includedir}     ${libdir}     ${base_libdir}     ${nonarch_base_libdir}     ${datadir} "
SYSROOT_DIRS="     /usr/include     /usr/lib     /lib     /lib     /usr/share "
#
# $SYSROOT_DIRS_BLACKLIST
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/staging.bbclass:36
#     "     ${mandir}     ${docdir}     ${infodir}     ${datadir}/applications     ${datadir}/fonts     ${datadir}/gtk-doc/html     ${datadir}/locale     ${datadir}/pixmaps     ${libdir}/${PN}/ptest "
SYSROOT_DIRS_BLACKLIST="     /usr/share/man     /usr/share/doc     /usr/share/info     /usr/share/applications     /usr/share/fonts     /usr/share/gtk-doc/html     /usr/share/locale     /usr/share/pixmaps     /usr/lib/defaultpkgname/ptest "
#
# $SYSROOT_DIRS_NATIVE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/staging.bbclass:20
#     "     ${bindir}     ${sbindir}     ${base_bindir}     ${base_sbindir}     ${libexecdir}     ${sysconfdir}     ${localstatedir} "
SYSROOT_DIRS_NATIVE="     /usr/bin     /usr/sbin     /bin     /sbin     /usr/libexec     /etc     /var "
#
# $SYSROOT_PREPROCESS_FUNCS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:402
#     [doc] "A list of functions to execute after files are staged into the sysroot. These functions are usually used to apply additional processing on the staged files, or to stage additional files."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/staging.bbclass:92
#     ""
# pre-expansion value:
#   ""
SYSROOT_PREPROCESS_FUNCS=""
#
# $SYSTEMD_AUTO_ENABLE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:403
#     [doc] "For recipes that inherit the systemd class, this variable specifies whether the service you have specified in SYSTEMD_SERVICE should be started automatically or not."
#
# $SYSTEMD_PACKAGES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:404
#     [doc] "For recipes that inherit the systemd class, this variable locates the systemd unit files when they are not found in the main recipe's package."
#
# $SYSTEMD_SERVICE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:405
#     [doc] "For recipes that inherit the systemd class, this variable specifies the systemd service name for a package."
#
# $SYSVINIT_ENABLED_GETTYS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:406
#     [doc] "Specifies which virtual terminals should be running a getty, the default is '1'."
#
# $T [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:369
#     "${WORKDIR}/temp"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:410
#     [doc] "This variable points to a directory were BitBake places temporary files, which consist mostly of task logs and scripts, when building a particular recipe."
#   override[task-clean]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/utility-tasks.bbclass:22
#     "${LOG_DIR}/cleanlogs/${PN}"
# pre-expansion value:
#   "${WORKDIR}/temp"
T="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/temp"
#
# $TARGET_ARCH [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:129
#     "${TUNE_ARCH}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:411
#     [doc] "The architecture of the device being built. The OpenEmbedded build system supports the following architectures: arm, mips, ppc, x86, x86-64."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:849
#     [unexport] "1"
# pre-expansion value:
#   "${TUNE_ARCH}"
unset TARGET_ARCH
#
# $TARGET_AS_ARCH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:136
#     "${TUNE_ASARGS}"
TARGET_AS_ARCH=" "
#
# $TARGET_CC_ARCH [7 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:134
#     "${TUNE_CCARGS}"
#   _append[class-target] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:58
#     " ${SECURITY_CFLAGS}"
#   _append[class-cross-canadian] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:60
#     " ${SECURITY_CFLAGS}"
#   _append[pn-binutils] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:70
#     " ${SELECTED_OPTIMIZATION}"
#   _append[pn-gcc] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:71
#     " ${SELECTED_OPTIMIZATION}"
#   _append[pn-gdb] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:72
#     " ${SELECTED_OPTIMIZATION}"
#   _append[pn-perf] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:73
#     " ${SELECTED_OPTIMIZATION}"
# pre-expansion value:
#   "${TUNE_CCARGS} ${SECURITY_CFLAGS}"
TARGET_CC_ARCH=" -m64 -march=core2 -mtune=core2 -msse3 -mfpmath=sse -fstack-protector-strong  -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security"
#
# $TARGET_CFLAGS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:571
#     "${TARGET_CPPFLAGS} ${SELECTED_OPTIMIZATION}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:412
#     [doc] "Flags passed to the C compiler for the target system. This variable evaluates to the same as CFLAGS."
# pre-expansion value:
#   "${TARGET_CPPFLAGS} ${SELECTED_OPTIMIZATION}"
TARGET_CFLAGS=" -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot=                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native= "
#
# $TARGET_CPPFLAGS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:566
#     ""
TARGET_CPPFLAGS=""
#
# $TARGET_CXXFLAGS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:576
#     "${TARGET_CFLAGS}"
TARGET_CXXFLAGS=" -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0=/usr/src/debug/defaultpkgname/1.0-r0                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot=                      -fdebug-prefix-map=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native= "
#
# $TARGET_FPU [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:6
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:413
#     [doc] "Specifies the method for handling FPU code. For FPU-less targets, which include most ARM CPUs, the variable must be set to 'soft'. If not, the kernel emulation gets used, which results in a performance penalty."
# pre-expansion value:
#   ""
TARGET_FPU=""
#
# $TARGET_LDFLAGS [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:598
#     "-Wl,-O1 ${TARGET_LINK_HASH_STYLE} ${ASNEEDED}"
#   _append[class-target] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:59
#     " ${SECURITY_LDFLAGS}"
#   _append[class-cross-canadian] /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:61
#     " ${SECURITY_LDFLAGS}"
# pre-expansion value:
#   "-Wl,-O1 ${TARGET_LINK_HASH_STYLE} ${ASNEEDED} ${SECURITY_LDFLAGS}"
TARGET_LDFLAGS="-Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed -fstack-protector-strong -Wl,-z,relro,-z,now"
#
# $TARGET_LD_ARCH
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:135
#     "${TUNE_LDARGS}"
TARGET_LD_ARCH=" "
#
# $TARGET_LINK_HASH_STYLE
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:593
#     "${@['-Wl,--hash-style=gnu',''][d.getVar('LINKER_HASH_STYLE') != 'gnu']}"
TARGET_LINK_HASH_STYLE="-Wl,--hash-style=gnu"
#
# $TARGET_OS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:130
#     "linux${LIBCEXTENSION}${ABIEXTENSION}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:414
#     [doc] "Specifies the target's operating system."
# pre-expansion value:
#   "linux${LIBCEXTENSION}${ABIEXTENSION}"
TARGET_OS="linux-musl"
#
# $TARGET_PREFIX [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:133
#     "${TARGET_SYS}-"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:415
#     [doc] "The prefix for the cross-compile toolchain (e.g. arm-linux-)."
# pre-expansion value:
#   "${TARGET_SYS}-"
TARGET_PREFIX="x86_64-poky-linux-musl-"
#
# $TARGET_SYS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:132
#     "${TARGET_ARCH}${TARGET_VENDOR}${@['-' + d.getVar('TARGET_OS'), ''][d.getVar('TARGET_OS') == ('' or 'custom')]}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:416
#     [doc] "The target system is comprised of TARGET_ARCH,TARGET_VENDOR and TARGET_OS."
# pre-expansion value:
#   "${TARGET_ARCH}${TARGET_VENDOR}${@['-' + d.getVar('TARGET_OS'), ''][d.getVar('TARGET_OS') == ('' or 'custom')]}"
TARGET_SYS="x86_64-poky-linux-musl"
#
# $TARGET_VENDOR [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:131
#     "-oe"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:10
#     "-poky"
# pre-expansion value:
#   "-poky"
TARGET_VENDOR="-poky"
#
# $TCLIBC [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:34
#     "musl"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf:9
#     "glibc"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:417
#     [doc] "Specifies C library (libc) variant to use during the build process. You can select 'baremetal', 'glibc', 'musl' or 'newlib'."
# pre-expansion value:
#   "musl"
TCLIBC="musl"
#
# $TCLIBCAPPEND [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:40
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:49
#     ""
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf:15
#     "-${TCLIBC}"
# pre-expansion value:
#   ""
TCLIBCAPPEND=""
#
# $TCMODE [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf:6
#     "default"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:418
#     [doc] "Enables an external toolchain (where provided by an additional layer) if set to a value other than 'default'."
# pre-expansion value:
#   "default"
TCMODE="default"
#
# $TERM [2 operations]
#   from env data.py:112 [inheritFromOS]
#     "screen"
#   auto env export data.py:114 [inheritFromOS]
#     [export] "True"
# pre-expansion value:
#   "screen"
export TERM="screen"
#
# $TESTIMAGE_AUTO
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:419
#     [doc] "Enables test booting of virtual machine images under the QEMU emulator after any root filesystems are created and runs tests against those images each time an image is built."
#
# $TEST_POWERCONTROL_CMD
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:422
#     [doc] "For automated hardware testing, specifies the command to use to control the power of the target machine under test"
#
# $TEST_POWERCONTROL_EXTRA_ARGS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:423
#     [doc] "For automated hardware testing, specifies additional arguments to pass through to the command specified in TEST_POWERCONTROL_CMD"
#
# $TEST_QEMUBOOT_TIMEOUT
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:420
#     [doc] "The time in seconds allowed for an image to boot before automated runtime tests begin to run against an image."
#
# $TEST_SERIALCONTROL_CMD
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:424
#     [doc] "For automated hardware testing, specifies the command to use to connect to the serial console of the target machine under test"
#
# $TEST_SERIALCONTROL_EXTRA_ARGS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:425
#     [doc] "For automated hardware testing, specifies additional arguments to pass through to the command specified in TEST_SERIALCONTROL_CMD"
#
# $TEST_SUITES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:421
#     [doc] "An ordered list of tests (modules) to run against an image when performing automated runtime testing."
#
# $TEST_TARGET
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:426
#     [doc] "For automated runtime testing, specifies the method of deploying the image and running tests on the target machine"
#
# $THISDIR [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:427
#     [doc] "The directory in which the file BitBake is currently parsing is located."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/base.bbclass:85
#     "${@os.path.dirname(d.getVar('FILE'))}"
# pre-expansion value:
#   "${@os.path.dirname(d.getVar('FILE'))}"
THISDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf"
#
# $TIME [2 operations]
#   immediate /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:165
#     "${@time.strftime('%H%M%S',time.gmtime())}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:428
#     [doc] "The time the build was started using HMS format."
# pre-expansion value:
#   "102023"
TIME="102023"
#
# $TMPDIR [3 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:358
#     "${TOPDIR}/tmp"
#   postdot /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf:16
#     "${TCLIBCAPPEND}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:429
#     [doc] "The temporary directory the OpenEmbedded build system uses when it does its work building images. By default, the TMPDIR variable is named tmp within the Build Directory."
# pre-expansion value:
#   "${TOPDIR}/tmp${TCLIBCAPPEND}"
TMPDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp"
#
# $TOOLCHAIN_HOST_TASK
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:430
#     [doc] "This variable lists packages the OpenEmbedded build system uses when building an SDK, which contains a cross-development environment."
#
# $TOOLCHAIN_OPTIONS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:516
#     " --sysroot=${STAGING_DIR_TARGET}"
TOOLCHAIN_OPTIONS=" --sysroot=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot"
#
# $TOOLCHAIN_TARGET_TASK
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:431
#     [doc] "This variable lists packages the OpenEmbedded build system uses when it creates the target part of an SDK, which includes libraries and headers."
#
# $TOPDIR [2 operations]
#   set cookerdata.py:345 [parseConfigurationFiles]
#     "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:432
#     [doc] "The Build Directory. BitBake automatically sets this variable. The OpenEmbedded build system uses the Build Directory when building images."
# pre-expansion value:
#   "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto"
TOPDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto"
#
# $TRANSLATED_TARGET_ARCH [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:433
#     [doc] "A sanitized version of TARGET_ARCH. This variable is used where the architecture is needed in a value where underscores are not allowed."
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:861
#     [_defaultval] "${@d.getVar('TARGET_ARCH').replace("_", "-")}"
# pre-expansion value:
#   "${@d.getVar('TARGET_ARCH').replace("_", "-")}"
TRANSLATED_TARGET_ARCH="x86-64"
#
# $TRUSTME_CONTAINER_ARCH [2 operations]
#   override[genericx86-64]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:282
#     "qemux86-64"
#   override[genericx86-64]:rename from TRUSTME_CONTAINER_ARCH_${MACHINE} data.py:104 [expandKeys]
#     "qemux86-64"
# pre-expansion value:
#   "qemux86-64"
TRUSTME_CONTAINER_ARCH="qemux86-64"
#
# $TRUSTME_CONTAINER_ARCH_genericx86-64 [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:282
#     "qemux86-64"
#   rename from TRUSTME_CONTAINER_ARCH_${MACHINE} data.py:104 [expandKeys]
#     "qemux86-64"
# pre-expansion value:
#   "qemux86-64"
TRUSTME_CONTAINER_ARCH_genericx86-64="qemux86-64"
#
# $TRUSTME_FSTYPES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:280
#     "trustmex86"
TRUSTME_FSTYPES="trustmex86"
#
# $TRUSTME_HARDWARE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:284
#     "x86"
TRUSTME_HARDWARE="x86"
#
# $TRUSTME_LOGTTY
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:285
#     "tty11"
TRUSTME_LOGTTY="tty11"
#
# $TRUSTME_PARTTABLE_TYPE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:281
#     "gpt"
TRUSTME_PARTTABLE_TYPE="gpt"
#
# $TUNEABI
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:435
#     [doc] "An underlying ABI used by a particular tuning in a given toolchain layer. This feature allows providers using prebuilt libraries to check compatibility of a tuning against their selection of libraries."
#
# $TUNEABI_OVERRIDE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:436
#     [doc] "If set, ignores TUNEABI_WHITELIST."
#
# $TUNEABI_WHITELIST
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:437
#     [doc] "A whitelist of permissible TUNEABI values.  If the variable is not set, all values are allowed."
#
# $TUNECONFLICTS [4 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:14
#     [m32] "m64 mx32"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:21
#     [mx32] "m64 m32"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:33
#     [m64] "m32 mx32"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:438
#     [doc] "List of conflicting features for a given feature."
# pre-expansion value:
#   "None"
#
# $TUNEVALID [7 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:13
#     [m32] "IA32 ELF32 standard ABI"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:20
#     [mx32] "IA32e (x86_64) ELF32 standard ABI"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:32
#     [m64] "IA32e (x86_64) ELF64 standard ABI"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i586.inc:6
#     [i586] "Enable i586 specific processor optimizations"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i686.inc:19
#     [i686] "Enable i686 specific processor optimizations"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:15
#     [core2] "Enable core2 specific processor optimizations"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:439
#     [doc] "Descriptions, stored as flags, of valid tuning features."
# pre-expansion value:
#   "None"
#
# $TUNE_ARCH [4 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:118
#     [_defaultval] "INVALID"
#   postdot /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:15
#     "${@bb.utils.contains('TUNE_FEATURES', 'm32', '${X86ARCH32}', '' ,d)}"
#   postdot /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:22
#     "${@bb.utils.contains('TUNE_FEATURES', 'mx32', '${X86ARCH64}', '' ,d)}"
#   postdot /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:34
#     "${@bb.utils.contains('TUNE_FEATURES', 'm64', '${X86ARCH64}', '' ,d)}"
# pre-expansion value:
#   "${@bb.utils.contains('TUNE_FEATURES', 'm32', '${X86ARCH32}', '' ,d)}${@bb.utils.contains('TUNE_FEATURES', 'mx32', '${X86ARCH64}', '' ,d)}${@bb.utils.contains('TUNE_FEATURES', 'm64', '${X86ARCH64}', '' ,d)}"
TUNE_ARCH="x86_64"
#
# $TUNE_ASARGS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:122
#     [_defaultval] ""
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:26
#     "${@bb.utils.contains('TUNE_FEATURES', 'mx32', '-x32', '', d)}"
# pre-expansion value:
#   " ${@bb.utils.contains('TUNE_FEATURES', 'mx32', '-x32', '', d)}"
TUNE_ASARGS=" "
#
# $TUNE_CCARGS [8 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:119
#     [_defaultval] ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:120
#     [vardepvalue] "${TUNE_CCARGS}"
#   postdot /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:16
#     "${@bb.utils.contains('TUNE_FEATURES', 'm32', ' -m32', '', d)}"
#   postdot /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:24
#     "${@bb.utils.contains('TUNE_FEATURES', 'mx32', ' -mx32', '', d)}"
#   postdot /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:35
#     "${@bb.utils.contains('TUNE_FEATURES', 'm64', ' -m64', '', d)}"
#   postdot /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i586.inc:7
#     "${@bb.utils.contains('TUNE_FEATURES', 'i586', ' -march=i586', '', d)}"
#   postdot /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i686.inc:20
#     "${@bb.utils.contains('TUNE_FEATURES', 'i686', ' -march=i686', '', d)}"
#   postdot /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:16
#     "${@bb.utils.contains('TUNE_FEATURES', 'core2', ' -march=core2 -mtune=core2 -msse3 -mfpmath=sse', '', d)}"
# pre-expansion value:
#   "${@bb.utils.contains('TUNE_FEATURES', 'm32', ' -m32', '', d)}${@bb.utils.contains('TUNE_FEATURES', 'mx32', ' -mx32', '', d)}${@bb.utils.contains('TUNE_FEATURES', 'm64', ' -m64', '', d)}${@bb.utils.contains('TUNE_FEATURES', 'i586', ' -march=i586', '', d)}${@bb.utils.contains('TUNE_FEATURES', 'i686', ' -march=i686', '', d)}${@bb.utils.contains('TUNE_FEATURES', 'core2', ' -march=core2 -mtune=core2 -msse3 -mfpmath=sse', '', d)}"
TUNE_CCARGS=" -m64 -march=core2 -mtune=core2 -msse3 -mfpmath=sse"
#
# $TUNE_FEATURES [9 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:123
#     [_defaultval] "${TUNE_FEATURES_tune-${DEFAULTTUNE}}"
#   override[tune-x86]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:39
#     "m32"
#   override[tune-x86-64]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:45
#     "m64"
#   override[tune-x86-64-x32]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:51
#     "mx32"
#   override[tune-i586]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i586.inc:11
#     "${TUNE_FEATURES_tune-x86} i586"
#   override[tune-i686]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i686.inc:24
#     "${TUNE_FEATURES_tune-x86} i686"
#   override[tune-core2-32]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:20
#     "${TUNE_FEATURES_tune-x86} core2"
#   override[tune-core2-64]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:27
#     "${TUNE_FEATURES_tune-x86-64} core2"
#   override[tune-core2-64-x32]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:34
#     "${TUNE_FEATURES_tune-x86-64-x32} core2"
# pre-expansion value:
#   "${TUNE_FEATURES_tune-${DEFAULTTUNE}}"
TUNE_FEATURES="m64 core2"
#
# $TUNE_FEATURES_tune-core2-32
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:20
#     "${TUNE_FEATURES_tune-x86} core2"
TUNE_FEATURES_tune-core2-32="m32 core2"
#
# $TUNE_FEATURES_tune-core2-64
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:27
#     "${TUNE_FEATURES_tune-x86-64} core2"
TUNE_FEATURES_tune-core2-64="m64 core2"
#
# $TUNE_FEATURES_tune-core2-64-x32
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:34
#     "${TUNE_FEATURES_tune-x86-64-x32} core2"
TUNE_FEATURES_tune-core2-64-x32="mx32 core2"
#
# $TUNE_FEATURES_tune-i586
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i586.inc:11
#     "${TUNE_FEATURES_tune-x86} i586"
TUNE_FEATURES_tune-i586="m32 i586"
#
# $TUNE_FEATURES_tune-i686
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i686.inc:24
#     "${TUNE_FEATURES_tune-x86} i686"
TUNE_FEATURES_tune-i686="m32 i686"
#
# $TUNE_FEATURES_tune-x86
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:39
#     "m32"
TUNE_FEATURES_tune-x86="m32"
#
# $TUNE_FEATURES_tune-x86-64
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:45
#     "m64"
TUNE_FEATURES_tune-x86-64="m64"
#
# $TUNE_FEATURES_tune-x86-64-x32
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:51
#     "mx32"
TUNE_FEATURES_tune-x86-64-x32="mx32"
#
# $TUNE_LDARGS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:121
#     [_defaultval] ""
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:25
#     "${@bb.utils.contains('TUNE_FEATURES', 'mx32', '-m elf32_x86_64', '', d)}"
# pre-expansion value:
#   " ${@bb.utils.contains('TUNE_FEATURES', 'mx32', '-m elf32_x86_64', '', d)}"
TUNE_LDARGS=" "
#
# $TUNE_PKGARCH [11 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:149
#     [_defaultval] ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:10
#     "${TUNE_PKGARCH_tune-${DEFAULTTUNE}}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:434
#     [doc] "The package architecture understood by the packaging system to define the architecture, ABI, and tuning of output packages."
#   override[tune-x86]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:41
#     "x86"
#   override[tune-x86-64]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:47
#     "x86_64"
#   override[tune-x86-64-x32]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:53
#     "x86_64_x32"
#   override[tune-i586]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i586.inc:13
#     "i586"
#   override[tune-i686]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i686.inc:26
#     "i686"
#   override[tune-core2-32]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:22
#     "core2-32"
#   override[tune-core2-64]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:29
#     "core2-64"
#   override[tune-core2-64-x32]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:36
#     "core2-64-x32"
# pre-expansion value:
#   "${TUNE_PKGARCH_tune-${DEFAULTTUNE}}"
TUNE_PKGARCH="core2-64"
#
# $TUNE_PKGARCH_tune-core2-32
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:22
#     "core2-32"
TUNE_PKGARCH_tune-core2-32="core2-32"
#
# $TUNE_PKGARCH_tune-core2-64
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:29
#     "core2-64"
TUNE_PKGARCH_tune-core2-64="core2-64"
#
# $TUNE_PKGARCH_tune-core2-64-x32
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-core2.inc:36
#     "core2-64-x32"
TUNE_PKGARCH_tune-core2-64-x32="core2-64-x32"
#
# $TUNE_PKGARCH_tune-i586
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i586.inc:13
#     "i586"
TUNE_PKGARCH_tune-i586="i586"
#
# $TUNE_PKGARCH_tune-i686
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i686.inc:26
#     "i686"
TUNE_PKGARCH_tune-i686="i686"
#
# $TUNE_PKGARCH_tune-x86
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:41
#     "x86"
TUNE_PKGARCH_tune-x86="x86"
#
# $TUNE_PKGARCH_tune-x86-64
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:47
#     "x86_64"
TUNE_PKGARCH_tune-x86-64="x86_64"
#
# $TUNE_PKGARCH_tune-x86-64-x32
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:53
#     "x86_64_x32"
TUNE_PKGARCH_tune-x86-64-x32="x86_64_x32"
#
# $TZ [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:551
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:551
#     "UTC"
# pre-expansion value:
#   "UTC"
export TZ="UTC"
#
# $T_task-clean
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/utility-tasks.bbclass:22
#     "${LOG_DIR}/cleanlogs/${PN}"
T_task-clean="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/log/cleanlogs/defaultpkgname"
#
# $UBOOT_CONFIG
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:443
#     [doc] "Configures the UBOOT_MACHINE and can also define IMAGE_FSTYPES for individual cases."
#
# $UBOOT_ENTRYPOINT
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:444
#     [doc] "Specifies the entry point for the U-Boot image."
#
# $UBOOT_LOADADDRESS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:445
#     [doc] "Specifies the load address for the U-Boot image."
#
# $UBOOT_LOCALVERSION
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:446
#     [doc] "Appends a string to the name of the local version of the U-Boot image."
#
# $UBOOT_MACHINE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:447
#     [doc] "Specifies the value passed on the make command line when building a U-Boot image."
#
# $UBOOT_MAKE_TARGET
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:448
#     [doc] "Specifies the target called in the Makefile."
#
# $UBOOT_SUFFIX
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:449
#     [doc] "Points to the generated U-Boot extension."
#
# $UBOOT_TARGET
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:450
#     [doc] "Specifies the target used for building U-Boot."
#
# $UNINATIVE_CHECKSUM [3 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/yocto-uninative.inc:12
#     [aarch64] "989187344bf9539b464fb7ed9c223e51f4bdb4c7a677d2c314e6fed393176efe"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/yocto-uninative.inc:13
#     [i686] "cc3e45bc8594488b407363e3fa9af5a099279dab2703c64342098719bd674990"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/yocto-uninative.inc:14
#     [x86_64] "a09922172c3a439105e0ae6b943daad2d83505b17da0aba97961ff433b8c21ab"
# pre-expansion value:
#   "None"
#
# $UNINATIVE_DLDIR
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/uninative.bbclass:10
#     "${DL_DIR}/uninative/"
UNINATIVE_DLDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/downloads/uninative/"
#
# $UNINATIVE_LOADER
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/uninative.bbclass:1
#     "${UNINATIVE_STAGING_DIR}-uninative/${BUILD_ARCH}-linux/lib/${@bb.utils.contains('BUILD_ARCH', 'x86_64', 'ld-linux-x86-64.so.2', '', d)}${@bb.utils.contains('BUILD_ARCH', 'i686', 'ld-linux.so.2', '', d)}${@bb.utils.contains('BUILD_ARCH', 'aarch64', 'ld-linux-aarch64.so.1', '', d)}"
UNINATIVE_LOADER="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/sysroots-uninative/x86_64-linux/lib/ld-linux-x86-64.so.2"
#
# $UNINATIVE_MAXGLIBCVERSION
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/yocto-uninative.inc:9
#     "2.31"
UNINATIVE_MAXGLIBCVERSION="2.31"
#
# $UNINATIVE_STAGING_DIR
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/uninative.bbclass:2
#     "${STAGING_DIR}"
UNINATIVE_STAGING_DIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/sysroots"
#
# $UNINATIVE_TARBALL
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/uninative.bbclass:5
#     "${BUILD_ARCH}-nativesdk-libc.tar.xz"
UNINATIVE_TARBALL="x86_64-nativesdk-libc.tar.xz"
#
# $UNINATIVE_URL [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/yocto-uninative.inc:11
#     "http://downloads.yoctoproject.org/releases/uninative/2.8/"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/uninative.bbclass:4
#     "unset"
# pre-expansion value:
#   "http://downloads.yoctoproject.org/releases/uninative/2.8/"
UNINATIVE_URL="http://downloads.yoctoproject.org/releases/uninative/2.8/"
#
# $UNKNOWN_CONFIGURE_WHITELIST
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:48
#     "--enable-nls --disable-nls --disable-silent-rules --disable-dependency-tracking --with-libtool-sysroot --disable-static"
UNKNOWN_CONFIGURE_WHITELIST="--enable-nls --disable-nls --disable-silent-rules --disable-dependency-tracking --with-libtool-sysroot --disable-static"
#
# $USER [2 operations]
#   from env data.py:112 [inheritFromOS]
#     "epple"
#   auto env export data.py:114 [inheritFromOS]
#     [export] "True"
# pre-expansion value:
#   "epple"
export USER="epple"
#
# $USERADDEXTENSION
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:458
#     [doc] "When set to 'useradd-staticids', causes the OpenEmbedded build system to base all user and group additions on files listed in USERADD_UID_TABLES and USERADD_GID_TABLES."
#
# $USERADD_ERROR_DYNAMIC
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:453
#     [doc] "If set to 'error', forces the OpenEmbedded build system to produce an error if the user identification (uid) and group identification (gid) values are not defined in any of the files listed in USERADD_UID_TABLES and USERADD_GID_TABLES. If set to 'warn', a warning will be issued instead."
#
# $USERADD_GID_TABLES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:454
#     [doc] "Specifies a password file to use for obtaining static group identification (gid) values when the OpenEmbedded build system adds a group to the system during package installation."
#
# $USERADD_PACKAGES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:455
#     [doc] "When a recipe inherits the useradd class, this variable specifies the individual packages within the recipe that require users and/or groups to be added."
#
# $USERADD_PARAM
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:456
#     [doc] "When a recipe inherits the useradd class, this variable specifies for a package what parameters should be passed to the useradd command if you wish to add a user to the system when the package is installed."
#
# $USERADD_UID_TABLES
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:457
#     [doc] "Specifies a password file to use for obtaining static user identification (uid) values when the OpenEmbedded build system adds a user to the system during package installation."
#
# $USER_CLASSES [3 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/conf/local.conf:156
#     "buildstats image-mklibs image-prelink"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/defaultsetup.conf:20
#     ""
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:452
#     [doc] "List of additional classes to use when building images that enable extra features."
# pre-expansion value:
#   "buildstats image-mklibs image-prelink"
USER_CLASSES="buildstats image-mklibs image-prelink"
#
# $USE_DEVFS
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:451
#     [doc] "When building images, specifies to populate or not /dev. This variable defaults to '1' (leave directory empty, surely because devtmpfs do the job). Set it to '0' to use makedevs (or consider using a custom file with IMAGE_DEVICE_TABLES)."
#
# $USE_NLS [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:126
#     [_defaultval] "yes"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky-tiny.conf:59
#     "no"
# pre-expansion value:
#   "no"
USE_NLS="no"
#
# $USRBINPATH [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:81
#     "${bindir}"
#   override[class-native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:82
#     "/usr/bin"
#   override[class-nativesdk]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:83
#     "/usr/bin"
# pre-expansion value:
#   "${bindir}"
USRBINPATH="/usr/bin"
#
# $USRBINPATH_class-native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:82
#     "/usr/bin"
USRBINPATH_class-native="/usr/bin"
#
# $USRBINPATH_class-nativesdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:83
#     "/usr/bin"
USRBINPATH_class-nativesdk="/usr/bin"
#
# $UVESA_MODE
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/qemuboot-x86.inc:16
#     "640x480-32"
UVESA_MODE="640x480-32"
#
# $VIRTUAL-RUNTIME_alsa-state
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:26
#     "alsa-state"
VIRTUAL-RUNTIME_alsa-state="alsa-state"
#
# $VIRTUAL-RUNTIME_apm
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:25
#     "apm"
VIRTUAL-RUNTIME_apm="apm"
#
# $VIRTUAL-RUNTIME_base-utils
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:28
#     "busybox"
VIRTUAL-RUNTIME_base-utils="busybox"
#
# $VIRTUAL-RUNTIME_base-utils-hwclock
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:29
#     "busybox-hwclock"
VIRTUAL-RUNTIME_base-utils-hwclock="busybox-hwclock"
#
# $VIRTUAL-RUNTIME_base-utils-syslog
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:30
#     "busybox-syslog"
VIRTUAL-RUNTIME_base-utils-syslog="busybox-syslog"
#
# $VIRTUAL-RUNTIME_dev_manager
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/init-manager-mdev-busybox.inc:3
#     [_defaultval] "busybox-mdev"
VIRTUAL-RUNTIME_dev_manager="busybox-mdev"
#
# $VIRTUAL-RUNTIME_getopt
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:27
#     "util-linux-getopt"
VIRTUAL-RUNTIME_getopt="util-linux-getopt"
#
# $VIRTUAL-RUNTIME_init_manager
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/init-manager-mdev-busybox.inc:4
#     [_defaultval] "busybox"
VIRTUAL-RUNTIME_init_manager="busybox"
#
# $VIRTUAL-RUNTIME_initscripts
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/init-manager-mdev-busybox.inc:5
#     [_defaultval] "initscripts"
VIRTUAL-RUNTIME_initscripts="initscripts"
#
# $VIRTUAL-RUNTIME_keymaps
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/init-manager-mdev-busybox.inc:6
#     [_defaultval] "keymaps"
VIRTUAL-RUNTIME_keymaps="keymaps"
#
# $VIRTUAL-RUNTIME_login_manager
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/init-manager-mdev-busybox.inc:7
#     [_defaultval] "busybox"
VIRTUAL-RUNTIME_login_manager="busybox"
#
# $VIRTUAL-RUNTIME_update-alternatives
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-providers.inc:24
#     "update-alternatives-opkg"
VIRTUAL-RUNTIME_update-alternatives="update-alternatives-opkg"
#
# $VOLATILE_LOG_DIR
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:90
#     "yes"
VOLATILE_LOG_DIR="yes"
#
# $WARN_QA [3 operations]
#   _remove /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:82
#     "${WARN_TO_ERROR_QA}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:462
#     [doc] "Specifies the quality assurance checks whose failures are reported as warnings by the OpenEmbedded build system."
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/insane.bbclass:31
#     "ldflags useless-rpaths rpaths staticdev libdir xorg-driver-abi             textrel already-stripped incompatible-license files-invalid             installed-vs-shipped compile-host-path install-host-path             pn-overrides infodir build-deps src-uri-bad             unknown-configure-option symlink-to-sysroot multilib             invalid-packageconfig host-user-contaminated uppercase-pn patch-fuzz             "
# pre-expansion value:
#   "ldflags useless-rpaths rpaths staticdev libdir xorg-driver-abi             textrel already-stripped incompatible-license files-invalid             installed-vs-shipped compile-host-path install-host-path             pn-overrides infodir build-deps src-uri-bad             unknown-configure-option symlink-to-sysroot multilib             invalid-packageconfig host-user-contaminated uppercase-pn patch-fuzz             "
WARN_QA="    libdir xorg-driver-abi             textrel  incompatible-license files-invalid                             infodir build-deps src-uri-bad              symlink-to-sysroot multilib             invalid-packageconfig host-user-contaminated uppercase-pn patch-fuzz             "
#
# $WARN_TO_ERROR_QA
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-poky/conf/distro/poky.conf:81
#     "already-stripped compile-host-path install-host-path                     installed-vs-shipped ldflags pn-overrides rpaths staticdev                     unknown-configure-option useless-rpaths"
WARN_TO_ERROR_QA="already-stripped compile-host-path install-host-path                     installed-vs-shipped ldflags pn-overrides rpaths staticdev                     unknown-configure-option useless-rpaths"
#
# $WHITELIST_GPL-3.0
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/default-distrovars.inc:17
#     ""
WHITELIST_GPL-3.0=""
#
# $WKS_FILE
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc:23
#     "genericx86.wks"
WKS_FILE="genericx86.wks"
#
# $WORKDIR [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:368
#     "${BASE_WORKDIR}/${MULTIMACH_TARGET_SYS}/${PN}/${EXTENDPE}${PV}-${PR}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:463
#     [doc] "The pathname of the working directory in which the OpenEmbedded build system builds a recipe. This directory is located within the TMPDIR directory structure and changes as different packages are built."
# pre-expansion value:
#   "${BASE_WORKDIR}/${MULTIMACH_TARGET_SYS}/${PN}/${EXTENDPE}${PV}-${PR}"
WORKDIR="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0"
#
# $WORKDIR_PKGDATA
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/package_pkgdata.bbclass:1
#     "${WORKDIR}/pkgdata-sysroot"
WORKDIR_PKGDATA="/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/pkgdata-sysroot"
#
# $X86ARCH32 [2 operations]
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/tune-i686.inc:13
#     "i686"
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:7
#     "i586"
# pre-expansion value:
#   "i686"
X86ARCH32="i686"
#
# $X86ARCH64
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86/arch-x86.inc:8
#     "x86_64"
X86ARCH64="x86_64"
#
# $XAUTHORITY
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/terminal.bbclass:9
#     "${HOME}/.Xauthority"
XAUTHORITY="/home/epple/.Xauthority"
#
# $XLIBS_MIRROR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:645
#     "https://xlibs.freedesktop.org/release"
XLIBS_MIRROR="https://xlibs.freedesktop.org/release"
#
# $XORG_MIRROR
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:646
#     "https://www.x.org/releases/"
XORG_MIRROR="https://www.x.org/releases/"
#
# $XSERVER
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc:14
#     "${XSERVER_X86_BASE}             ${XSERVER_X86_EXT}             ${XSERVER_X86_I915}             ${XSERVER_X86_I965}             ${XSERVER_X86_FBDEV}             ${XSERVER_X86_VESA}             ${XSERVER_X86_MODESETTING}            "
XSERVER="xserver-xorg                                                 xserver-xorg-module-libint10                         xf86-video-intel                                     xf86-video-intel                                     xf86-video-fbdev             xf86-video-vesa             xf86-video-modesetting            "
#
# $XSERVER_X86_BASE
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc:27
#     "xserver-xorg            "
XSERVER_X86_BASE="xserver-xorg            "
#
# $XSERVER_X86_EXT
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc:32
#     "            ${@bb.utils.contains('DISTRO_FEATURES', 'opengl', 'xserver-xorg-extension-glx', '', d)}            xserver-xorg-module-libint10            "
XSERVER_X86_EXT="                        xserver-xorg-module-libint10            "
#
# $XSERVER_X86_FBDEV
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc:44
#     "xf86-video-fbdev"
XSERVER_X86_FBDEV="xf86-video-fbdev"
#
# $XSERVER_X86_I915
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc:36
#     "xf86-video-intel            ${@bb.utils.contains('DISTRO_FEATURES', 'opengl', 'mesa-driver-i915', '', d)}            "
XSERVER_X86_I915="xf86-video-intel                        "
#
# $XSERVER_X86_I965
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc:40
#     "xf86-video-intel            ${@bb.utils.contains('DISTRO_FEATURES', 'opengl', 'mesa-driver-i965', '', d)}            "
XSERVER_X86_I965="xf86-video-intel                        "
#
# $XSERVER_X86_MODESETTING
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc:46
#     "xf86-video-modesetting"
XSERVER_X86_MODESETTING="xf86-video-modesetting"
#
# $XSERVER_X86_VESA
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/machine/include/x86-base.inc:42
#     "xf86-video-vesa"
XSERVER_X86_VESA="xf86-video-vesa"
#
# $XZ_DEFAULTS
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:796
#     "--memlimit=50% --threads=${@oe.utils.cpu_count()}"
XZ_DEFAULTS="--memlimit=50% --threads=256"
#
# $base_bindir [4 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:23
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:23
#     "${root_prefix}/bin"
#   override[native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:52
#     "/bin"
#   override[nativesdk]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:68
#     "/bin"
# pre-expansion value:
#   "${root_prefix}/bin"
export base_bindir="/bin"
#
# $base_bindir_native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:52
#     "/bin"
base_bindir_native="/bin"
#
# $base_bindir_nativesdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:68
#     "/bin"
base_bindir_nativesdk="/bin"
#
# $base_dep
#   _prepend ast.py:201 [eval]
#     "def base_dep_prepend(d):
#         if d.getVar('INHIBIT_DEFAULT_DEPS', False):
#             return ""
#         return "${BASE_DEFAULT_DEPS}"
#     "
base_dep="def base_dep_prepend(d): \
    if d.getVar('INHIBIT_DEFAULT_DEPS', False): \
        return \"\" \
    return \"virtual/x86_64-poky-linux-musl-gcc virtual/x86_64-poky-linux-musl-compilerlibs virtual/libc\" \
"
#
# $base_libdir [4 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:25
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:25
#     "${root_prefix}/${baselib}"
#   override[native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:61
#     "/lib"
#   override[nativesdk]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:72
#     "/lib"
# pre-expansion value:
#   "${root_prefix}/${baselib}"
export base_libdir="/lib"
#
# $base_libdir_native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:61
#     "/lib"
base_libdir_native="/lib"
#
# $base_libdir_nativesdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:72
#     "/lib"
base_libdir_nativesdk="/lib"
#
# $base_prefix [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:16
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:16
#     ""
# pre-expansion value:
#   ""
export base_prefix=""
#
# $base_sbindir [4 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:24
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:24
#     "${root_prefix}/sbin"
#   override[native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:53
#     "/sbin"
#   override[nativesdk]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:69
#     "/sbin"
# pre-expansion value:
#   "${root_prefix}/sbin"
export base_sbindir="/sbin"
#
# $base_sbindir_native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:53
#     "/sbin"
base_sbindir_native="/sbin"
#
# $base_sbindir_nativesdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:69
#     "/sbin"
base_sbindir_nativesdk="/sbin"
#
# $baselib [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:10
#     "${BASELIB}"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:11
#     [vardepvalue] "${baselib}"
# pre-expansion value:
#   "${BASELIB}"
baselib="lib"
#
# $bindir [6 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:43
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:43
#     "${exec_prefix}/bin"
#   override[native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:56
#     "${prefix_native}/bin"
#   override[cross]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:63
#     "/bin"
#   override[crossscripts]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:64
#     "${bindir}/crossscripts"
#   override[nativesdk]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:66
#     "${prefix_nativesdk}/bin"
# pre-expansion value:
#   "${exec_prefix}/bin"
export bindir="/usr/bin"
#
# $bindir_cross
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:63
#     "/bin"
bindir_cross="/bin"
#
# $bindir_crossscripts
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:64
#     "${bindir}/crossscripts"
bindir_crossscripts="/usr/bin/crossscripts"
#
# $bindir_native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:56
#     "${prefix_native}/bin"
bindir_native="/usr/bin"
#
# $bindir_nativesdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:66
#     "${prefix_nativesdk}/bin"
bindir_nativesdk="/usr/bin"
#
# $datadir [3 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:33
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:33
#     "${prefix}/share"
#   override[native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:62
#     "${prefix_native}/share"
# pre-expansion value:
#   "${prefix}/share"
export datadir="/usr/share"
#
# $datadir_native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:62
#     "${prefix_native}/share"
datadir_native="/usr/share"
#
# $do_bootimg
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:7
#     [doc] "Creates a bootable live image"
#
# $do_bundle_initramfs
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:9
#     [doc] "Combines an initial ramdisk image and kernel together to form a single image"
#
# $do_compile_kernelmodules
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:15
#     [doc] "Compiles loadable modules for the Linux kernel"
#
# $do_compile_ptest_base
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:16
#     [doc] "Compiles the runtime test suite included in the software being built"
#
# $do_configure_ptest_base
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:18
#     [doc] "Configures the runtime test suite included in the software being built"
#
# $do_deploy
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:19
#     [doc] "Writes deployable output files to the deploy directory"
#
# $do_diffconfig
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:22
#     [doc] "Compares the old and new config files after running do_menuconfig for the kernel"
#
# $do_image_wic [2 operations]
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc:24
#     [depends] "gptfdisk-native:do_populate_sysroot"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta-yocto-bsp/conf/machine/include/genericx86-common.inc:25
#     [recrdeptask] "do_bootimg"
# pre-expansion value:
#   "None"
#
# $do_install_ptest_base
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:25
#     [doc] "Copies the runtime test suite files from the compilation directory to a holding area"
#
# $do_kernel_checkout
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:26
#     [doc] "Checks out source/meta branches for a linux-yocto style kernel"
#
# $do_kernel_configcheck
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:27
#     [doc] "Validates the kernel configuration for a linux-yocto style kernel"
#
# $do_kernel_configme
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:28
#     [doc] "Assembles the kernel configuration for a linux-yocto style kernel"
#
# $do_kernel_link_images
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:29
#     [doc] "Creates a symbolic link in arch/$arch/boot for vmlinux and vmlinuz kernel images"
#
# $do_menuconfig
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:31
#     [doc] "Runs 'make menuconfig' for the kernel"
#
# $do_package_index
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:33
#     [doc] "Creates or updates the index in the Package Feed area"
#
# $do_package_write_deb [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:35
#     [doc] "Creates the actual DEB packages and places them in the Package Feed area"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/debian.bbclass:18
#     [rdeptask] "${DEBIANRDEP}"
# pre-expansion value:
#   "None"
#
# $do_package_write_rpm [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:37
#     [doc] "Creates the actual RPM packages and places them in the Package Feed area"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/debian.bbclass:20
#     [rdeptask] "${DEBIANRDEP}"
# pre-expansion value:
#   "None"
#
# $do_package_write_tar [2 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:38
#     [doc] "Creates tar archives for packages and places them in the Package Feed area"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/debian.bbclass:19
#     [rdeptask] "${DEBIANRDEP}"
# pre-expansion value:
#   "None"
#
# $do_populate_sdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:42
#     [doc] "Creates the file and directory structure for an installable SDK"
#
# $do_rm_work
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:44
#     [doc] "Removes work files after the build system has finished with them"
#
# $do_rm_work_all
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:45
#     [doc] "Top-level task for removing work files after the build system has finished with them"
#
# $do_rootfs [3 operations]
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:46
#     [doc] "Creates the root filesystem (file and directory structure) for an image"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/image-mklibs.bbclass:1
#     [depends] "mklibs-native:do_populate_sysroot"
#   append /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/classes/image-prelink.bbclass:1
#     [depends] "prelink-native:do_populate_sysroot"
# pre-expansion value:
#   "None"
#
# $do_savedefconfig
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:47
#     [doc] "Creates a minimal Linux kernel configuration file"
#
# $do_sizecheck
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:48
#     [doc] "Checks the size of the kernel image against KERNEL_IMAGE_MAXSIZE (if set)"
#
# $do_spdx
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:49
#     [doc] "A build stage that takes the source code and scans it on a remote FOSSOLOGY server in order to produce an SPDX document"
#
# $do_strip
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:50
#     [doc] "Strips unneeded sections out of the Linux kernel image"
#
# $do_testimage
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:51
#     [doc] "Boots an image and performs runtime tests within the image"
#
# $do_testimage_auto
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:52
#     [doc] "Boots an image and performs runtime tests within the image immediately after it has been built"
#
# $do_testsdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:53
#     [doc] "Installs an SDK and performs runtime tests on the tools installed by it"
#
# $do_uboot_mkimage
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:54
#     [doc] "Creates a uImage file from the kernel for the U-Boot bootloader"
#
# $do_validate_branches
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/documentation.conf:56
#     [doc] "Ensures that the source/meta branches are on the locations specified by their SRCREV values for a linux-yocto style kernel"
#
# $docdir [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:36
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:36
#     "${datadir}/doc"
# pre-expansion value:
#   "${datadir}/doc"
export docdir="/usr/share/doc"
#
# $exec_prefix [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:18
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:18
#     "${prefix}"
# pre-expansion value:
#   "${prefix}"
export exec_prefix="/usr"
#
# $includedir [4 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:47
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:47
#     "${exec_prefix}/include"
#   override[native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:58
#     "${prefix_native}/include"
#   override[nativesdk]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:70
#     "${prefix_nativesdk}/include"
# pre-expansion value:
#   "${exec_prefix}/include"
export includedir="/usr/include"
#
# $includedir_native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:58
#     "${prefix_native}/include"
includedir_native="/usr/include"
#
# $includedir_nativesdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:70
#     "${prefix_nativesdk}/include"
includedir_nativesdk="/usr/include"
#
# $infodir [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:34
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:34
#     "${datadir}/info"
# pre-expansion value:
#   "${datadir}/info"
export infodir="/usr/share/info"
#
# $lcl_maybe_fortify
#   set? /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/distro/include/security_flags.inc:13
#     "${@oe.utils.conditional('DEBUG_BUILD','1','','-D_FORTIFY_SOURCE=2',d)}"
lcl_maybe_fortify="-D_FORTIFY_SOURCE=2"
#
# $libdir [4 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:45
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:45
#     "${exec_prefix}/${baselib}"
#   override[native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:59
#     "${prefix_native}/lib"
#   override[nativesdk]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:71
#     "${prefix_nativesdk}/lib"
# pre-expansion value:
#   "${exec_prefix}/${baselib}"
export libdir="/usr/lib"
#
# $libdir_native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:59
#     "${prefix_native}/lib"
libdir_native="/usr/lib"
#
# $libdir_nativesdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:71
#     "${prefix_nativesdk}/lib"
libdir_nativesdk="/usr/lib"
#
# $libexecdir [3 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:46
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:46
#     "${exec_prefix}/libexec"
#   override[native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:60
#     "${prefix_native}/libexec"
# pre-expansion value:
#   "${exec_prefix}/libexec"
export libexecdir="/usr/libexec"
#
# $libexecdir_native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:60
#     "${prefix_native}/libexec"
libexecdir_native="/usr/libexec"
#
# $localedir
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:49
#     "${libdir}/locale"
localedir="/usr/lib/locale"
#
# $localstatedir [3 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:32
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:32
#     "${base_prefix}/var"
#   override[nativesdk]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:73
#     "/var"
# pre-expansion value:
#   "${base_prefix}/var"
export localstatedir="/var"
#
# $localstatedir_nativesdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:73
#     "/var"
localstatedir_nativesdk="/var"
#
# $mandir [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:35
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:35
#     "${datadir}/man"
# pre-expansion value:
#   "${datadir}/man"
export mandir="/usr/share/man"
#
# $nonarch_base_libdir [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:26
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:26
#     "${root_prefix}/lib"
# pre-expansion value:
#   "${root_prefix}/lib"
export nonarch_base_libdir="/lib"
#
# $nonarch_libdir [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:39
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:39
#     "${exec_prefix}/lib"
# pre-expansion value:
#   "${exec_prefix}/lib"
export nonarch_libdir="/usr/lib"
#
# $oldincludedir [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:48
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:48
#     "${exec_prefix}/include"
# pre-expansion value:
#   "${exec_prefix}/include"
export oldincludedir="/usr/include"
#
# $prefix [4 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:17
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:17
#     "/usr"
#   override[native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:55
#     "/usr"
#   override[nativesdk]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:65
#     "/usr"
# pre-expansion value:
#   "/usr"
export prefix="/usr"
#
# $prefix_native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:55
#     "/usr"
prefix_native="/usr"
#
# $prefix_nativesdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:65
#     "/usr"
prefix_nativesdk="/usr"
#
# $root_prefix
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:20
#     "${@bb.utils.contains('DISTRO_FEATURES', 'usrmerge', '${exec_prefix}', '${base_prefix}', d)}"
root_prefix=""
#
# $sbindir [4 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:44
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:44
#     "${exec_prefix}/sbin"
#   override[native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:57
#     "${prefix_native}/sbin"
#   override[nativesdk]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:67
#     "${prefix_nativesdk}/sbin"
# pre-expansion value:
#   "${exec_prefix}/sbin"
export sbindir="/usr/sbin"
#
# $sbindir_native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:57
#     "${prefix_native}/sbin"
sbindir_native="/usr/sbin"
#
# $sbindir_nativesdk
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:67
#     "${prefix_nativesdk}/sbin"
sbindir_nativesdk="/usr/sbin"
#
# $servicedir [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:30
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:30
#     "${base_prefix}/srv"
# pre-expansion value:
#   "${base_prefix}/srv"
export servicedir="/srv"
#
# $sharedstatedir [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:31
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:31
#     "${base_prefix}/com"
# pre-expansion value:
#   "${base_prefix}/com"
export sharedstatedir="/com"
#
# $sysconfdir [3 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:29
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:29
#     "${base_prefix}/etc"
#   override[native]:set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:54
#     "/etc"
# pre-expansion value:
#   "${base_prefix}/etc"
export sysconfdir="/etc"
#
# $sysconfdir_native
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:54
#     "/etc"
sysconfdir_native="/etc"
#
# $systemd_system_unitdir [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:38
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:38
#     "${nonarch_base_libdir}/systemd/system"
# pre-expansion value:
#   "${nonarch_base_libdir}/systemd/system"
export systemd_system_unitdir="/lib/systemd/system"
#
# $systemd_unitdir [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:37
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:37
#     "${nonarch_base_libdir}/systemd"
# pre-expansion value:
#   "${nonarch_base_libdir}/systemd"
export systemd_unitdir="/lib/systemd"
#
# $systemd_user_unitdir [2 operations]
#   exported /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:40
#     [export] "1"
#   set /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:40
#     "${nonarch_libdir}/systemd/user"
# pre-expansion value:
#   "${nonarch_libdir}/systemd/user"
export systemd_user_unitdir="/usr/lib/systemd/user"
#
# $target_datadir
#   immediate /mnt/ramdisk/epple/ramdisk/tme_usb_token/poky/meta/conf/bitbake.conf:79
#     "${datadir}"
target_datadir="/usr/share"
base_do_compile() {
	if [ -e Makefile -o -e makefile -o -e GNUmakefile ]; then
		oe_runmake || die "make failed"
	else
		bbnote "nothing to compile"
	fi
}

base_do_configure() {
	if [ -n "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/configure.sstate" -a -e "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/configure.sstate" ]; then
		if [ "`cat /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/configure.sstate`" != "${BB_TASKHASH}" ]; then
			cd /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/defaultpkgname-1.0
			if [ "0" != "1" -a \( -e Makefile -o -e makefile -o -e GNUmakefile \) ]; then
				oe_runmake clean
			fi
			# -ignore_readdir_race does not work correctly with -delete;
			# use xargs to avoid spurious build failures
			find /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/defaultpkgname-1.0 -ignore_readdir_race -name \*.la -type f -print0 | xargs -0 rm -f
		fi
	fi
	if [ -n "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/configure.sstate" ]; then
		mkdir -p `dirname /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/configure.sstate`
		echo ${BB_TASKHASH} > /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/configure.sstate
	fi
}

base_do_install() {
	:
}

base_do_package() {
	:
}

bbdebug() {
	USAGE='Usage: bbdebug [123] "message"'
	if [ $# -lt 2 ]; then
		bbfatal "$USAGE"
	fi

	# Strip off the debug level and ensure it is an integer
	DBGLVL=$1; shift
	NONDIGITS=$(echo "$DBGLVL" | tr -d "[:digit:]")
	if [ "$NONDIGITS" ]; then
		bbfatal "$USAGE"
	fi

	# All debug output is printed to the logs
	if [ -p /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/temp/fifo.16342 ] ; then
		printf "%b\0" "bbdebug $DBGLVL $*" > /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/temp/fifo.16342
	else
		echo "DEBUG: $*"
	fi
}

bberror() {
	if [ -p /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/temp/fifo.16342 ] ; then
		printf "%b\0" "bberror $*" > /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/temp/fifo.16342
	else
		echo "ERROR: $*"
	fi
}

bbfatal() {
	if [ -p /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/temp/fifo.16342 ] ; then
		printf "%b\0" "bbfatal $*" > /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/temp/fifo.16342
	else
		echo "ERROR: $*"
	fi
	exit 1
}

bbfatal_log() {
	if [ -p /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/temp/fifo.16342 ] ; then
		printf "%b\0" "bbfatal_log $*" > /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/temp/fifo.16342
	else
		echo "ERROR: $*"
	fi
	exit 1
}

bbnote() {
	if [ -p /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/temp/fifo.16342 ] ; then
		printf "%b\0" "bbnote $*" > /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/temp/fifo.16342
	else
		echo "NOTE: $*"
	fi
}

bbplain() {
	if [ -p /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/temp/fifo.16342 ] ; then
		printf "%b\0" "bbplain $*" > /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/temp/fifo.16342
	else
		echo "$*"
	fi
}

bbwarn() {
	if [ -p /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/temp/fifo.16342 ] ; then
		printf "%b\0" "bbwarn $*" > /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/temp/fifo.16342
	else
		echo "WARNING: $*"
	fi
}

check_git_config() {
	if ! git config user.email > /dev/null ; then
		git config --local user.email "oe.patch@oe"
	fi
	if ! git config user.name > /dev/null ; then
		git config --local user.name "OpenEmbedded"
	fi
}

create_cmdline_wrapper() {
	# Create a wrapper script where commandline options are needed
	#
	# These are useful to work around relocation issues, by passing extra options
	# to a program
	#
	# Usage: create_cmdline_wrapper FILENAME <extra-options>

	cmd=$1
	shift

	echo "Generating wrapper script for $cmd"

	mv $cmd $cmd.real
	cmdname=`basename $cmd`
	dirname=`dirname $cmd`
	cmdoptions=$@
	if [ "" != "" ]; then
		relpath=`python3 -c "import os; print(os.path.relpath('/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/image', '$dirname'))"`
		cmdoptions=`echo $@ | sed -e "s::\\$realdir/$relpath:g"`
	fi
	cat <<END >$cmd
#!/bin/bash
realpath=\`readlink -fn \$0\`
realdir=\`dirname \$realpath\`
exec -a \`dirname \$realpath\`/$cmdname \`dirname \$realpath\`/$cmdname.real $cmdoptions "\$@"
END
	chmod +x $cmd
}

create_wrapper() {
	# Create a wrapper script where extra environment variables are needed
	#
	# These are useful to work around relocation issues, by setting environment
	# variables which point to paths in the filesystem.
	#
	# Usage: create_wrapper FILENAME [[VAR=VALUE]..]

	cmd=$1
	shift

	echo "Generating wrapper script for $cmd"

	mv $cmd $cmd.real
	cmdname=`basename $cmd`
	dirname=`dirname $cmd`
	exportstring=$@
	if [ "" != "" ]; then
		relpath=`python3 -c "import os; print(os.path.relpath('/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/image', '$dirname'))"`
		exportstring=`echo $@ | sed -e "s::\\$realdir/$relpath:g"`
	fi
	cat <<END >$cmd
#!/bin/bash
realpath=\`readlink -fn \$0\`
realdir=\`dirname \$realpath\`
export $exportstring
exec -a "\$0" \$realdir/$cmdname.real "\$@"
END
	chmod +x $cmd
}

die() {
	bbfatal_log "$*"
}

do_build() {
	:
}

do_compile() {
    base_do_compile
}

do_configure() {
    base_do_configure
}

do_install() {
    base_do_install
}

hardlinkdir() {
	from=$1
	to=$2
	(cd $from; find . -print0 | cpio --null -pdlu $to)
}

ldconfig_postinst_fragment() {
if [ x"$D" = "x" ]; then
	if [ -x /sbin/ldconfig ]; then /sbin/ldconfig ; fi
fi
}

mklibs_optimize_image() {
	for img in ${MKLIBS_OPTIMIZED_IMAGES}
	do
		if [ "${img}" = "defaultpkgname" ] || [ "${img}" = "all" ]
		then
			mklibs_optimize_image_doit
			break
		fi
	done
}

mklibs_optimize_image_doit() {
	rm -rf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/mklibs
	mkdir -p /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/mklibs/dest
	cd /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/rootfs
	du -bs > /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/mklibs/du.before.mklibs.txt

	# Build a list of dynamically linked executable ELF files.
	# Omit libc/libpthread as a special case because it has an interpreter
	# but is primarily what we intend to strip down.
	for i in `find . -type f -executable ! -name 'libc-*' ! -name 'libpthread-*'`; do
		file $i | grep -q ELF || continue
		x86_64-poky-linux-musl-readelf -l $i | grep -q INTERP || continue
		echo $i
	done > /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/mklibs/executables.list

	dynamic_loader=/lib/ld-musl-x86_64.so.1

	mklibs -v \
		--ldlib ${dynamic_loader} \
		--libdir lib \
		--sysroot /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot \
		--gcc-options "--sysroot=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot" \
		--root /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/rootfs \
		--target `echo x86_64-poky-linux-musl- | sed 's/-$//' ` \
		-d /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/mklibs/dest \
		`cat /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/mklibs/executables.list`

	cd /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/mklibs/dest
	for i in *
	do
		cp $i `find /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/rootfs -name $i`
	done

	cd /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/rootfs
	du -bs > /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/mklibs/du.after.mklibs.txt

	echo rootfs size before mklibs optimization: `cat /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/mklibs/du.before.mklibs.txt`
	echo rootfs size after mklibs optimization: `cat /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/mklibs/du.after.mklibs.txt`
}

oe_libinstall() {
	# Purpose: Install a library, in all its forms
	# Example
	#
	# oe_libinstall libltdl /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/usr/lib/
	# oe_libinstall -C src/libblah libblah /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/image//usr/lib/
	dir=""
	libtool=""
	silent=""
	require_static=""
	require_shared=""
	staging_install=""
	while [ "$#" -gt 0 ]; do
		case "$1" in
		-C)
			shift
			dir="$1"
			;;
		-s)
			silent=1
			;;
		-a)
			require_static=1
			;;
		-so)
			require_shared=1
			;;
		-*)
			bbfatal "oe_libinstall: unknown option: $1"
			;;
		*)
			break;
			;;
		esac
		shift
	done

	libname="$1"
	shift
	destpath="$1"
	if [ -z "$destpath" ]; then
		bbfatal "oe_libinstall: no destination path specified"
	fi
	if echo "$destpath/" | egrep '^/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/usr/lib/' >/dev/null
	then
		staging_install=1
	fi

	__runcmd () {
		if [ -z "$silent" ]; then
			echo >&2 "oe_libinstall: $*"
		fi
		$*
	}

	if [ -z "$dir" ]; then
		dir=`pwd`
	fi

	dotlai=$libname.lai

	# Sanity check that the libname.lai is unique
	number_of_files=`(cd $dir; find . -name "$dotlai") | wc -l`
	if [ $number_of_files -gt 1 ]; then
		bbfatal "oe_libinstall: $dotlai is not unique in $dir"
	fi


	dir=$dir`(cd $dir;find . -name "$dotlai") | sed "s/^\.//;s/\/$dotlai\$//;q"`
	olddir=`pwd`
	__runcmd cd $dir

	lafile=$libname.la

	# If such file doesn't exist, try to cut version suffix
	if [ ! -f "$lafile" ]; then
		libname1=`echo "$libname" | sed 's/-[0-9.]*$//'`
		lafile1=$libname.la
		if [ -f "$lafile1" ]; then
			libname=$libname1
			lafile=$lafile1
		fi
	fi

	if [ -f "$lafile" ]; then
		# libtool archive
		eval `cat $lafile|grep "^library_names="`
		libtool=1
	else
		library_names="$libname.so* $libname.dll.a $libname.*.dylib"
	fi

	__runcmd install -d $destpath/
	dota=$libname.a
	if [ -f "$dota" -o -n "$require_static" ]; then
		rm -f $destpath/$dota
		__runcmd install -m 0644 $dota $destpath/
	fi
	if [ -f "$dotlai" -a -n "$libtool" ]; then
		rm -f $destpath/$libname.la
		__runcmd install -m 0644 $dotlai $destpath/$libname.la
	fi

	for name in $library_names; do
		files=`eval echo $name`
		for f in $files; do
			if [ ! -e "$f" ]; then
				if [ -n "$libtool" ]; then
					bbfatal "oe_libinstall: $dir/$f not found."
				fi
			elif [ -L "$f" ]; then
				__runcmd cp -P "$f" $destpath/
			elif [ ! -L "$f" ]; then
				libfile="$f"
				rm -f $destpath/$libfile
				__runcmd install -m 0755 $libfile $destpath/
			fi
		done
	done

	if [ -z "$libfile" ]; then
		if  [ -n "$require_shared" ]; then
			bbfatal "oe_libinstall: unable to locate shared library"
		fi
	elif [ -z "$libtool" ]; then
		# special case hack for non-libtool .so.#.#.# links
		baselibfile=`basename "$libfile"`
		if (echo $baselibfile | grep -qE '^lib.*\.so\.[0-9.]*$'); then
			sonamelink=`x86_64-poky-linux-musl-readelf -d $libfile |grep 'Library soname:' |sed -e 's/.*\[\(.*\)\].*/\1/'`
			solink=`echo $baselibfile | sed -e 's/\.so\..*/.so/'`
			if [ -n "$sonamelink" -a x"$baselibfile" != x"$sonamelink" ]; then
				__runcmd ln -sf $baselibfile $destpath/$sonamelink
			fi
			__runcmd ln -sf $baselibfile $destpath/$solink
		fi
	fi

	__runcmd cd "$olddir"
}

oe_machinstall() {
	# Purpose: Install machine dependent files, if available
	#          If not available, check if there is a default
	#          If no default, just touch the destination
	# Example:
	#                $1  $2   $3         $4
	# oe_machinstall -m 0644 fstab /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/image/etc/fstab
	#
	# TODO: Check argument number?
	#
	filename=`basename $3`
	dirname=`dirname $3`

	for o in `echo linux-musl:x86-64:pn-defaultpkgname:genericx86-64:poky:poky-tiny:class-target:libc-musl:forcevariable | tr ':' ' '`; do
		if [ -e $dirname/$o/$filename ]; then
			bbnote $dirname/$o/$filename present, installing to $4
			install $1 $2 $dirname/$o/$filename $4
			return
		fi
	done
#	bbnote overrides specific file NOT present, trying default=$3...
	if [ -e $3 ]; then
		bbnote $3 present, installing to $4
		install $1 $2 $3 $4
	else
		bbnote $3 NOT present, touching empty $4
		touch $4
	fi
}

oe_runmake() {
	oe_runmake_call "$@" || die "oe_runmake failed"
}

oe_runmake_call() {
	bbnote make  "$@"
	make  "$@"
}

oe_soinstall() {
	# Purpose: Install shared library file and
	#          create the necessary links
	# Example: oe_soinstall libfoo.so.1.2.3 /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/image/usr/lib
	libname=`basename $1`
	case "$libname" in
	    *.so)
	        bbfatal "oe_soinstall: Shared library must haved versioned filename (e.g. libfoo.so.1.2.3)"
	        ;;
	esac
	install -m 755 $1 $2/$libname
	sonamelink=`x86_64-poky-linux-musl-readelf -d $1 |grep 'Library soname:' |sed -e 's/.*\[\(.*\)\].*/\1/'`
	if [ -z $sonamelink ]; then
		bbfatal "oe_soinstall: $libname is missing ELF tag 'SONAME'."
	fi
	solink=`echo $libname | sed -e 's/\.so\..*/.so/'`
	ln -sf $libname $2/$sonamelink
	ln -sf $libname $2/$solink
}

prelink_image() {
#	export PSEUDO_DEBUG=4
#	/bin/env | /bin/grep PSEUDO
#	echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH"
#	echo "LD_PRELOAD=$LD_PRELOAD"

	pre_prelink_size=`du -ks /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/rootfs | awk '{size = $1 ; print size }'`
	echo "Size before prelinking $pre_prelink_size."

	# We need a prelink conf on the filesystem, add one if it's missing
	if [ ! -e /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/rootfs/etc/prelink.conf ]; then
		cp /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/etc/prelink.conf \
			/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/rootfs/etc/prelink.conf
		dummy_prelink_conf=true;
	else
		dummy_prelink_conf=false;
	fi

	# We need a ld.so.conf with pathnames in,prelink conf on the filesystem, add one if it's missing
	ldsoconf=/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/rootfs/etc/ld.so.conf
	if [ -e $ldsoconf ]; then
		cp $ldsoconf $ldsoconf.prelink
	fi
	cat /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot/etc/ld.so.conf >> $ldsoconf

	dynamic_loader=/lib/ld-musl-x86_64.so.1

	# prelink!
	if [ "${BUILD_REPRODUCIBLE_BINARIES}" = "1" ]; then
		bbnote " prelink: BUILD_REPRODUCIBLE_BINARIES..."
		if [ "$REPRODUCIBLE_TIMESTAMP_ROOTFS" = "" ]; then
			export PRELINK_TIMESTAMP=`git log -1 --pretty=%ct `
		else
			export PRELINK_TIMESTAMP=$REPRODUCIBLE_TIMESTAMP_ROOTFS
		fi
		/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/sbin/prelink --root /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/rootfs -am -N -c /etc/prelink.conf --dynamic-linker $dynamic_loader
	else
		/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/recipe-sysroot-native/usr/sbin/prelink --root /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/rootfs -amR -N -c /etc/prelink.conf --dynamic-linker $dynamic_loader
	fi

	# Remove the prelink.conf if we had to add it.
	if [ "$dummy_prelink_conf" = "true" ]; then
		rm -f /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/rootfs/etc/prelink.conf
	fi

	if [ -e $ldsoconf.prelink ]; then
		mv $ldsoconf.prelink $ldsoconf
	else
		rm $ldsoconf
	fi

	pre_prelink_size=`du -ks /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/rootfs | awk '{size = $1 ; print size }'`
	echo "Size after prelinking $pre_prelink_size."
}

remove_libtool_la() {
	if [ "1" != "0" ]; then
		find "/mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/image" -ignore_readdir_race -name "*.la" -delete
	fi
}

sstate_create_package() {
	# Exit early if it already exists
	if [ -e /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:${BB_TASKHASH} ]; then
		return
	fi

	mkdir -p `dirname /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:${BB_TASKHASH}`
	TFILE=`mktemp /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:${BB_TASKHASH}.XXXXXXXX`

	# Use pigz if available
	OPT="-czS"
	if [ -x "$(command -v pigz)" ]; then
		OPT="-I pigz -cS"
	fi

	# Need to handle empty directories
	if [ "$(ls -A)" ]; then
		set +e
		tar $OPT -f $TFILE *
		ret=$?
		if [ $ret -ne 0 ] && [ $ret -ne 1 ]; then
			exit 1
		fi
		set -e
	else
		tar $OPT --file=$TFILE --files-from=/dev/null
	fi
	chmod 0664 $TFILE
	# Skip if it was already created by some other process
	if [ ! -e /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:${BB_TASKHASH} ]; then
		mv -f $TFILE /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:${BB_TASKHASH}
	else
		rm $TFILE
	fi
}

sstate_unpack_package() {
	tar -xvzf /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:${BB_TASKHASH}
	# update .siginfo atime on local/NFS mirror
	[ -w /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:${BB_TASKHASH}.siginfo ] && [ -h /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:${BB_TASKHASH}.siginfo ] && touch -a /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:${BB_TASKHASH}.siginfo
	# Use "! -w ||" to return true for read only files
	[ ! -w /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:${BB_TASKHASH} ] || touch --no-dereference /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:${BB_TASKHASH}
	[ ! -w /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:${BB_TASKHASH}.sig ] || [ ! -e /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:${BB_TASKHASH}.sig ] || touch --no-dereference /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:${BB_TASKHASH}.sig
	[ ! -w /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:${BB_TASKHASH}.siginfo ] || [ ! -e /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:${BB_TASKHASH}.siginfo ] || touch --no-dereference /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/sstate-cache/${/sstate:defaultpkgname:core2-64-poky-linux-musl:1.0:r0:core2-64:3:${BB_TASKHASH}.siginfo
}

sysroot_stage_all() {
	sysroot_stage_dirs /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/image /mnt/ramdisk/epple/ramdisk/tme_usb_token/out-yocto/tmp/work/core2-64-poky-linux-musl/defaultpkgname/1.0-r0/sysroot-destdir
}

sysroot_stage_dir() {
	src="$1"
	dest="$2"
	# if the src doesn't exist don't do anything
	if [ ! -d "$src" ]; then
		 return
	fi

	mkdir -p "$dest"
	(
		cd $src
		find . -print0 | cpio --null -pdlu $dest
	)
}

sysroot_stage_dirs() {
	from="$1"
	to="$2"

	for dir in      /usr/include     /usr/lib     /lib     /lib     /usr/share ; do
		sysroot_stage_dir "$from$dir" "$to$dir"
	done

	# Remove directories we do not care about
	for dir in      /usr/share/man     /usr/share/doc     /usr/share/info     /usr/share/applications     /usr/share/fonts     /usr/share/gtk-doc/html     /usr/share/locale     /usr/share/pixmaps     /usr/lib/defaultpkgname/ptest ; do
		rm -rf "$to$dir"
	done
}



python __anon_1023__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_insane_bbclass () {
def __anon_1023__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_insane_bbclass(d):
    pkgs = (d.getVar('PACKAGES') or '').split()
    for pkg in pkgs:
        d.appendVarFlag("do_package_qa", "vardeps", " INSANE_SKIP_{}".format(pkg))
}


python __anon_125__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_sstate_bbclass () {
def __anon_125__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_sstate_bbclass(d):
    if bb.data.inherits_class('native', d):
        d.setVar('SSTATE_PKGARCH', d.getVar('BUILD_ARCH', False))
    elif bb.data.inherits_class('crosssdk', d):
        d.setVar('SSTATE_PKGARCH', d.expand("${BUILD_ARCH}_${SDK_ARCH}_${SDK_OS}"))
    elif bb.data.inherits_class('cross', d):
        d.setVar('SSTATE_PKGARCH', d.expand("${BUILD_ARCH}_${TARGET_ARCH}"))
    elif bb.data.inherits_class('nativesdk', d):
        d.setVar('SSTATE_PKGARCH', d.expand("${SDK_ARCH}_${SDK_OS}"))
    elif bb.data.inherits_class('cross-canadian', d):
        d.setVar('SSTATE_PKGARCH', d.expand("${SDK_ARCH}_${PACKAGE_ARCH}"))
    elif bb.data.inherits_class('allarch', d) and d.getVar("PACKAGE_ARCH") == "all":
        d.setVar('SSTATE_PKGARCH', "allarch")
    else:
        d.setVar('SSTATE_MANMACH', d.expand("${PACKAGE_ARCH}"))

    if bb.data.inherits_class('native', d) or bb.data.inherits_class('crosssdk', d) or bb.data.inherits_class('cross', d):
        d.setVar('SSTATE_EXTRAPATH', "${NATIVELSBSTRING}/")
        d.setVar('BB_HASHFILENAME', "True ${SSTATE_PKGSPEC} ${SSTATE_SWSPEC}")
        d.setVar('SSTATE_EXTRAPATHWILDCARD', "${NATIVELSBSTRING}/")

    unique_tasks = sorted(set((d.getVar('SSTATETASKS') or "").split()))
    d.setVar('SSTATETASKS', " ".join(unique_tasks))
    for task in unique_tasks:
        d.prependVarFlag(task, 'prefuncs', "sstate_task_prefunc ")
        d.appendVarFlag(task, 'postfuncs', " sstate_task_postfunc")
}


python __anon_1263__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_insane_bbclass () {
def __anon_1263__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_insane_bbclass(d):
    import re

    tests = d.getVar('ALL_QA').split()
    if "desktop" in tests:
        d.appendVar("PACKAGE_DEPENDS", " desktop-file-utils-native")

    ###########################################################################
    # Check various variables
    ###########################################################################

    # Checking ${FILESEXTRAPATHS}
    extrapaths = (d.getVar("FILESEXTRAPATHS") or "")
    if '__default' not in extrapaths.split(":"):
        msg = "FILESEXTRAPATHS-variable, must always use _prepend (or _append)\n"
        msg += "type of assignment, and don't forget the colon.\n"
        msg += "Please assign it with the format of:\n"
        msg += "  FILESEXTRAPATHS_append := \":${THISDIR}/Your_Files_Path\" or\n"
        msg += "  FILESEXTRAPATHS_prepend := \"${THISDIR}/Your_Files_Path:\"\n"
        msg += "in your bbappend file\n\n"
        msg += "Your incorrect assignment is:\n"
        msg += "%s\n" % extrapaths
        bb.warn(msg)

    overrides = d.getVar('OVERRIDES').split(':')
    pn = d.getVar('PN')
    if pn in overrides:
        msg = 'Recipe %s has PN of "%s" which is in OVERRIDES, this can result in unexpected behaviour.' % (d.getVar("FILE"), pn)
        package_qa_handle_error("pn-overrides", msg, d)
    prog = re.compile(r'[A-Z]')
    if prog.search(pn):
        package_qa_handle_error("uppercase-pn", 'PN: %s is upper case, this can result in unexpected behavior.' % pn, d)

    # Some people mistakenly use DEPENDS_${PN} instead of DEPENDS and wonder
    # why it doesn't work.
    if (d.getVar(d.expand('DEPENDS_${PN}'))):
        package_qa_handle_error("pkgvarcheck", "recipe uses DEPENDS_${PN}, should use DEPENDS", d)

    issues = []
    if (d.getVar('PACKAGES') or "").split():
        for dep in (d.getVar('QADEPENDS') or "").split():
            d.appendVarFlag('do_package_qa', 'depends', " %s:do_populate_sysroot" % dep)
        for var in 'RDEPENDS', 'RRECOMMENDS', 'RSUGGESTS', 'RCONFLICTS', 'RPROVIDES', 'RREPLACES', 'FILES', 'pkg_preinst', 'pkg_postinst', 'pkg_prerm', 'pkg_postrm', 'ALLOW_EMPTY':
            if d.getVar(var, False):
                issues.append(var)

        fakeroot_tests = d.getVar('FAKEROOT_QA').split()
        if set(tests) & set(fakeroot_tests):
            d.setVarFlag('do_package_qa', 'fakeroot', '1')
            d.appendVarFlag('do_package_qa', 'depends', ' virtual/fakeroot-native:do_populate_sysroot')
    else:
        d.setVarFlag('do_package_qa', 'rdeptask', '')
    for i in issues:
        package_qa_handle_error("pkgvarcheck", "%s: Variable %s is set as not being package specific, please fix this." % (d.getVar("FILE"), i), d)
    qa_sane = d.getVar("QA_SANE")
    if not qa_sane:
        bb.fatal("Fatal QA errors found, failing task.")
}


python __anon_20__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_blacklist_bbclass () {
def __anon_20__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_blacklist_bbclass(d):
    blacklist = d.getVarFlag('PNBLACKLIST', d.getVar('PN'))

    if blacklist:
        raise bb.parse.SkipRecipe("Recipe is blacklisted: %s" % (blacklist))
}


python __anon_252__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_package_bbclass () {
def __anon_252__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_package_bbclass(d):
    if d.getVar('PACKAGES') != '':
        deps = ""
        for dep in (d.getVar('PACKAGE_DEPENDS') or "").split():
            deps += " %s:do_populate_sysroot" % dep
        d.appendVarFlag('do_package', 'depends', deps)

        # shlibs requires any DEPENDS to have already packaged for the *.list files
        d.appendVarFlag('do_package', 'deptask', " do_packagedata")
}


python __anon_25__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_debian_bbclass () {
def __anon_25__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_debian_bbclass(d):
    if not d.getVar("PACKAGES"):
        d.setVar("DEBIANRDEP", "")
}


python __anon_264__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_package_ipk_bbclass () {
def __anon_264__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_package_ipk_bbclass(d):
    if d.getVar('PACKAGES') != '':
        deps = ' opkg-utils-native:do_populate_sysroot virtual/fakeroot-native:do_populate_sysroot xz-native:do_populate_sysroot'
        d.appendVarFlag('do_package_write_ipk', 'depends', deps)
        d.setVarFlag('do_package_write_ipk', 'fakeroot', "1")
}


python __anon_32__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_patch_bbclass () {
def __anon_32__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_patch_bbclass(d):
    if d.getVar('PATCHTOOL') == 'git' and d.getVar('PATCH_COMMIT_FUNCTIONS') == '1':
        extratasks = bb.build.tasksbetween('do_unpack', 'do_patch', d)
        try:
            extratasks.remove('do_unpack')
        except ValueError:
            # For some recipes do_unpack doesn't exist, ignore it
            pass

        d.appendVarFlag('do_patch', 'prefuncs', ' patch_task_patch_prefunc')
        for task in extratasks:
            d.appendVarFlag(task, 'postfuncs', ' patch_task_postfunc')
}


python __anon_35__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_devshell_bbclass () {
def __anon_35__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_devshell_bbclass(d):
    if d.getVarFlag("do_devshell", "fakeroot"):
       # We need to signal our code that we want fakeroot however we
       # can't manipulate the environment and variables here yet (see YOCTO #4795)
       d.setVarFlag("do_devshell", "manualfakeroot", "1")
       d.delVarFlag("do_devshell", "fakeroot")
}


python __anon_706__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_base_bbclass () {
def __anon_706__mnt_ramdisk_epple_ramdisk_tme_usb_token_poky_meta_classes_base_bbclass(d):
    import string, re

    # Handle backfilling
    oe.utils.features_backfill("DISTRO_FEATURES", d)
    oe.utils.features_backfill("MACHINE_FEATURES", d)

    # Handle PACKAGECONFIG
    #
    # These take the form:
    #
    # PACKAGECONFIG ??= "<default options>"
    # PACKAGECONFIG[foo] = "--enable-foo,--disable-foo,foo_depends,foo_runtime_depends,foo_runtime_recommends"
    pkgconfigflags = d.getVarFlags("PACKAGECONFIG") or {}
    if pkgconfigflags:
        pkgconfig = (d.getVar('PACKAGECONFIG') or "").split()
        pn = d.getVar("PN")

        mlprefix = d.getVar("MLPREFIX")

        def expandFilter(appends, extension, prefix):
            appends = bb.utils.explode_deps(d.expand(" ".join(appends)))
            newappends = []
            for a in appends:
                if a.endswith("-native") or ("-cross-" in a):
                    newappends.append(a)
                elif a.startswith("virtual/"):
                    subs = a.split("/", 1)[1]
                    if subs.startswith(prefix):
                        newappends.append(a + extension)
                    else:
                        newappends.append("virtual/" + prefix + subs + extension)
                else:
                    if a.startswith(prefix):
                        newappends.append(a + extension)
                    else:
                        newappends.append(prefix + a + extension)
            return newappends

        def appendVar(varname, appends):
            if not appends:
                return
            if varname.find("DEPENDS") != -1:
                if bb.data.inherits_class('nativesdk', d) or bb.data.inherits_class('cross-canadian', d) :
                    appends = expandFilter(appends, "", "nativesdk-")
                elif bb.data.inherits_class('native', d):
                    appends = expandFilter(appends, "-native", "")
                elif mlprefix:
                    appends = expandFilter(appends, "", mlprefix)
            varname = d.expand(varname)
            d.appendVar(varname, " " + " ".join(appends))

        extradeps = []
        extrardeps = []
        extrarrecs = []
        extraconf = []
        for flag, flagval in sorted(pkgconfigflags.items()):
            items = flagval.split(",")
            num = len(items)
            if num > 5:
                bb.error("%s: PACKAGECONFIG[%s] Only enable,disable,depend,rdepend,rrecommend can be specified!"
                    % (d.getVar('PN'), flag))

            if flag in pkgconfig:
                if num >= 3 and items[2]:
                    extradeps.append(items[2])
                if num >= 4 and items[3]:
                    extrardeps.append(items[3])
                if num >= 5 and items[4]:
                    extrarrecs.append(items[4])
                if num >= 1 and items[0]:
                    extraconf.append(items[0])
            elif num >= 2 and items[1]:
                    extraconf.append(items[1])
        appendVar('DEPENDS', extradeps)
        appendVar('RDEPENDS_${PN}', extrardeps)
        appendVar('RRECOMMENDS_${PN}', extrarrecs)
        appendVar('PACKAGECONFIG_CONFARGS', extraconf)

    pn = d.getVar('PN')
    license = d.getVar('LICENSE')
    if license == "INVALID" and pn != "defaultpkgname":
        bb.fatal('This recipe does not have the LICENSE field set (%s)' % pn)

    if bb.data.inherits_class('license', d):
        check_license_format(d)
        unmatched_license_flags = check_license_flags(d)
        if unmatched_license_flags:
            if len(unmatched_license_flags) == 1:
                message = "because it has a restricted license '{0}'. Which is not whitelisted in LICENSE_FLAGS_WHITELIST".format(unmatched_license_flags[0])
            else:
                message = "because it has restricted licenses {0}. Which are not whitelisted in LICENSE_FLAGS_WHITELIST".format(
                    ", ".join("'{0}'".format(f) for f in unmatched_license_flags))
            bb.debug(1, "Skipping %s %s" % (pn, message))
            raise bb.parse.SkipRecipe(message)

    # If we're building a target package we need to use fakeroot (pseudo)
    # in order to capture permissions, owners, groups and special files
    if not bb.data.inherits_class('native', d) and not bb.data.inherits_class('cross', d):
        d.appendVarFlag('do_prepare_recipe_sysroot', 'depends', ' virtual/fakeroot-native:do_populate_sysroot')
        d.setVarFlag('do_unpack', 'umask', '022')
        d.setVarFlag('do_configure', 'umask', '022')
        d.setVarFlag('do_compile', 'umask', '022')
        d.appendVarFlag('do_install', 'depends', ' virtual/fakeroot-native:do_populate_sysroot')
        d.setVarFlag('do_install', 'fakeroot', '1')
        d.setVarFlag('do_install', 'umask', '022')
        d.appendVarFlag('do_package', 'depends', ' virtual/fakeroot-native:do_populate_sysroot')
        d.setVarFlag('do_package', 'fakeroot', '1')
        d.setVarFlag('do_package', 'umask', '022')
        d.setVarFlag('do_package_setscene', 'fakeroot', '1')
        d.appendVarFlag('do_package_setscene', 'depends', ' virtual/fakeroot-native:do_populate_sysroot')
        d.setVarFlag('do_devshell', 'fakeroot', '1')
        d.appendVarFlag('do_devshell', 'depends', ' virtual/fakeroot-native:do_populate_sysroot')

    need_machine = d.getVar('COMPATIBLE_MACHINE')
    if need_machine:
        import re
        compat_machines = (d.getVar('MACHINEOVERRIDES') or "").split(":")
        for m in compat_machines:
            if re.match(need_machine, m):
                break
        else:
            raise bb.parse.SkipRecipe("incompatible with machine %s (not in COMPATIBLE_MACHINE)" % d.getVar('MACHINE'))

    source_mirror_fetch = d.getVar('SOURCE_MIRROR_FETCH', False)
    if not source_mirror_fetch:
        need_host = d.getVar('COMPATIBLE_HOST')
        if need_host:
            import re
            this_host = d.getVar('HOST_SYS')
            if not re.match(need_host, this_host):
                raise bb.parse.SkipRecipe("incompatible with host %s (not in COMPATIBLE_HOST)" % this_host)

        bad_licenses = (d.getVar('INCOMPATIBLE_LICENSE') or "").split()

        check_license = False if pn.startswith("nativesdk-") else True
        for t in ["-native", "-cross-${TARGET_ARCH}", "-cross-initial-${TARGET_ARCH}",
              "-crosssdk-${SDK_SYS}", "-crosssdk-initial-${SDK_SYS}",
              "-cross-canadian-${TRANSLATED_TARGET_ARCH}"]:
            if pn.endswith(d.expand(t)):
                check_license = False
        if pn.startswith("gcc-source-"):
            check_license = False

        if check_license and bad_licenses:
            bad_licenses = expand_wildcard_licenses(d, bad_licenses)

            whitelist = []
            incompatwl = []
            for lic in bad_licenses:
                spdx_license = return_spdx(d, lic)
                whitelist.extend((d.getVar("WHITELIST_" + lic) or "").split())
                if spdx_license:
                    whitelist.extend((d.getVar("WHITELIST_" + spdx_license) or "").split())
                '''
                We need to track what we are whitelisting and why. If pn is
                incompatible we need to be able to note that the image that
                is created may infact contain incompatible licenses despite
                INCOMPATIBLE_LICENSE being set.
                '''
                incompatwl.extend((d.getVar("WHITELIST_" + lic) or "").split())
                if spdx_license:
                    incompatwl.extend((d.getVar("WHITELIST_" + spdx_license) or "").split())

            if not pn in whitelist:
                pkgs = d.getVar('PACKAGES').split()
                skipped_pkgs = []
                unskipped_pkgs = []
                for pkg in pkgs:
                    if incompatible_license(d, bad_licenses, pkg):
                        skipped_pkgs.append(pkg)
                    else:
                        unskipped_pkgs.append(pkg)
                all_skipped = skipped_pkgs and not unskipped_pkgs
                if unskipped_pkgs:
                    for pkg in skipped_pkgs:
                        bb.debug(1, "SKIPPING the package " + pkg + " at do_rootfs because it's " + license)
                        mlprefix = d.getVar('MLPREFIX')
                        d.setVar('LICENSE_EXCLUSION-' + mlprefix + pkg, 1)
                    for pkg in unskipped_pkgs:
                        bb.debug(1, "INCLUDING the package " + pkg)
                elif all_skipped or incompatible_license(d, bad_licenses):
                    bb.debug(1, "SKIPPING recipe %s because it's %s" % (pn, license))
                    raise bb.parse.SkipRecipe("it has an incompatible license: %s" % license)
            elif pn in whitelist:
                if pn in incompatwl:
                    bb.note("INCLUDING " + pn + " as buildable despite INCOMPATIBLE_LICENSE because it has been whitelisted")

        # Try to verify per-package (LICENSE_<pkg>) values. LICENSE should be a
        # superset of all per-package licenses. We do not do advanced (pattern)
        # matching of license expressions - just check that all license strings
        # in LICENSE_<pkg> are found in LICENSE.
        license_set = oe.license.list_licenses(license)
        for pkg in d.getVar('PACKAGES').split():
            pkg_license = d.getVar('LICENSE_' + pkg)
            if pkg_license:
                unlisted = oe.license.list_licenses(pkg_license) - license_set
                if unlisted:
                    bb.warn("LICENSE_%s includes licenses (%s) that are not "
                            "listed in LICENSE" % (pkg, ' '.join(unlisted)))

    needsrcrev = False
    srcuri = d.getVar('SRC_URI')
    for uri in srcuri.split():
        (scheme, _ , path) = bb.fetch.decodeurl(uri)[:3]

        # HTTP/FTP use the wget fetcher
        if scheme in ("http", "https", "ftp"):
            d.appendVarFlag('do_fetch', 'depends', ' wget-native:do_populate_sysroot')

        # Svn packages should DEPEND on subversion-native
        if scheme == "svn":
            needsrcrev = True
            d.appendVarFlag('do_fetch', 'depends', ' subversion-native:do_populate_sysroot')

        # Git packages should DEPEND on git-native
        elif scheme in ("git", "gitsm"):
            needsrcrev = True
            d.appendVarFlag('do_fetch', 'depends', ' git-native:do_populate_sysroot')

        # Mercurial packages should DEPEND on mercurial-native
        elif scheme == "hg":
            needsrcrev = True
            d.appendVarFlag('do_fetch', 'depends', ' mercurial-native:do_populate_sysroot')

        # Perforce packages support SRCREV = "${AUTOREV}"
        elif scheme == "p4":
            needsrcrev = True

        # OSC packages should DEPEND on osc-native
        elif scheme == "osc":
            d.appendVarFlag('do_fetch', 'depends', ' osc-native:do_populate_sysroot')

        elif scheme == "npm":
            d.appendVarFlag('do_fetch', 'depends', ' nodejs-native:do_populate_sysroot')

        # *.lz4 should DEPEND on lz4-native for unpacking
        if path.endswith('.lz4'):
            d.appendVarFlag('do_unpack', 'depends', ' lz4-native:do_populate_sysroot')

        # *.lz should DEPEND on lzip-native for unpacking
        elif path.endswith('.lz'):
            d.appendVarFlag('do_unpack', 'depends', ' lzip-native:do_populate_sysroot')

        # *.xz should DEPEND on xz-native for unpacking
        elif path.endswith('.xz') or path.endswith('.txz'):
            d.appendVarFlag('do_unpack', 'depends', ' xz-native:do_populate_sysroot')

        # .zip should DEPEND on unzip-native for unpacking
        elif path.endswith('.zip') or path.endswith('.jar'):
            d.appendVarFlag('do_unpack', 'depends', ' unzip-native:do_populate_sysroot')

        # Some rpm files may be compressed internally using xz (for example, rpms from Fedora)
        elif path.endswith('.rpm'):
            d.appendVarFlag('do_unpack', 'depends', ' xz-native:do_populate_sysroot')

        # *.deb should DEPEND on xz-native for unpacking
        elif path.endswith('.deb'):
            d.appendVarFlag('do_unpack', 'depends', ' xz-native:do_populate_sysroot')

    if needsrcrev:
        d.setVar("SRCPV", "${@bb.fetch2.get_srcrev(d)}")

        # Gather all named SRCREVs to add to the sstate hash calculation
        # This anonymous python snippet is called multiple times so we
        # need to be careful to not double up the appends here and cause
        # the base hash to mismatch the task hash
        for uri in srcuri.split():
            parm = bb.fetch.decodeurl(uri)[5]
            uri_names = parm.get("name", "").split(",")
            for uri_name in filter(None, uri_names):
                srcrev_name = "SRCREV_{}".format(uri_name)
                if srcrev_name not in (d.getVarFlag("do_fetch", "vardeps") or "").split():
                    d.appendVarFlag("do_fetch", "vardeps", " {}".format(srcrev_name))

    set_packagetriplet(d)

    # 'multimachine' handling
    mach_arch = d.getVar('MACHINE_ARCH')
    pkg_arch = d.getVar('PACKAGE_ARCH')

    if (pkg_arch == mach_arch):
        # Already machine specific - nothing further to do
        return

    #
    # We always try to scan SRC_URI for urls with machine overrides
    # unless the package sets SRC_URI_OVERRIDES_PACKAGE_ARCH=0
    #
    override = d.getVar('SRC_URI_OVERRIDES_PACKAGE_ARCH')
    if override != '0':
        paths = []
        fpaths = (d.getVar('FILESPATH') or '').split(':')
        machine = d.getVar('MACHINE')
        for p in fpaths:
            if os.path.basename(p) == machine and os.path.isdir(p):
                paths.append(p)

        if len(paths) != 0:
            for s in srcuri.split():
                if not s.startswith("file://"):
                    continue
                fetcher = bb.fetch2.Fetch([s], d)
                local = fetcher.localpath(s)
                for mp in paths:
                    if local.startswith(mp):
                        #bb.note("overriding PACKAGE_ARCH from %s to %s for %s" % (pkg_arch, mach_arch, pn))
                        d.setVar('PACKAGE_ARCH', "${MACHINE_ARCH}")
                        return

    packages = d.getVar('PACKAGES').split()
    for pkg in packages:
        pkgarch = d.getVar("PACKAGE_ARCH_%s" % pkg)

        # We could look for != PACKAGE_ARCH here but how to choose
        # if multiple differences are present?
        # Look through PACKAGE_ARCHS for the priority order?
        if pkgarch and pkgarch == mach_arch:
            d.setVar('PACKAGE_ARCH', "${MACHINE_ARCH}")
            bb.warn("Recipe %s is marked as only being architecture specific but seems to have machine specific packages?! The recipe may as well mark itself as machine specific directly." % d.getVar("PN"))
}


python add_package_and_files () {
def add_package_and_files(d):
    packages = d.getVar('PACKAGES')
    files = d.getVar('LICENSE_FILES_DIRECTORY')
    pn = d.getVar('PN')
    pn_lic = "%s%s" % (pn, d.getVar('LICENSE_PACKAGE_SUFFIX', False))
    if pn_lic in packages.split():
        bb.warn("%s package already existed in %s." % (pn_lic, pn))
    else:
        # first in PACKAGES to be sure that nothing else gets LICENSE_FILES_DIRECTORY
        d.setVar('PACKAGES', "%s %s" % (pn_lic, packages))
        d.setVar('FILES_' + pn_lic, files)
    for pn in packages.split():
        if pn == pn_lic:
            continue
        rrecommends_pn = d.getVar('RRECOMMENDS_' + pn)
        if rrecommends_pn:
            d.setVar('RRECOMMENDS_' + pn, "%s %s" % (pn_lic, rrecommends_pn))
        else:
            d.setVar('RRECOMMENDS_' + pn, "%s" % (pn_lic))
}


python all_multilib_tune_list () {
def all_multilib_tune_list(vars, d):
    """
    Return a list of ${VAR} for each variable VAR in vars from each
    multilib tune configuration.
    Is safe to be called from a multilib recipe/context as it can
    figure out the original tune and remove the multilib overrides.
    """
    values = {}
    for v in vars:
        values[v] = []
    values['ml'] = ['']

    variants = (d.getVar("MULTILIB_VARIANTS") or "").split() + ['']
    for item in variants:
        localdata = get_multilib_datastore(item, d)
        values[v].append(localdata.getVar(v))
        values['ml'].append(item)
    return values}


python all_multilib_tune_values () {
def all_multilib_tune_values(d, var, unique = True, need_split = True, delim = ' '):
    """Return a string of all ${var} in all multilib tune configuration"""
    values = []
    variants = (d.getVar("MULTILIB_VARIANTS") or "").split() + ['']
    for item in variants:
        localdata = get_multilib_datastore(item, d)
        # We need WORKDIR to be consistent with the original datastore
        localdata.setVar("WORKDIR", d.getVar("WORKDIR"))
        value = localdata.getVar(var) or ""
        if value != "":
            if need_split:
                for item in value.split(delim):
                    values.append(item)
            else:
                values.append(value)
    if unique:
        #we do this to keep order as much as possible
        ret = []
        for value in values:
            if not value in ret:
                ret.append(value)
    else:
        ret = values
    return " ".join(ret)
}


python available_licenses () {
def available_licenses(d):
    """
    Return the available licenses by searching the directories specified by
    COMMON_LICENSE_DIR and LICENSE_PATH.
    """
    lic_dirs = ((d.getVar('COMMON_LICENSE_DIR') or '') + ' ' +
                (d.getVar('LICENSE_PATH') or '')).split()

    licenses = []
    for lic_dir in lic_dirs:
        licenses += os.listdir(lic_dir)

    licenses = sorted(licenses)
    return licenses

# Only determine the list of all available licenses once. This assumes that any
# additions to LICENSE_PATH have been done before this file is parsed.}


python base_dep_prepend () {
None}


python base_detect_branch () {
def base_detect_branch(d):
    path = base_get_scmbasepath(d)
    return base_get_metadata_git_branch(path, d)
}


python base_detect_revision () {
def base_detect_revision(d):
    path = base_get_scmbasepath(d)
    return base_get_metadata_git_revision(path, d)
}


python base_do_fetch () {

    src_uri = (d.getVar('SRC_URI') or "").split()
    if len(src_uri) == 0:
        return

    try:
        fetcher = bb.fetch2.Fetch(src_uri, d)
        fetcher.download()
    except bb.fetch2.BBFetchException as e:
        bb.fatal(str(e))
}


python base_do_unpack () {
    src_uri = (d.getVar('SRC_URI') or "").split()
    if len(src_uri) == 0:
        return

    try:
        fetcher = bb.fetch2.Fetch(src_uri, d)
        fetcher.unpack(d.getVar('WORKDIR'))
    except bb.fetch2.BBFetchException as e:
        bb.fatal(str(e))
}


python base_eventhandler () {
    import bb.runqueue

    if isinstance(e, bb.event.ConfigParsed):
        if not d.getVar("NATIVELSBSTRING", False):
            d.setVar("NATIVELSBSTRING", lsb_distro_identifier(d))
        d.setVar('BB_VERSION', bb.__version__)

    # There might be no bb.event.ConfigParsed event if bitbake server is
    # running, so check bb.event.BuildStarted too to make sure ${HOSTTOOLS_DIR}
    # exists.
    if isinstance(e, bb.event.ConfigParsed) or \
            (isinstance(e, bb.event.BuildStarted) and not os.path.exists(d.getVar('HOSTTOOLS_DIR'))):
        # Works with the line in layer.conf which changes PATH to point here
        setup_hosttools_dir(d.getVar('HOSTTOOLS_DIR'), 'HOSTTOOLS', d)
        setup_hosttools_dir(d.getVar('HOSTTOOLS_DIR'), 'HOSTTOOLS_NONFATAL', d, fatal=False)

    if isinstance(e, bb.event.MultiConfigParsed):
        # We need to expand SIGGEN_EXCLUDE_SAFE_RECIPE_DEPS in each of the multiconfig data stores
        # own contexts so the variables get expanded correctly for that arch, then inject back into
        # the main data store.
        deps = []
        for config in e.mcdata:
            deps.append(e.mcdata[config].getVar("SIGGEN_EXCLUDE_SAFE_RECIPE_DEPS"))
        deps = " ".join(deps)
        e.mcdata[''].setVar("SIGGEN_EXCLUDE_SAFE_RECIPE_DEPS", deps)

    if isinstance(e, bb.event.BuildStarted):
        localdata = bb.data.createCopy(d)
        statuslines = []
        for func in oe.data.typed_value('BUILDCFG_FUNCS', localdata):
            g = globals()
            if func not in g:
                bb.warn("Build configuration function '%s' does not exist" % func)
            else:
                flines = g[func](localdata)
                if flines:
                    statuslines.extend(flines)

        statusheader = d.getVar('BUILDCFG_HEADER')
        if statusheader:
            bb.plain('\n%s\n%s\n' % (statusheader, '\n'.join(statuslines)))

    # This code is to silence warnings where the SDK variables overwrite the
    # target ones and we'd see dulpicate key names overwriting each other
    # for various PREFERRED_PROVIDERS
    if isinstance(e, bb.event.RecipePreFinalise):
        if d.getVar("TARGET_PREFIX") == d.getVar("SDK_PREFIX"):
            d.delVar("PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}binutils")
            d.delVar("PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}gcc")
            d.delVar("PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}g++")
            d.delVar("PREFERRED_PROVIDER_virtual/${TARGET_PREFIX}compilerlibs")

    if isinstance(e, bb.event.RecipeParsed):
        #
        # If we have multiple providers of virtual/X and a PREFERRED_PROVIDER_virtual/X is set
        # skip parsing for all the other providers which will mean they get uninstalled from the
        # sysroot since they're now "unreachable". This makes switching virtual/kernel work in
        # particular.
        #
        pn = d.getVar('PN')
        source_mirror_fetch = d.getVar('SOURCE_MIRROR_FETCH', False)
        if not source_mirror_fetch:
            provs = (d.getVar("PROVIDES") or "").split()
            multiwhitelist = (d.getVar("MULTI_PROVIDER_WHITELIST") or "").split()
            for p in provs:
                if p.startswith("virtual/") and p not in multiwhitelist:
                    profprov = d.getVar("PREFERRED_PROVIDER_" + p)
                    if profprov and pn != profprov:
                        raise bb.parse.SkipRecipe("PREFERRED_PROVIDER_%s set to %s, not %s" % (p, profprov, pn))
}


python base_get_metadata_git_branch () {
def base_get_metadata_git_branch(path, d):
    import bb.process

    try:
        rev, _ = bb.process.run('git rev-parse --abbrev-ref HEAD', cwd=path)
    except bb.process.ExecutionError:
        rev = '<unknown>'
    return rev.strip()
}


python base_get_metadata_git_revision () {
def base_get_metadata_git_revision(path, d):
    import bb.process

    try:
        rev, _ = bb.process.run('git rev-parse HEAD', cwd=path)
    except bb.process.ExecutionError:
        rev = '<unknown>'
    return rev.strip()}


python base_get_metadata_svn_revision () {
def base_get_metadata_svn_revision(path, d):
    # This only works with older subversion. For newer versions
    # this function will need to be fixed by someone interested
    revision = "<unknown>"
    try:
        with open("%s/.svn/entries" % path) as f:
            revision = f.readlines()[3].strip()
    except (IOError, IndexError):
        pass
    return revision
}


python base_get_scmbasepath () {
def base_get_scmbasepath(d):
    return os.path.join(d.getVar('COREBASE'), 'meta')
}


python base_set_filespath () {
def base_set_filespath(path, d):
    filespath = []
    extrapaths = (d.getVar("FILESEXTRAPATHS") or "")
    # Remove default flag which was used for checking
    extrapaths = extrapaths.replace("__default:", "")
    # Don't prepend empty strings to the path list
    if extrapaths != "":
        path = extrapaths.split(":") + path
    # The ":" ensures we have an 'empty' override
    overrides = (":" + (d.getVar("FILESOVERRIDES") or "")).split(":")
    overrides.reverse()
    for o in overrides:
        for p in path:
            if p != "":
                filespath.append(os.path.join(p, o))
    return ":".join(filespath)
}


python bblayers_conf_file () {
def bblayers_conf_file(d):
    return os.path.join(d.getVar('TOPDIR'), 'conf/bblayers.conf')
}


python buildcfg_neededvars () {
def buildcfg_neededvars(d):
    needed_vars = oe.data.typed_value("BUILDCFG_NEEDEDVARS", d)
    pesteruser = []
    for v in needed_vars:
        val = d.getVar(v)
        if not val or val == 'INVALID':
            pesteruser.append(v)

    if pesteruser:
        bb.fatal('The following variable(s) were not set: %s\nPlease set them directly, or choose a MACHINE or DISTRO that sets them.' % ', '.join(pesteruser))
}


python buildcfg_vars () {
def buildcfg_vars(d):
    statusvars = oe.data.typed_value('BUILDCFG_VARS', d)
    for var in statusvars:
        value = d.getVar(var)
        if value is not None:
            yield '%-20s = "%s"' % (var, value)
}


python canonical_license () {
def canonical_license(d, license):
    """
    Return the canonical (SPDX) form of the license if available (so GPLv3
    becomes GPL-3.0), for the license named 'X+', return canonical form of
    'X' if available and the tailing '+' (so GPLv3+ becomes GPL-3.0+),
    or the passed license if there is no canonical form.
    """
    lic = d.getVarFlag('SPDXLICENSEMAP', license) or ""
    if not lic and license.endswith('+'):
        lic = d.getVarFlag('SPDXLICENSEMAP', license.rstrip('+'))
        if lic:
            lic += '+'
    return lic or license
}


python check_app_exists () {
def check_app_exists(app, d):
    app = d.expand(app).split()[0].strip()
    path = d.getVar('PATH')
    return bool(bb.utils.which(path, app))
}


python check_case_sensitive () {
def check_case_sensitive(path, name):
    import tempfile
    with tempfile.NamedTemporaryFile(prefix='TmP', dir=path) as tmp_file:
        if os.path.exists(tmp_file.name.lower()):
            return "The %s (%s) can't be on a case-insensitive file system.\n" % (name, path)
        return ""

# Check that path isn't a broken symlink}


python check_conf_exists () {
def check_conf_exists(fn, data):
    bbpath = []
    fn = data.expand(fn)
    vbbpath = data.getVar("BBPATH", False)
    if vbbpath:
        bbpath += vbbpath.split(":")
    for p in bbpath:
        currname = os.path.join(data.expand(p), fn)
        if os.access(currname, os.R_OK):
            return True
    return False
}


python check_connectivity () {
def check_connectivity(d):
    # URI's to check can be set in the CONNECTIVITY_CHECK_URIS variable
    # using the same syntax as for SRC_URI. If the variable is not set
    # the check is skipped
    test_uris = (d.getVar('CONNECTIVITY_CHECK_URIS') or "").split()
    retval = ""

    bbn = d.getVar('BB_NO_NETWORK')
    if bbn not in (None, '0', '1'):
        return 'BB_NO_NETWORK should be "0" or "1", but it is "%s"' % bbn

    # Only check connectivity if network enabled and the
    # CONNECTIVITY_CHECK_URIS are set
    network_enabled = not (bbn == '1')
    check_enabled = len(test_uris)
    if check_enabled and network_enabled:
        # Take a copy of the data store and unset MIRRORS and PREMIRRORS
        data = bb.data.createCopy(d)
        data.delVar('PREMIRRORS')
        data.delVar('MIRRORS')
        try:
            fetcher = bb.fetch2.Fetch(test_uris, data)
            fetcher.checkstatus()
        except Exception as err:
            # Allow the message to be configured so that users can be
            # pointed to a support mechanism.
            msg = data.getVar('CONNECTIVITY_CHECK_MSG') or ""
            if len(msg) == 0:
                msg = "%s.\n" % err
                msg += "    Please ensure your host's network is configured correctly,\n"
                msg += "    or set BB_NO_NETWORK = \"1\" to disable network access if\n"
                msg += "    all required sources are on local disk.\n"
            retval = msg

    return retval
}


python check_create_long_filename () {
def check_create_long_filename(filepath, pathname):
    import string, random
    testfile = os.path.join(filepath, ''.join(random.choice(string.ascii_letters) for x in range(200)))
    try:
        if not os.path.exists(filepath):
            bb.utils.mkdirhier(filepath)
        f = open(testfile, "w")
        f.close()
        os.remove(testfile)
    except IOError as e:
        import errno
        err, strerror = e.args
        if err == errno.ENAMETOOLONG:
            return "Failed to create a file with a long name in %s. Please use a filesystem that does not unreasonably limit filename length.\n" % pathname
        else:
            return "Failed to create a file in %s: %s.\n" % (pathname, strerror)
    except OSError as e:
        errno, strerror = e.args
        return "Failed to create %s directory in which to run long name sanity check: %s.\n" % (pathname, strerror)
    return ""
}


python check_git_version () {
def check_git_version(sanity_data):
    from distutils.version import LooseVersion
    import subprocess
    try:
        result = subprocess.check_output(["git", "--version"], stderr=subprocess.DEVNULL).decode('utf-8')
    except subprocess.CalledProcessError as e:
        return "Unable to execute git --version, exit code %d\n%s\n" % (e.returncode, e.output)
    version = result.split()[2]
    if LooseVersion(version) < LooseVersion("1.8.3.1"):
        return "Your version of git is older than 1.8.3.1 and has bugs which will break builds. Please install a newer version of git.\n"
    return None

# Check the required perl modules which may not be installed by default}


python check_license_flags () {
def check_license_flags(d):
    """
    This function checks if a recipe has any LICENSE_FLAGS that
    aren't whitelisted.

    If it does, it returns the all LICENSE_FLAGS missing from the whitelist, or
    all of the LICENSE_FLAGS if there is no whitelist.

    If everything is is properly whitelisted, it returns None.
    """

    def license_flag_matches(flag, whitelist, pn):
        """
        Return True if flag matches something in whitelist, None if not.

        Before we test a flag against the whitelist, we append _${PN}
        to it.  We then try to match that string against the
        whitelist.  This covers the normal case, where we expect
        LICENSE_FLAGS to be a simple string like 'commercial', which
        the user typically matches exactly in the whitelist by
        explicitly appending the package name e.g 'commercial_foo'.
        If we fail the match however, we then split the flag across
        '_' and append each fragment and test until we either match or
        run out of fragments.
        """
        flag_pn = ("%s_%s" % (flag, pn))
        for candidate in whitelist:
            if flag_pn == candidate:
                    return True

        flag_cur = ""
        flagments = flag_pn.split("_")
        flagments.pop() # we've already tested the full string
        for flagment in flagments:
            if flag_cur:
                flag_cur += "_"
            flag_cur += flagment
            for candidate in whitelist:
                if flag_cur == candidate:
                    return True
        return False

    def all_license_flags_match(license_flags, whitelist):
        """ Return all unmatched flags, None if all flags match """
        pn = d.getVar('PN')
        split_whitelist = whitelist.split()
        flags = []
        for flag in license_flags.split():
            if not license_flag_matches(flag, split_whitelist, pn):
                flags.append(flag)
        return flags if flags else None

    license_flags = d.getVar('LICENSE_FLAGS')
    if license_flags:
        whitelist = d.getVar('LICENSE_FLAGS_WHITELIST')
        if not whitelist:
            return license_flags.split()
        unmatched_flags = all_license_flags_match(license_flags, whitelist)
        if unmatched_flags:
            return unmatched_flags
    return None
}


python check_license_format () {
def check_license_format(d):
    """
    This function checks if LICENSE is well defined,
        Validate operators in LICENSES.
        No spaces are allowed between LICENSES.
    """
    pn = d.getVar('PN')
    licenses = d.getVar('LICENSE')
    from oe.license import license_operator, license_operator_chars, license_pattern

    elements = list(filter(lambda x: x.strip(), license_operator.split(licenses)))
    for pos, element in enumerate(elements):
        if license_pattern.match(element):
            if pos > 0 and license_pattern.match(elements[pos - 1]):
                bb.warn('%s: LICENSE value "%s" has an invalid format - license names ' \
                        'must be separated by the following characters to indicate ' \
                        'the license selection: %s' %
                        (pn, licenses, license_operator_chars))
        elif not license_operator.match(element):
            bb.warn('%s: LICENSE value "%s" has an invalid separator "%s" that is not ' \
                    'in the valid list of separators (%s)' %
                    (pn, licenses, element, license_operator_chars))
}


python check_make_version () {
def check_make_version(sanity_data):
    from distutils.version import LooseVersion
    import subprocess

    try:
        result = subprocess.check_output(['make', '--version'], stderr=subprocess.STDOUT).decode('utf-8')
    except subprocess.CalledProcessError as e:
        return "Unable to execute make --version, exit code %d\n%s\n" % (e.returncode, e.output)
    version = result.split()[2]
    if LooseVersion(version) == LooseVersion("3.82"):
        # Construct a test file
        f = open("makefile_test", "w")
        f.write("makefile_test.a: makefile_test_a.c makefile_test_b.c makefile_test.a( makefile_test_a.c makefile_test_b.c)\n")
        f.write("\n")
        f.write("makefile_test_a.c:\n")
        f.write("	touch $@\n")
        f.write("\n")
        f.write("makefile_test_b.c:\n")
        f.write("	touch $@\n")
        f.close()

        # Check if make 3.82 has been patched
        try:
            subprocess.check_call(['make', '-f', 'makefile_test'])
        except subprocess.CalledProcessError as e:
            return "Your version of make 3.82 is broken. Please revert to 3.81 or install a patched version.\n"
        finally:
            os.remove("makefile_test")
            if os.path.exists("makefile_test_a.c"):
                os.remove("makefile_test_a.c")
            if os.path.exists("makefile_test_b.c"):
                os.remove("makefile_test_b.c")
            if os.path.exists("makefile_test.a"):
                os.remove("makefile_test.a")
    return None


# Check if we're running on WSL (Windows Subsystem for Linux). Its known not to
# work but we should tell the user that upfront.}


python check_not_nfs () {
def check_not_nfs(path, name):
    # The nfs' filesystem id is 6969
    if get_filesystem_id(path) == "6969":
        return "The %s: %s can't be located on nfs.\n" % (name, path)
    return ""

# Check that the path is on a case-sensitive file system}


python check_patch_version () {
def check_patch_version(sanity_data):
    from distutils.version import LooseVersion
    import re, subprocess

    try:
        result = subprocess.check_output(["patch", "--version"], stderr=subprocess.STDOUT).decode('utf-8')
        version = re.search(r"[0-9.]+", result.splitlines()[0]).group()
        if LooseVersion(version) < LooseVersion("2.7"):
            return "Your version of patch is older than 2.7 and has bugs which will break builds. Please install a newer version of patch.\n"
        else:
            return None
    except subprocess.CalledProcessError as e:
        return "Unable to execute patch --version, exit code %d:\n%s\n" % (e.returncode, e.output)

# Unpatched versions of make 3.82 are known to be broken.  See GNU Savannah Bug 30612.
# Use a modified reproducer from http://savannah.gnu.org/bugs/?30612 to validate.}


python check_path_length () {
def check_path_length(filepath, pathname, limit):
    if len(filepath) > limit:
        return "The length of %s is longer than %s, this would cause unexpected errors, please use a shorter path.\n" % (pathname, limit)
    return ""
}


python check_perl_modules () {
def check_perl_modules(sanity_data):
    import subprocess
    ret = ""
    modules = ( "Text::ParseWords", "Thread::Queue", "Data::Dumper" )
    errresult = ''
    for m in modules:
        try:
            subprocess.check_output(["perl", "-e", "use %s" % m])
        except subprocess.CalledProcessError as e:
            errresult += bytes.decode(e.output)
            ret += "%s " % m
    if ret:
        return "Required perl module(s) not found: %s\n\n%s\n" % (ret, errresult)
    return None
}


python check_sanity () {
def check_sanity(sanity_data):
    class SanityStatus(object):
        def __init__(self):
            self.messages = ""
            self.network_error = False

        def addresult(self, message):
            if message:
                self.messages = self.messages + message

    status = SanityStatus()

    tmpdir = sanity_data.getVar('TMPDIR')
    sstate_dir = sanity_data.getVar('SSTATE_DIR')

    check_symlink(sstate_dir, sanity_data)

    # Check saved sanity info
    last_sanity_version = 0
    last_tmpdir = ""
    last_sstate_dir = ""
    last_nativelsbstr = ""
    sanityverfile = sanity_data.expand("${TOPDIR}/cache/sanity_info")
    if os.path.exists(sanityverfile):
        with open(sanityverfile, 'r') as f:
            for line in f:
                if line.startswith('SANITY_VERSION'):
                    last_sanity_version = int(line.split()[1])
                if line.startswith('TMPDIR'):
                    last_tmpdir = line.split()[1]
                if line.startswith('SSTATE_DIR'):
                    last_sstate_dir = line.split()[1]
                if line.startswith('NATIVELSBSTRING'):
                    last_nativelsbstr = line.split()[1]

    check_sanity_everybuild(status, sanity_data)

    sanity_version = int(sanity_data.getVar('SANITY_VERSION') or 1)
    network_error = False
    # NATIVELSBSTRING var may have been overridden with "universal", so
    # get actual host distribution id and version
    nativelsbstr = lsb_distro_identifier(sanity_data)
    if last_sanity_version < sanity_version or last_nativelsbstr != nativelsbstr:
        check_sanity_version_change(status, sanity_data)
        status.addresult(check_sanity_sstate_dir_change(sstate_dir, sanity_data))
    else:
        if last_sstate_dir != sstate_dir:
            status.addresult(check_sanity_sstate_dir_change(sstate_dir, sanity_data))

    if os.path.exists(os.path.dirname(sanityverfile)) and not status.messages:
        with open(sanityverfile, 'w') as f:
            f.write("SANITY_VERSION %s\n" % sanity_version)
            f.write("TMPDIR %s\n" % tmpdir)
            f.write("SSTATE_DIR %s\n" % sstate_dir)
            f.write("NATIVELSBSTRING %s\n" % nativelsbstr)

    sanity_handle_abichanges(status, sanity_data)

    if status.messages != "":
        raise_sanity_error(sanity_data.expand(status.messages), sanity_data, status.network_error)

# Create a copy of the datastore and finalise it to ensure appends and
# overrides are set - the datastore has yet to be finalised at ConfigParsed}


python check_sanity_eventhandler () {
    if bb.event.getName(e) == "SanityCheck":
        sanity_data = copy_data(e)
        check_sanity(sanity_data)
        if e.generateevents:
            sanity_data.setVar("SANITY_USE_EVENTS", "1")
        bb.event.fire(bb.event.SanityCheckPassed(), e.data)
    elif bb.event.getName(e) == "NetworkTest":
        sanity_data = copy_data(e)
        if e.generateevents:
            sanity_data.setVar("SANITY_USE_EVENTS", "1")
        bb.event.fire(bb.event.NetworkTestFailed() if check_connectivity(sanity_data) else bb.event.NetworkTestPassed(), e.data)

    return
}


python check_sanity_everybuild () {
def check_sanity_everybuild(status, d):
    import os, stat
    # Sanity tests which test the users environment so need to run at each build (or are so cheap
    # it makes sense to always run them.

    if 0 == os.getuid():
        raise_sanity_error("Do not use Bitbake as root.", d)

    # Check the Python version, we now have a minimum of Python 3.4
    import sys
    if sys.hexversion < 0x03040000:
        status.addresult('The system requires at least Python 3.4 to run. Please update your Python interpreter.\n')

    # Check the bitbake version meets minimum requirements
    from distutils.version import LooseVersion
    minversion = d.getVar('BB_MIN_VERSION')
    if (LooseVersion(bb.__version__) < LooseVersion(minversion)):
        status.addresult('Bitbake version %s is required and version %s was found\n' % (minversion, bb.__version__))

    sanity_check_locale(d)

    paths = d.getVar('PATH').split(":")
    if "." in paths or "./" in paths or "" in paths:
        status.addresult("PATH contains '.', './' or '' (empty element), which will break the build, please remove this.\nParsed PATH is " + str(paths) + "\n")

    # Check that the DISTRO is valid, if set
    # need to take into account DISTRO renaming DISTRO
    distro = d.getVar('DISTRO')
    if distro and distro != "nodistro":
        if not ( check_conf_exists("conf/distro/${DISTRO}.conf", d) or check_conf_exists("conf/distro/include/${DISTRO}.inc", d) ):
            status.addresult("DISTRO '%s' not found. Please set a valid DISTRO in your local.conf\n" % d.getVar("DISTRO"))

    # Check that these variables don't use tilde-expansion as we don't do that
    for v in ("TMPDIR", "DL_DIR", "SSTATE_DIR"):
        if d.getVar(v).startswith("~"):
            status.addresult("%s uses ~ but Bitbake will not expand this, use an absolute path or variables." % v)

    # Check that DL_DIR is set, exists and is writable. In theory, we should never even hit the check if DL_DIR isn't
    # set, since so much relies on it being set.
    dldir = d.getVar('DL_DIR')
    if not dldir:
        status.addresult("DL_DIR is not set. Your environment is misconfigured, check that DL_DIR is set, and if the directory exists, that it is writable. \n")
    if os.path.exists(dldir) and not os.access(dldir, os.W_OK):
        status.addresult("DL_DIR: %s exists but you do not appear to have write access to it. \n" % dldir)
    check_symlink(dldir, d)

    # Check that the MACHINE is valid, if it is set
    machinevalid = True
    if d.getVar('MACHINE'):
        if not check_conf_exists("conf/machine/${MACHINE}.conf", d):
            status.addresult('MACHINE=%s is invalid. Please set a valid MACHINE in your local.conf, environment or other configuration file.\n' % (d.getVar('MACHINE')))
            machinevalid = False
        else:
            status.addresult(check_sanity_validmachine(d))
    else:
        status.addresult('Please set a MACHINE in your local.conf or environment\n')
        machinevalid = False
    if machinevalid:
        status.addresult(check_toolchain(d))

    # Check that the SDKMACHINE is valid, if it is set
    if d.getVar('SDKMACHINE'):
        if not check_conf_exists("conf/machine-sdk/${SDKMACHINE}.conf", d):
            status.addresult('Specified SDKMACHINE value is not valid\n')
        elif d.getVar('SDK_ARCH', False) == "${BUILD_ARCH}":
            status.addresult('SDKMACHINE is set, but SDK_ARCH has not been changed as a result - SDKMACHINE may have been set too late (e.g. in the distro configuration)\n')

    # If SDK_VENDOR looks like "-my-sdk" then the triples are badly formed so fail early
    sdkvendor = d.getVar("SDK_VENDOR")
    if not (sdkvendor.startswith("-") and sdkvendor.count("-") == 1):
        status.addresult("SDK_VENDOR should be of the form '-foosdk' with a single dash\n")

    check_supported_distro(d)

    omask = os.umask(0o022)
    if omask & 0o755:
        status.addresult("Please use a umask which allows a+rx and u+rwx\n")
    os.umask(omask)

    if d.getVar('TARGET_ARCH') == "arm":
        # This path is no longer user-readable in modern (very recent) Linux
        try:
            if os.path.exists("/proc/sys/vm/mmap_min_addr"):
                f = open("/proc/sys/vm/mmap_min_addr", "r")
                try:
                    if (int(f.read().strip()) > 65536):
                        status.addresult("/proc/sys/vm/mmap_min_addr is not <= 65536. This will cause problems with qemu so please fix the value (as root).\n\nTo fix this in later reboots, set vm.mmap_min_addr = 65536 in /etc/sysctl.conf.\n")
                finally:
                    f.close()
        except:
            pass

    oeroot = d.getVar('COREBASE')
    if oeroot.find('+') != -1:
        status.addresult("Error, you have an invalid character (+) in your COREBASE directory path. Please move the installation to a directory which doesn't include any + characters.")
    if oeroot.find('@') != -1:
        status.addresult("Error, you have an invalid character (@) in your COREBASE directory path. Please move the installation to a directory which doesn't include any @ characters.")
    if oeroot.find(' ') != -1:
        status.addresult("Error, you have a space in your COREBASE directory path. Please move the installation to a directory which doesn't include a space since autotools doesn't support this.")

    # Check the format of MIRRORS, PREMIRRORS and SSTATE_MIRRORS
    import re
    mirror_vars = ['MIRRORS', 'PREMIRRORS', 'SSTATE_MIRRORS']
    protocols = ['http', 'ftp', 'file', 'https', \
                 'git', 'gitsm', 'hg', 'osc', 'p4', 'svn', \
                 'bzr', 'cvs', 'npm', 'sftp', 'ssh', 's3' ]
    for mirror_var in mirror_vars:
        mirrors = (d.getVar(mirror_var) or '').replace('\\n', ' ').split()

        # Split into pairs
        if len(mirrors) % 2 != 0:
            bb.warn('Invalid mirror variable value for %s: %s, should contain paired members.' % (mirror_var, str(mirrors)))
            continue
        mirrors = list(zip(*[iter(mirrors)]*2))

        for mirror_entry in mirrors:
            pattern, mirror = mirror_entry

            decoded = bb.fetch2.decodeurl(pattern)
            try:
                pattern_scheme = re.compile(decoded[0])
            except re.error as exc:
                bb.warn('Invalid scheme regex (%s) in %s; %s' % (pattern, mirror_var, mirror_entry))
                continue

            if not any(pattern_scheme.match(protocol) for protocol in protocols):
                bb.warn('Invalid protocol (%s) in %s: %s' % (decoded[0], mirror_var, mirror_entry))
                continue

            if not any(mirror.startswith(protocol + '://') for protocol in protocols):
                bb.warn('Invalid protocol in %s: %s' % (mirror_var, mirror_entry))
                continue

            if mirror.startswith('file://'):
                import urllib
                check_symlink(urllib.parse.urlparse(mirror).path, d)
                # SSTATE_MIRROR ends with a /PATH string
                if mirror.endswith('/PATH'):
                    # remove /PATH$ from SSTATE_MIRROR to get a working
                    # base directory path
                    mirror_base = urllib.parse.urlparse(mirror[:-1*len('/PATH')]).path
                    check_symlink(mirror_base, d)

    # Check that TMPDIR hasn't changed location since the last time we were run
    tmpdir = d.getVar('TMPDIR')
    checkfile = os.path.join(tmpdir, "saved_tmpdir")
    if os.path.exists(checkfile):
        with open(checkfile, "r") as f:
            saved_tmpdir = f.read().strip()
            if (saved_tmpdir != tmpdir):
                status.addresult("Error, TMPDIR has changed location. You need to either move it back to %s or delete it and rebuild\n" % saved_tmpdir)
    else:
        bb.utils.mkdirhier(tmpdir)
        # Remove setuid, setgid and sticky bits from TMPDIR
        try:
            os.chmod(tmpdir, os.stat(tmpdir).st_mode & ~ stat.S_ISUID)
            os.chmod(tmpdir, os.stat(tmpdir).st_mode & ~ stat.S_ISGID)
            os.chmod(tmpdir, os.stat(tmpdir).st_mode & ~ stat.S_ISVTX)
        except OSError as exc:
            bb.warn("Unable to chmod TMPDIR: %s" % exc)
        with open(checkfile, "w") as f:
            f.write(tmpdir)

    # If /bin/sh is a symlink, check that it points to dash or bash
    if os.path.islink('/bin/sh'):
        real_sh = os.path.realpath('/bin/sh')
        # Due to update-alternatives, the shell name may take various
        # forms, such as /bin/dash, bin/bash, /bin/bash.bash ...
        if '/dash' not in real_sh and '/bash' not in real_sh:
            status.addresult("Error, /bin/sh links to %s, must be dash or bash\n" % real_sh)
}


python check_sanity_sstate_dir_change () {
def check_sanity_sstate_dir_change(sstate_dir, data):
    # Sanity checks to be done when the value of SSTATE_DIR changes

    # Check that SSTATE_DIR isn't on a filesystem with limited filename length (eg. eCryptFS)
    testmsg = ""
    if sstate_dir != "":
        testmsg = check_create_long_filename(sstate_dir, "SSTATE_DIR")
        # If we don't have permissions to SSTATE_DIR, suggest the user set it as an SSTATE_MIRRORS
        try:
            err = testmsg.split(': ')[1].strip()
            if err == "Permission denied.":
                testmsg = testmsg + "You could try using %s in SSTATE_MIRRORS rather than as an SSTATE_CACHE.\n" % (sstate_dir)
        except IndexError:
            pass
    return testmsg
}


python check_sanity_validmachine () {
def check_sanity_validmachine(sanity_data):
    messages = ""

    # Check TUNE_ARCH is set
    if sanity_data.getVar('TUNE_ARCH') == 'INVALID':
        messages = messages + 'TUNE_ARCH is unset. Please ensure your MACHINE configuration includes a valid tune configuration file which will set this correctly.\n'

    # Check TARGET_OS is set
    if sanity_data.getVar('TARGET_OS') == 'INVALID':
        messages = messages + 'Please set TARGET_OS directly, or choose a MACHINE or DISTRO that does so.\n'

    # Check that we don't have duplicate entries in PACKAGE_ARCHS & that TUNE_PKGARCH is in PACKAGE_ARCHS
    pkgarchs = sanity_data.getVar('PACKAGE_ARCHS')
    tunepkg = sanity_data.getVar('TUNE_PKGARCH')
    defaulttune = sanity_data.getVar('DEFAULTTUNE')
    tunefound = False
    seen = {}
    dups = []

    for pa in pkgarchs.split():
        if seen.get(pa, 0) == 1:
            dups.append(pa)
        else:
            seen[pa] = 1
        if pa == tunepkg:
            tunefound = True

    if len(dups):
        messages = messages + "Error, the PACKAGE_ARCHS variable contains duplicates. The following archs are listed more than once: %s" % " ".join(dups)

    if tunefound == False:
        messages = messages + "Error, the PACKAGE_ARCHS variable (%s) for DEFAULTTUNE (%s) does not contain TUNE_PKGARCH (%s)." % (pkgarchs, defaulttune, tunepkg)

    return messages

# Patch before 2.7 can't handle all the features in git-style diffs.  Some
# patches may incorrectly apply, and others won't apply at all.}


python check_sanity_version_change () {
def check_sanity_version_change(status, d):
    # Sanity checks to be done when SANITY_VERSION or NATIVELSBSTRING changes
    # In other words, these tests run once in a given build directory and then
    # never again until the sanity version or host distrubution id/version changes.

    # Check the python install is complete. Examples that are often removed in
    # minimal installations: glib-2.0-natives requries # xml.parsers.expat and icu
    # requires distutils.sysconfig.
    try:
        import xml.parsers.expat
        import distutils.sysconfig
    except ImportError as e:
        status.addresult('Your Python 3 is not a full install. Please install the module %s (see the Getting Started guide for further information).\n' % e.name)

    status.addresult(check_make_version(d))
    status.addresult(check_patch_version(d))
    status.addresult(check_tar_version(d))
    status.addresult(check_git_version(d))
    status.addresult(check_perl_modules(d))
    status.addresult(check_wsl(d))

    missing = ""

    if not check_app_exists("${MAKE}", d):
        missing = missing + "GNU make,"

    if not check_app_exists('${BUILD_CC}', d):
        missing = missing + "C Compiler (%s)," % d.getVar("BUILD_CC")

    if not check_app_exists('${BUILD_CXX}', d):
        missing = missing + "C++ Compiler (%s)," % d.getVar("BUILD_CXX")

    required_utilities = d.getVar('SANITY_REQUIRED_UTILITIES')

    for util in required_utilities.split():
        if not check_app_exists(util, d):
            missing = missing + "%s," % util

    if missing:
        missing = missing.rstrip(',')
        status.addresult("Please install the following missing utilities: %s\n" % missing)

    assume_provided = d.getVar('ASSUME_PROVIDED').split()
    # Check user doesn't have ASSUME_PROVIDED = instead of += in local.conf
    if "diffstat-native" not in assume_provided:
        status.addresult('Please use ASSUME_PROVIDED +=, not ASSUME_PROVIDED = in your local.conf\n')

    # Check that TMPDIR isn't on a filesystem with limited filename length (eg. eCryptFS)
    import stat
    tmpdir = d.getVar('TMPDIR')
    status.addresult(check_create_long_filename(tmpdir, "TMPDIR"))
    tmpdirmode = os.stat(tmpdir).st_mode
    if (tmpdirmode & stat.S_ISGID):
        status.addresult("TMPDIR is setgid, please don't build in a setgid directory")
    if (tmpdirmode & stat.S_ISUID):
        status.addresult("TMPDIR is setuid, please don't build in a setuid directory")

    # Some third-party software apparently relies on chmod etc. being suid root (!!)
    import stat
    suid_check_bins = "chown chmod mknod".split()
    for bin_cmd in suid_check_bins:
        bin_path = bb.utils.which(os.environ["PATH"], bin_cmd)
        if bin_path:
            bin_stat = os.stat(bin_path)
            if bin_stat.st_uid == 0 and bin_stat.st_mode & stat.S_ISUID:
                status.addresult('%s has the setuid bit set. This interferes with pseudo and may cause other issues that break the build process.\n' % bin_path)

    # Check that we can fetch from various network transports
    netcheck = check_connectivity(d)
    status.addresult(netcheck)
    if netcheck:
        status.network_error = True

    nolibs = d.getVar('NO32LIBS')
    if not nolibs:
        lib32path = '/lib'
        if os.path.exists('/lib64') and ( os.path.islink('/lib64') or os.path.islink('/lib') ):
           lib32path = '/lib32'

        if os.path.exists('%s/libc.so.6' % lib32path) and not os.path.exists('/usr/include/gnu/stubs-32.h'):
            status.addresult("You have a 32-bit libc, but no 32-bit headers.  You must install the 32-bit libc headers.\n")

    bbpaths = d.getVar('BBPATH').split(":")
    if ("." in bbpaths or "./" in bbpaths or "" in bbpaths):
        status.addresult("BBPATH references the current directory, either through "    \
                "an empty entry, a './' or a '.'.\n\t This is unsafe and means your "\
                "layer configuration is adding empty elements to BBPATH.\n\t "\
                "Please check your layer.conf files and other BBPATH "        \
                "settings to remove the current working directory "           \
                "references.\n" \
                "Parsed BBPATH is" + str(bbpaths));

    oes_bb_conf = d.getVar( 'OES_BITBAKE_CONF')
    if not oes_bb_conf:
        status.addresult('You are not using the OpenEmbedded version of conf/bitbake.conf. This means your environment is misconfigured, in particular check BBPATH.\n')

    # The length of TMPDIR can't be longer than 410
    status.addresult(check_path_length(tmpdir, "TMPDIR", 410))

    # Check that TMPDIR isn't located on nfs
    status.addresult(check_not_nfs(tmpdir, "TMPDIR"))

    # Check for case-insensitive file systems (such as Linux in Docker on
    # macOS with default HFS+ file system)
    status.addresult(check_case_sensitive(tmpdir, "TMPDIR"))
}


python check_supported_distro () {
def check_supported_distro(sanity_data):
    from fnmatch import fnmatch

    tested_distros = sanity_data.getVar('SANITY_TESTED_DISTROS')
    if not tested_distros:
        return

    try:
        distro = oe.lsb.distro_identifier()
    except Exception:
        distro = None

    if not distro:
        bb.warn('Host distribution could not be determined; you may possibly experience unexpected failures. It is recommended that you use a tested distribution.')

    for supported in [x.strip() for x in tested_distros.split('\\n')]:
        if fnmatch(distro, supported):
            return

    bb.warn('Host distribution "%s" has not been validated with this version of the build system; you may possibly experience unexpected failures. It is recommended that you use a tested distribution.' % distro)

# Checks we should only make if MACHINE is set correctly}


python check_symlink () {
def check_symlink(lnk, data):
    if os.path.islink(lnk) and not os.path.exists(lnk):
        raise_sanity_error("%s is a broken symlink." % lnk, data)
}


python check_tar_version () {
def check_tar_version(sanity_data):
    from distutils.version import LooseVersion
    import subprocess
    try:
        result = subprocess.check_output(["tar", "--version"], stderr=subprocess.STDOUT).decode('utf-8')
    except subprocess.CalledProcessError as e:
        return "Unable to execute tar --version, exit code %d\n%s\n" % (e.returncode, e.output)
    version = result.split()[3]
    if LooseVersion(version) < LooseVersion("1.24"):
        return "Your version of tar is older than 1.24 and has bugs which will break builds. Please install a newer version of tar (1.28+).\n"
    if LooseVersion(version) < LooseVersion("1.28"):
        return "Your version of tar is older than 1.28 and does not have the support needed to enable reproducible builds. Please install a newer version of tar (you could use the projects buildtools-tarball from our last release).\n"
    return None

# We use git parameters and functionality only found in 1.7.8 or later
# The kernel tools assume git >= 1.8.3.1 (verified needed > 1.7.9.5) see #6162
# The git fetcher also had workarounds for git < 1.7.9.2 which we've dropped}


python check_toolchain () {
def check_toolchain(data):
    tune_error_set = []
    deftune = data.getVar("DEFAULTTUNE")
    tune_errors = check_toolchain_tune(data, deftune, 'default')
    if tune_errors:
        tune_error_set.append(tune_errors)

    multilibs = (data.getVar("MULTILIB_VARIANTS") or "").split()
    global_multilibs = (data.getVar("MULTILIB_GLOBAL_VARIANTS") or "").split()

    if multilibs:
        seen_libs = []
        seen_tunes = []
        for lib in multilibs:
            if lib in seen_libs:
                tune_error_set.append("The multilib '%s' appears more than once." % lib)
            else:
                seen_libs.append(lib)
            if not lib in global_multilibs:
                tune_error_set.append("Multilib %s is not present in MULTILIB_GLOBAL_VARIANTS" % lib)
            tune = data.getVar("DEFAULTTUNE_virtclass-multilib-%s" % lib)
            if tune in seen_tunes:
                tune_error_set.append("The tuning '%s' appears in more than one multilib." % tune)
            else:
                seen_libs.append(tune)
            if tune == deftune:
                tune_error_set.append("Multilib '%s' (%s) is also the default tuning." % (lib, deftune))
            else:
                tune_errors = check_toolchain_tune(data, tune, lib)
            if tune_errors:
                tune_error_set.append(tune_errors)
    if tune_error_set:
        return "Toolchain tunings invalid:\n" + '\n'.join(tune_error_set) + "\n"

    return ""
}


python check_toolchain_args_present () {
def check_toolchain_args_present(data, tune, multilib, tune_errors, which):
    args_set = (data.getVar("TUNE_%s" % which) or "").split()
    args_wanted = (data.getVar("TUNEABI_REQUIRED_%s_tune-%s" % (which, tune)) or "").split()
    args_missing = []

    # If no args are listed/required, we are done.
    if not args_wanted:
        return
    for arg in args_wanted:
        if arg not in args_set:
            args_missing.append(arg)

    found_errors = False
    if args_missing:
        found_errors = True
        tune_errors.append("TUNEABI for %s requires '%s' in TUNE_%s (%s)." %
                       (tune, ' '.join(args_missing), which, ' '.join(args_set)))
    return found_errors

# Check a single tune for validity.}


python check_toolchain_tune () {
def check_toolchain_tune(data, tune, multilib):
    tune_errors = []
    if not tune:
        return "No tuning found for %s multilib." % multilib
    localdata = bb.data.createCopy(data)
    if multilib != "default":
        # Apply the overrides so we can look at the details.
        overrides = localdata.getVar("OVERRIDES", False) + ":virtclass-multilib-" + multilib
        localdata.setVar("OVERRIDES", overrides)
    bb.debug(2, "Sanity-checking tuning '%s' (%s) features:" % (tune, multilib))
    features = (localdata.getVar("TUNE_FEATURES_tune-%s" % tune) or "").split()
    if not features:
        return "Tuning '%s' has no defined features, and cannot be used." % tune
    valid_tunes = localdata.getVarFlags('TUNEVALID') or {}
    conflicts = localdata.getVarFlags('TUNECONFLICTS') or {}
    # [doc] is the documentation for the variable, not a real feature
    if 'doc' in valid_tunes:
        del valid_tunes['doc']
    if 'doc' in conflicts:
        del conflicts['doc']
    for feature in features:
        if feature in conflicts:
            for conflict in conflicts[feature].split():
                if conflict in features:
                    tune_errors.append("Feature '%s' conflicts with '%s'." %
                        (feature, conflict))
        if feature in valid_tunes:
            bb.debug(2, "  %s: %s" % (feature, valid_tunes[feature]))
        else:
            tune_errors.append("Feature '%s' is not defined." % feature)
    whitelist = localdata.getVar("TUNEABI_WHITELIST")
    if whitelist:
        tuneabi = localdata.getVar("TUNEABI_tune-%s" % tune)
        if not tuneabi:
            tuneabi = tune
        if True not in [x in whitelist.split() for x in tuneabi.split()]:
            tune_errors.append("Tuning '%s' (%s) cannot be used with any supported tuning/ABI." %
                (tune, tuneabi))
        else:
            if not check_toolchain_tune_args(localdata, tuneabi, multilib, tune_errors):
                bb.debug(2, "Sanity check: Compiler args OK for %s." % tune)
    if tune_errors:
        return "Tuning '%s' has the following errors:\n" % tune + '\n'.join(tune_errors)
}


python check_toolchain_tune_args () {
def check_toolchain_tune_args(data, tune, multilib, errs):
    found_errors = False
    if check_toolchain_args_present(data, tune, multilib, errs, 'CCARGS'):
        found_errors = True
    if check_toolchain_args_present(data, tune, multilib, errs, 'ASARGS'):
        found_errors = True
    if check_toolchain_args_present(data, tune, multilib, errs, 'LDARGS'):
        found_errors = True

    return found_errors
}


python check_wsl () {
def check_wsl(d):
    with open("/proc/version", "r") as f:
        verdata = f.readlines()
    for l in verdata:
        if "Microsoft" in l:
            return "OpenEmbedded doesn't work under WSL at this time, sorry"
    return None

# Tar version 1.24 and onwards handle overwriting symlinks correctly
# but earlier versions do not; this needs to work properly for sstate
# Version 1.28 is needed so opkg-build works correctly when reproducibile builds are enabled}


python checkbuildpath () {
def checkbuildpath(file, d):
    tmpdir = d.getVar('TMPDIR')
    with open(file) as f:
        file_content = f.read()
        if tmpdir in file_content:
            return True

    return False
}


python config_reparse_eventhandler () {
    sanity_check_conffiles(e.data)
}


python copy_data () {
def copy_data(e):
    sanity_data = bb.data.createCopy(e.data)
    sanity_data.finalize()
    return sanity_data
}


python copy_license_files () {
def copy_license_files(lic_files_paths, destdir):
    import shutil
    import errno

    bb.utils.mkdirhier(destdir)
    for (basename, path, beginline, endline) in lic_files_paths:
        try:
            src = path
            dst = os.path.join(destdir, basename)
            if os.path.exists(dst):
                os.remove(dst)
            if os.path.islink(src):
                src = os.path.realpath(src)
            canlink = os.access(src, os.W_OK) and (os.stat(src).st_dev == os.stat(destdir).st_dev) and beginline is None and endline is None
            if canlink:
                try:
                    os.link(src, dst)
                except OSError as err:
                    if err.errno == errno.EXDEV:
                        # Copy license files if hard-link is not possible even if st_dev is the
                        # same on source and destination (docker container with device-mapper?)
                        canlink = False
                    else:
                        raise
                # Only chown if we did hardling, and, we're running under pseudo
                if canlink and os.environ.get('PSEUDO_DISABLED') == '0':
                    os.chown(dst,0,0)
            if not canlink:
                begin_idx = int(beginline)-1 if beginline is not None else None
                end_idx = int(endline) if endline is not None else None
                if begin_idx is None and end_idx is None:
                    shutil.copyfile(src, dst)
                else:
                    with open(src, 'rb') as src_f:
                        with open(dst, 'wb') as dst_f:
                            dst_f.write(b''.join(src_f.readlines()[begin_idx:end_idx]))

        except Exception as e:
            bb.warn("Could not copy license file %s to %s: %s" % (src, dst, e))
}


python copydebugsources () {
def copydebugsources(debugsrcdir, sources, d):
    # The debug src information written out to sourcefile is further processed
    # and copied to the destination here.

    import stat
    import subprocess

    if debugsrcdir and sources:
        sourcefile = d.expand("${WORKDIR}/debugsources.list")
        bb.utils.remove(sourcefile)

        # filenames are null-separated - this is an artefact of the previous use
        # of rpm's debugedit, which was writing them out that way, and the code elsewhere
        # is still assuming that.
        debuglistoutput = '\0'.join(sources) + '\0'
        with open(sourcefile, 'a') as sf:
           sf.write(debuglistoutput)

        dvar = d.getVar('PKGD')
        strip = d.getVar("STRIP")
        objcopy = d.getVar("OBJCOPY")
        workdir = d.getVar("WORKDIR")
        workparentdir = os.path.dirname(os.path.dirname(workdir))
        workbasedir = os.path.basename(os.path.dirname(workdir)) + "/" + os.path.basename(workdir)

        # If build path exists in sourcefile, it means toolchain did not use
        # -fdebug-prefix-map to compile
        if checkbuildpath(sourcefile, d):
            localsrc_prefix = workparentdir + "/"
        else:
            localsrc_prefix = "/usr/src/debug/"

        nosuchdir = []
        basepath = dvar
        for p in debugsrcdir.split("/"):
            basepath = basepath + "/" + p
            if not cpath.exists(basepath):
                nosuchdir.append(basepath)
        bb.utils.mkdirhier(basepath)
        cpath.updatecache(basepath)

        # Ignore files from the recipe sysroots (target and native)
        processdebugsrc =  "LC_ALL=C ; sort -z -u '%s' | egrep -v -z '((<internal>|<built-in>)$|/.*recipe-sysroot.*/)' | "
        # We need to ignore files that are not actually ours
        # we do this by only paying attention to items from this package
        processdebugsrc += "fgrep -zw '%s' | "
        # Remove prefix in the source paths
        processdebugsrc += "sed 's#%s##g' | "
        processdebugsrc += "(cd '%s' ; cpio -pd0mlL --no-preserve-owner '%s%s' 2>/dev/null)"

        cmd = processdebugsrc % (sourcefile, workbasedir, localsrc_prefix, workparentdir, dvar, debugsrcdir)
        try:
            subprocess.check_output(cmd, shell=True, stderr=subprocess.STDOUT)
        except subprocess.CalledProcessError:
            # Can "fail" if internal headers/transient sources are attempted
            pass

        # cpio seems to have a bug with -lL together and symbolic links are just copied, not dereferenced.
        # Work around this by manually finding and copying any symbolic links that made it through.
        cmd = "find %s%s -type l -print0 -delete | sed s#%s%s/##g | (cd '%s' ; cpio -pd0mL --no-preserve-owner '%s%s')" % \
                (dvar, debugsrcdir, dvar, debugsrcdir, workparentdir, dvar, debugsrcdir)
        subprocess.check_output(cmd, shell=True, stderr=subprocess.STDOUT)

        # The copy by cpio may have resulted in some empty directories!  Remove these
        cmd = "find %s%s -empty -type d -delete" % (dvar, debugsrcdir)
        subprocess.check_output(cmd, shell=True, stderr=subprocess.STDOUT)

        # Also remove debugsrcdir if its empty
        for p in nosuchdir[::-1]:
            if os.path.exists(p) and not os.listdir(p):
                os.rmdir(p)

#
# Package data handling routines
#
}


python debian_package_name_hook () {
    import glob, copy, stat, errno, re, pathlib, subprocess

    pkgdest = d.getVar("PKGDEST")
    packages = d.getVar('PACKAGES')
    so_re = re.compile(r"lib.*\.so")

    def socrunch(s):
        s = s.lower().replace('_', '-')
        m = re.match(r"^(.*)(.)\.so\.(.*)$", s)
        if m is None:
            return None
        if m.group(2) in '0123456789':
            bin = '%s%s-%s' % (m.group(1), m.group(2), m.group(3))
        else:
            bin = m.group(1) + m.group(2) + m.group(3)
        dev = m.group(1) + m.group(2)
        return (bin, dev)

    def isexec(path):
        try:
            s = os.stat(path)
        except (os.error, AttributeError):
            return 0
        return (s[stat.ST_MODE] & stat.S_IEXEC)

    def add_rprovides(pkg, d):
        newpkg = d.getVar('PKG_' + pkg)
        if newpkg and newpkg != pkg:
            provs = (d.getVar('RPROVIDES_' + pkg) or "").split()
            if pkg not in provs:
                d.appendVar('RPROVIDES_' + pkg, " " + pkg + " (=" + d.getVar("PKGV") + ")")

    def auto_libname(packages, orig_pkg):
        p = lambda var: pathlib.PurePath(d.getVar(var))
        libdirs = (p("base_libdir"), p("libdir"))
        bindirs = (p("base_bindir"), p("base_sbindir"), p("bindir"), p("sbindir"))

        sonames = []
        has_bins = 0
        has_libs = 0
        for f in pkgfiles[orig_pkg]:
            # This is .../packages-split/orig_pkg/
            pkgpath = pathlib.PurePath(pkgdest, orig_pkg)
            # Strip pkgpath off the full path to a file in the package, re-root
            # so it is absolute, and then get the parent directory of the file.
            path = pathlib.PurePath("/") / (pathlib.PurePath(f).relative_to(pkgpath).parent)
            if path in bindirs:
                has_bins = 1
            if path in libdirs:
                has_libs = 1
                if so_re.match(os.path.basename(f)):
                    try:
                        cmd = [d.expand("${TARGET_PREFIX}objdump"), "-p", f]
                        output = subprocess.check_output(cmd).decode("utf-8")
                        for m in re.finditer(r"\s+SONAME\s+([^\s]+)", output):
                            if m.group(1) not in sonames:
                                sonames.append(m.group(1))
                    except subprocess.CalledProcessError:
                        pass
        bb.debug(1, 'LIBNAMES: pkg %s libs %d bins %d sonames %s' % (orig_pkg, has_libs, has_bins, sonames))
        soname = None
        if len(sonames) == 1:
            soname = sonames[0]
        elif len(sonames) > 1:
            lead = d.getVar('LEAD_SONAME')
            if lead:
                r = re.compile(lead)
                filtered = []
                for s in sonames:
                    if r.match(s):
                        filtered.append(s)
                if len(filtered) == 1:
                    soname = filtered[0]
                elif len(filtered) > 1:
                    bb.note("Multiple matches (%s) for LEAD_SONAME '%s'" % (", ".join(filtered), lead))
                else:
                    bb.note("Multiple libraries (%s) found, but LEAD_SONAME '%s' doesn't match any of them" % (", ".join(sonames), lead))
            else:
                bb.note("Multiple libraries (%s) found and LEAD_SONAME not defined" % ", ".join(sonames))

        if has_libs and not has_bins and soname:
            soname_result = socrunch(soname)
            if soname_result:
                (pkgname, devname) = soname_result
                for pkg in packages.split():
                    if (d.getVar('PKG_' + pkg, False) or d.getVar('DEBIAN_NOAUTONAME_' + pkg, False)):
                        add_rprovides(pkg, d)
                        continue
                    debian_pn = d.getVar('DEBIANNAME_' + pkg, False)
                    if debian_pn:
                        newpkg = debian_pn
                    elif pkg == orig_pkg:
                        newpkg = pkgname
                    else:
                        newpkg = pkg.replace(orig_pkg, devname, 1)
                    mlpre=d.getVar('MLPREFIX')
                    if mlpre:
                        if not newpkg.find(mlpre) == 0:
                            newpkg = mlpre + newpkg
                    if newpkg != pkg:
                        bb.note("debian: renaming %s to %s" % (pkg, newpkg))
                        d.setVar('PKG_' + pkg, newpkg)
                        add_rprovides(pkg, d)
        else:
            add_rprovides(orig_pkg, d)

    # reversed sort is needed when some package is substring of another
    # ie in ncurses we get without reverse sort:
    # DEBUG: LIBNAMES: pkgname libtic5 devname libtic pkg ncurses-libtic orig_pkg ncurses-libtic debian_pn None newpkg libtic5
    # and later
    # DEBUG: LIBNAMES: pkgname libtic5 devname libtic pkg ncurses-libticw orig_pkg ncurses-libtic debian_pn None newpkg libticw
    # so we need to handle ncurses-libticw->libticw5 before ncurses-libtic->libtic5
    for pkg in sorted((d.getVar('AUTO_LIBNAME_PKGS') or "").split(), reverse=True):
        auto_libname(packages, pkg)
}


python devpyshell () {
def devpyshell(d):

    import code
    import select
    import signal
    import termios

    m, s = os.openpty()
    sname = os.ttyname(s)

    def noechoicanon(fd):
        old = termios.tcgetattr(fd)
        old[3] = old[3] &~ termios.ECHO &~ termios.ICANON
        # &~ termios.ISIG
        termios.tcsetattr(fd, termios.TCSADRAIN, old)

    # No echo or buffering over the pty
    noechoicanon(s)

    pid = os.fork()
    if pid:
        os.close(m)
        oe_terminal("oepydevshell-internal.py %s %d" % (sname, pid), 'OpenEmbedded Developer PyShell', d)
        os._exit(0)
    else:
        os.close(s)

        os.dup2(m, sys.stdin.fileno())
        os.dup2(m, sys.stdout.fileno())
        os.dup2(m, sys.stderr.fileno())

        bb.utils.nonblockingfd(sys.stdout)
        bb.utils.nonblockingfd(sys.stderr)
        bb.utils.nonblockingfd(sys.stdin)

        _context = {
            "os": os,
            "bb": bb,
            "time": time,
            "d": d,
        }

        ps1 = "pydevshell> "
        ps2 = "... "
        buf = []
        more = False

        i = code.InteractiveInterpreter(locals=_context)
        print("OE PyShell (PN = %s)\n" % d.getVar("PN"))

        def prompt(more):
            if more:
                prompt = ps2
            else:
                prompt = ps1
            sys.stdout.write(prompt)
            sys.stdout.flush()

        # Restore Ctrl+C since bitbake masks this
        def signal_handler(signal, frame):
            raise KeyboardInterrupt
        signal.signal(signal.SIGINT, signal_handler)

        child = None

        prompt(more)
        while True:
            try:
                try:
                    (r, _, _) = select.select([sys.stdin], [], [], 1)
                    if not r:
                        continue
                    line = sys.stdin.readline().strip()
                    if not line:
                        prompt(more)
                        continue
                except EOFError as e:
                    sys.stdout.write("\n")
                    sys.stdout.flush()
                except (OSError, IOError) as e:
                    if e.errno == 11:
                        continue
                    if e.errno == 5:
                        return
                    raise
                else:
                    if not child:
                        child = int(line)
                        continue
                    buf.append(line)
                    source = "\n".join(buf)
                    more = i.runsource(source, "<pyshell>")
                    if not more:
                        buf = []
                    prompt(more)
            except KeyboardInterrupt:
                i.write("\nKeyboardInterrupt\n")
                buf = []
                more = False
                prompt(more)
            except SystemExit:
                # Easiest way to ensure everything exits
                os.kill(child, signal.SIGTERM)
                break
}


python do_checkuri () {
    src_uri = (d.getVar('SRC_URI') or "").split()
    if len(src_uri) == 0:
        return

    try:
        fetcher = bb.fetch2.Fetch(src_uri, d)
        fetcher.checkstatus()
    except bb.fetch2.BBFetchException as e:
        bb.fatal(str(e))
}


python do_clean () {
    """clear the build and temp directories"""
    dir = d.expand("${WORKDIR}")
    bb.note("Removing " + dir)
    oe.path.remove(dir)

    dir = "%s.*" % d.getVar('STAMP')
    bb.note("Removing " + dir)
    oe.path.remove(dir)

    for f in (d.getVar('CLEANFUNCS') or '').split():
        bb.build.exec_func(f, d)
}


python do_cleanall () {
    src_uri = (d.getVar('SRC_URI') or "").split()
    if len(src_uri) == 0:
        return

    try:
        fetcher = bb.fetch2.Fetch(src_uri, d)
        fetcher.clean()
    except bb.fetch2.BBFetchException as e:
        bb.fatal(str(e))
}


python do_cleansstate () {
        sstate_clean_cachefiles(d)
}


python do_devpyshell () {
    import signal

    try:
        devpyshell(d)
    except SystemExit:
        # Stop the SIGTERM above causing an error exit code
        return
    finally:
        return
}


python do_devshell () {
    if d.getVarFlag("do_devshell", "manualfakeroot"):
       d.prependVar("DEVSHELL", "pseudo ")
       fakeenv = d.getVar("FAKEROOTENV").split()
       for f in fakeenv:
            k = f.split("=")
            d.setVar(k[0], k[1])
            d.appendVar("OE_TERMINAL_EXPORTS", " " + k[0])
       d.delVarFlag("do_devshell", "fakeroot")

    oe_terminal(d.getVar('DEVSHELL'), 'OpenEmbedded Developer Shell', d)
}


python do_fetch () {
    bb.build.exec_func('base_do_fetch', d)
}


python do_listtasks () {
    taskdescs = {}
    maxlen = 0
    for e in d.keys():
        if d.getVarFlag(e, 'task'):
            maxlen = max(maxlen, len(e))
            if e.endswith('_setscene'):
                desc = "%s (setscene version)" % (d.getVarFlag(e[:-9], 'doc') or '')
            else:
                desc = d.getVarFlag(e, 'doc') or ''
            taskdescs[e] = desc

    tasks = sorted(taskdescs.keys())
    for taskname in tasks:
        bb.plain("%s  %s" % (taskname.ljust(maxlen), taskdescs[taskname]))
}


python do_package () {
    # Change the following version to cause sstate to invalidate the package
    # cache.  This is useful if an item this class depends on changes in a
    # way that the output of this class changes.  rpmdeps is a good example
    # as any change to rpmdeps requires this to be rerun.
    # PACKAGE_BBCLASS_VERSION = "2"

    # Init cachedpath
    global cpath
    cpath = oe.cachedpath.CachedPath()

    ###########################################################################
    # Sanity test the setup
    ###########################################################################

    packages = (d.getVar('PACKAGES') or "").split()
    if len(packages) < 1:
        bb.debug(1, "No packages to build, skipping do_package")
        return

    workdir = d.getVar('WORKDIR')
    outdir = d.getVar('DEPLOY_DIR')
    dest = d.getVar('D')
    dvar = d.getVar('PKGD')
    pn = d.getVar('PN')

    if not workdir or not outdir or not dest or not dvar or not pn:
        msg = "WORKDIR, DEPLOY_DIR, D, PN and PKGD all must be defined, unable to package"
        package_qa_handle_error("var-undefined", msg, d)
        return

    bb.build.exec_func("package_get_auto_pr", d)

    ###########################################################################
    # Optimisations
    ###########################################################################

    # Continually expanding complex expressions is inefficient, particularly
    # when we write to the datastore and invalidate the expansion cache. This
    # code pre-expands some frequently used variables

    def expandVar(x, d):
        d.setVar(x, d.getVar(x))

    for x in 'PN', 'PV', 'BPN', 'TARGET_SYS', 'EXTENDPRAUTO':
        expandVar(x, d)

    ###########################################################################
    # Setup PKGD (from D)
    ###########################################################################

    for f in (d.getVar('PACKAGEBUILDPKGD') or '').split():
        bb.build.exec_func(f, d)

    ###########################################################################
    # Split up PKGD into PKGDEST
    ###########################################################################

    cpath = oe.cachedpath.CachedPath()

    for f in (d.getVar('PACKAGESPLITFUNCS') or '').split():
        bb.build.exec_func(f, d)

    ###########################################################################
    # Process PKGDEST
    ###########################################################################

    # Build global list of files in each split package
    global pkgfiles
    pkgfiles = {}
    packages = d.getVar('PACKAGES').split()
    pkgdest = d.getVar('PKGDEST')
    for pkg in packages:
        pkgfiles[pkg] = []
        for walkroot, dirs, files in cpath.walk(pkgdest + "/" + pkg):
            for file in files:
                pkgfiles[pkg].append(walkroot + os.sep + file)

    for f in (d.getVar('PACKAGEFUNCS') or '').split():
        bb.build.exec_func(f, d)

    qa_sane = d.getVar("QA_SANE")
    if not qa_sane:
        bb.fatal("Fatal QA errors found, failing task.")
}


python do_package_ipk () {
    workdir = d.getVar('WORKDIR')
    outdir = d.getVar('PKGWRITEDIRIPK')
    tmpdir = d.getVar('TMPDIR')
    pkgdest = d.getVar('PKGDEST')
    if not workdir or not outdir or not tmpdir:
        bb.error("Variables incorrectly set, unable to package")
        return

    packages = d.getVar('PACKAGES')
    if not packages or packages == '':
        bb.debug(1, "No packages; nothing to do")
        return

    # We're about to add new packages so the index needs to be checked
    # so remove the appropriate stamp file.
    if os.access(os.path.join(tmpdir, "stamps", "IPK_PACKAGE_INDEX_CLEAN"), os.R_OK):
        os.unlink(os.path.join(tmpdir, "stamps", "IPK_PACKAGE_INDEX_CLEAN"))

    oe.utils.multiprocess_launch(ipk_write_pkg, packages.split(), d, extraargs=(d,))
}


python do_package_qa () {
    import subprocess
    import oe.packagedata

    bb.note("DO PACKAGE QA")

    bb.build.exec_func("read_subpackage_metadata", d)

    # Check non UTF-8 characters on recipe's metadata
    package_qa_check_encoding(['DESCRIPTION', 'SUMMARY', 'LICENSE', 'SECTION'], 'utf-8', d)

    logdir = d.getVar('T')
    pn = d.getVar('PN')

    # Check the compile log for host contamination
    compilelog = os.path.join(logdir,"log.do_compile")

    if os.path.exists(compilelog):
        statement = "grep -e 'CROSS COMPILE Badness:' -e 'is unsafe for cross-compilation' %s > /dev/null" % compilelog
        if subprocess.call(statement, shell=True) == 0:
            msg = "%s: The compile log indicates that host include and/or library paths were used.\n \
        Please check the log '%s' for more information." % (pn, compilelog)
            package_qa_handle_error("compile-host-path", msg, d)

    # Check the install log for host contamination
    installlog = os.path.join(logdir,"log.do_install")

    if os.path.exists(installlog):
        statement = "grep -e 'CROSS COMPILE Badness:' -e 'is unsafe for cross-compilation' %s > /dev/null" % installlog
        if subprocess.call(statement, shell=True) == 0:
            msg = "%s: The install log indicates that host include and/or library paths were used.\n \
        Please check the log '%s' for more information." % (pn, installlog)
            package_qa_handle_error("install-host-path", msg, d)

    # Scan the packages...
    pkgdest = d.getVar('PKGDEST')
    packages = set((d.getVar('PACKAGES') or '').split())

    cpath = oe.cachedpath.CachedPath()
    global pkgfiles
    pkgfiles = {}
    for pkg in packages:
        pkgfiles[pkg] = []
        for walkroot, dirs, files in cpath.walk(pkgdest + "/" + pkg):
            for file in files:
                pkgfiles[pkg].append(walkroot + os.sep + file)

    # no packages should be scanned
    if not packages:
        return

    import re
    # The package name matches the [a-z0-9.+-]+ regular expression
    pkgname_pattern = re.compile(r"^[a-z0-9.+-]+$")

    taskdepdata = d.getVar("BB_TASKDEPDATA", False)
    taskdeps = set()
    for dep in taskdepdata:
        taskdeps.add(taskdepdata[dep][0])

    def parse_test_matrix(matrix_name):
        testmatrix = d.getVarFlags(matrix_name) or {}
        g = globals()
        warnchecks = []
        for w in (d.getVar("WARN_QA") or "").split():
            if w in skip:
               continue
            if w in testmatrix and testmatrix[w] in g:
                warnchecks.append(g[testmatrix[w]])

        errorchecks = []
        for e in (d.getVar("ERROR_QA") or "").split():
            if e in skip:
               continue
            if e in testmatrix and testmatrix[e] in g:
                errorchecks.append(g[testmatrix[e]])
        return warnchecks, errorchecks

    for package in packages:
        skip = set((d.getVar('INSANE_SKIP') or "").split() +
                   (d.getVar('INSANE_SKIP_' + package) or "").split())
        if skip:
            bb.note("Package %s skipping QA tests: %s" % (package, str(skip)))

        bb.note("Checking Package: %s" % package)
        # Check package name
        if not pkgname_pattern.match(package):
            package_qa_handle_error("pkgname",
                    "%s doesn't match the [a-z0-9.+-]+ regex" % package, d)

        warn_checks, error_checks = parse_test_matrix("QAPATHTEST")
        package_qa_walk(warn_checks, error_checks, package, d)

        warn_checks, error_checks = parse_test_matrix("QAPKGTEST")
        package_qa_package(warn_checks, error_checks, package, d)

        package_qa_check_rdepends(package, pkgdest, skip, taskdeps, packages, d)
        package_qa_check_deps(package, pkgdest, d)

    warn_checks, error_checks = parse_test_matrix("QARECIPETEST")
    package_qa_recipe(warn_checks, error_checks, pn, d)

    if 'libdir' in d.getVar("ALL_QA").split():
        package_qa_check_libdir(d)

    qa_sane = d.getVar("QA_SANE")
    if not qa_sane:
        bb.fatal("QA run found fatal errors. Please consider fixing them.")
    bb.note("DONE with PACKAGE QA")
}


python do_package_qa_setscene () {
    sstate_setscene(d)
}


python do_package_setscene () {
    sstate_setscene(d)
}


python do_package_write_ipk () {
    bb.build.exec_func("read_subpackage_metadata", d)
    bb.build.exec_func("do_package_ipk", d)
}


python do_package_write_ipk_setscene () {
    tmpdir = d.getVar('TMPDIR')

    if os.access(os.path.join(tmpdir, "stamps", "IPK_PACKAGE_INDEX_CLEAN"), os.R_OK):
        os.unlink(os.path.join(tmpdir, "stamps", "IPK_PACKAGE_INDEX_CLEAN"))

    sstate_setscene(d)
}


python do_packagedata () {
    src = d.expand("${PKGDESTWORK}")
    dest = d.expand("${WORKDIR}/pkgdata-pdata-input")
    oe.path.copyhardlinktree(src, dest)
}


python do_packagedata_setscene () {
    sstate_setscene(d)
}


python do_patch () {
    bb.build.exec_func('patch_do_patch', d)
}


python do_populate_lic () {
    """
    Populate LICENSE_DIRECTORY with licenses.
    """
    lic_files_paths = find_license_files(d)

    # The base directory we wrangle licenses to
    destdir = os.path.join(d.getVar('LICSSTATEDIR'), d.getVar('PN'))
    copy_license_files(lic_files_paths, destdir)
    info = get_recipe_info(d)
    with open(os.path.join(destdir, "recipeinfo"), "w") as f:
        for key in sorted(info.keys()):
            f.write("%s: %s\n" % (key, info[key]))
}


python do_populate_lic_setscene () {
    sstate_setscene(d)
}


python do_populate_sysroot () {
    bb.build.exec_func("sysroot_stage_all", d)
    bb.build.exec_func("sysroot_strip", d)
    for f in (d.getVar('SYSROOT_PREPROCESS_FUNCS') or '').split():
        bb.build.exec_func(f, d)
    pn = d.getVar("PN")
    multiprov = d.getVar("MULTI_PROVIDER_WHITELIST").split()
    provdir = d.expand("${SYSROOT_DESTDIR}${base_prefix}/sysroot-providers/")
    bb.utils.mkdirhier(provdir)
    for p in d.getVar("PROVIDES").split():
        if p in multiprov:
            continue
        p = p.replace("/", "_")
        with open(provdir + p, "w") as f:
            f.write(pn)
}


python do_populate_sysroot_setscene () {
    sstate_setscene(d)
}


python do_prepare_recipe_sysroot () {
    bb.build.exec_func("extend_recipe_sysroot", d)
}


python do_qa_configure () {
    import subprocess

    ###########################################################################
    # Check config.log for cross compile issues
    ###########################################################################

    configs = []
    workdir = d.getVar('WORKDIR')

    skip = (d.getVar('INSANE_SKIP') or "").split()
    skip_configure_unsafe = False
    if 'configure-unsafe' in skip:
        bb.note("Recipe %s skipping qa checking: configure-unsafe" % d.getVar('PN'))
        skip_configure_unsafe = True

    if bb.data.inherits_class('autotools', d) and not skip_configure_unsafe:
        bb.note("Checking autotools environment for common misconfiguration")
        for root, dirs, files in os.walk(workdir):
            statement = "grep -q -F -e 'CROSS COMPILE Badness:' -e 'is unsafe for cross-compilation' %s" % \
                        os.path.join(root,"config.log")
            if "config.log" in files:
                if subprocess.call(statement, shell=True) == 0:
                    error_msg = """This autoconf log indicates errors, it looked at host include and/or library paths while determining system capabilities.
Rerun configure task after fixing this."""
                    package_qa_handle_error("configure-unsafe", error_msg, d)

            if "configure.ac" in files:
                configs.append(os.path.join(root,"configure.ac"))
            if "configure.in" in files:
                configs.append(os.path.join(root, "configure.in"))

    ###########################################################################
    # Check gettext configuration and dependencies are correct
    ###########################################################################

    skip_configure_gettext = False
    if 'configure-gettext' in skip:
        bb.note("Recipe %s skipping qa checking: configure-gettext" % d.getVar('PN'))
        skip_configure_gettext = True

    cnf = d.getVar('EXTRA_OECONF') or ""
    if not ("gettext" in d.getVar('P') or "gcc-runtime" in d.getVar('P') or \
            "--disable-nls" in cnf or skip_configure_gettext):
        ml = d.getVar("MLPREFIX") or ""
        if bb.data.inherits_class('cross-canadian', d):
            gt = "nativesdk-gettext"
        else:
            gt = "gettext-native"
        deps = bb.utils.explode_deps(d.getVar('DEPENDS') or "")
        if gt not in deps:
            for config in configs:
                gnu = "grep \"^[[:space:]]*AM_GNU_GETTEXT\" %s >/dev/null" % config
                if subprocess.call(gnu, shell=True) == 0:
                    error_msg = "AM_GNU_GETTEXT used but no inherit gettext"
                    package_qa_handle_error("configure-gettext", error_msg, d)

    ###########################################################################
    # Check unrecognised configure options (with a white list)
    ###########################################################################
    if bb.data.inherits_class("autotools", d) or bb.data.inherits_class("meson", d):
        bb.note("Checking configure output for unrecognised options")
        try:
            if bb.data.inherits_class("autotools", d):
                flag = "WARNING: unrecognized options:"
                log = os.path.join(d.getVar('B'), 'config.log')
            if bb.data.inherits_class("meson", d):
                flag = "WARNING: Unknown options:"
                log = os.path.join(d.getVar('T'), 'log.do_configure')
            output = subprocess.check_output(['grep', '-F', flag, log]).decode("utf-8").replace(', ', ' ').replace('"', '')
            options = set()
            for line in output.splitlines():
                options |= set(line.partition(flag)[2].split())
            whitelist = set(d.getVar("UNKNOWN_CONFIGURE_WHITELIST").split())
            options -= whitelist
            if options:
                pn = d.getVar('PN')
                error_msg = pn + ": configure was passed unrecognised options: " + " ".join(options)
                package_qa_handle_error("unknown-configure-option", error_msg, d)
        except subprocess.CalledProcessError:
            pass

    # Check invalid PACKAGECONFIG
    pkgconfig = (d.getVar("PACKAGECONFIG") or "").split()
    if pkgconfig:
        pkgconfigflags = d.getVarFlags("PACKAGECONFIG") or {}
        for pconfig in pkgconfig:
            if pconfig not in pkgconfigflags:
                pn = d.getVar('PN')
                error_msg = "%s: invalid PACKAGECONFIG: %s" % (pn, pconfig)
                package_qa_handle_error("invalid-packageconfig", error_msg, d)

    qa_sane = d.getVar("QA_SANE")
    if not qa_sane:
        bb.fatal("Fatal QA errors found, failing task.")
}


python do_qa_patch () {
    import subprocess

    ###########################################################################
    # Check patch.log for fuzz warnings
    #
    # Further information on why we check for patch fuzz warnings:
    # http://lists.openembedded.org/pipermail/openembedded-core/2018-March/148675.html
    # https://bugzilla.yoctoproject.org/show_bug.cgi?id=10450
    ###########################################################################

    logdir = d.getVar('T')
    patchlog = os.path.join(logdir,"log.do_patch")

    if os.path.exists(patchlog):
        fuzzheader = '--- Patch fuzz start ---'
        fuzzfooter = '--- Patch fuzz end ---'
        statement = "grep -e '%s' %s > /dev/null" % (fuzzheader, patchlog)
        if subprocess.call(statement, shell=True) == 0:
            msg = "Fuzz detected:\n\n"
            fuzzmsg = ""
            inFuzzInfo = False
            f = open(patchlog, "r")
            for line in f:
                if fuzzheader in line:
                    inFuzzInfo = True
                    fuzzmsg = ""
                elif fuzzfooter in line:
                    fuzzmsg = fuzzmsg.replace('\n\n', '\n')
                    msg += fuzzmsg
                    msg += "\n"
                    inFuzzInfo = False
                elif inFuzzInfo and not 'Now at patch' in line:
                    fuzzmsg += line
            f.close()
            msg += "The context lines in the patches can be updated with devtool:\n"
            msg += "\n"
            msg += "    devtool modify %s\n" % d.getVar('PN')
            msg += "    devtool finish --force-patch-refresh %s <layer_path>\n\n" % d.getVar('PN')
            msg += "Don't forget to review changes done by devtool!\n"
            if 'patch-fuzz' in d.getVar('ERROR_QA'):
                bb.error(msg)
            elif 'patch-fuzz' in d.getVar('WARN_QA'):
                bb.warn(msg)
            msg = "Patch log indicates that patches do not apply cleanly."
            package_qa_handle_error("patch-fuzz", msg, d)
}


python do_qa_staging () {
    bb.note("QA checking staging")
    if not qa_check_staged(d.expand('${SYSROOT_DESTDIR}${libdir}'), d):
        bb.fatal("QA staging was broken by the package built above")
}


python do_qa_unpack () {
    src_uri = d.getVar('SRC_URI')
    s_dir = d.getVar('S')
    if src_uri and not os.path.exists(s_dir):
        bb.warn('%s: the directory %s (%s) pointed to by the S variable doesn\'t exist - please set S within the recipe to point to where the source has been unpacked to' % (d.getVar('PN'), d.getVar('S', False), s_dir))
}


python do_split_packages () {
def do_split_packages(d, root, file_regex, output_pattern, description, postinst=None, recursive=False, hook=None, extra_depends=None, aux_files_pattern=None, postrm=None, allow_dirs=False, prepend=False, match_path=False, aux_files_pattern_verbatim=None, allow_links=False, summary=None):
    """
    Used in .bb files to split up dynamically generated subpackages of a
    given package, usually plugins or modules.

    Arguments:
    root           -- the path in which to search
    file_regex     -- regular expression to match searched files. Use
                      parentheses () to mark the part of this expression
                      that should be used to derive the module name (to be
                      substituted where %s is used in other function
                      arguments as noted below)
    output_pattern -- pattern to use for the package names. Must include %s.
    description    -- description to set for each package. Must include %s.
    postinst       -- postinstall script to use for all packages (as a
                      string)
    recursive      -- True to perform a recursive search - default False
    hook           -- a hook function to be called for every match. The
                      function will be called with the following arguments
                      (in the order listed):
                        f: full path to the file/directory match
                        pkg: the package name
                        file_regex: as above
                        output_pattern: as above
                        modulename: the module name derived using file_regex
    extra_depends  -- extra runtime dependencies (RDEPENDS) to be set for
                      all packages. The default value of None causes a
                      dependency on the main package (${PN}) - if you do
                      not want this, pass '' for this parameter.
    aux_files_pattern -- extra item(s) to be added to FILES for each
                      package. Can be a single string item or a list of
                      strings for multiple items.  Must include %s.
    postrm         -- postrm script to use for all packages (as a string)
    allow_dirs     -- True allow directories to be matched - default False
    prepend        -- if True, prepend created packages to PACKAGES instead
                      of the default False which appends them
    match_path     -- match file_regex on the whole relative path to the
                      root rather than just the file name
    aux_files_pattern_verbatim -- extra item(s) to be added to FILES for
                      each package, using the actual derived module name
                      rather than converting it to something legal for a
                      package name. Can be a single string item or a list
                      of strings for multiple items. Must include %s.
    allow_links    -- True to allow symlinks to be matched - default False
    summary        -- Summary to set for each package. Must include %s;
                      defaults to description if not set.

    """

    dvar = d.getVar('PKGD')
    root = d.expand(root)
    output_pattern = d.expand(output_pattern)
    extra_depends = d.expand(extra_depends)

    # If the root directory doesn't exist, don't error out later but silently do
    # no splitting.
    if not os.path.exists(dvar + root):
        return []

    ml = d.getVar("MLPREFIX")
    if ml:
        if not output_pattern.startswith(ml):
            output_pattern = ml + output_pattern

        newdeps = []
        for dep in (extra_depends or "").split():
            if dep.startswith(ml):
                newdeps.append(dep)
            else:
                newdeps.append(ml + dep)
        if newdeps:
            extra_depends = " ".join(newdeps)


    packages = d.getVar('PACKAGES').split()
    split_packages = set()

    if postinst:
        postinst = '#!/bin/sh\n' + postinst + '\n'
    if postrm:
        postrm = '#!/bin/sh\n' + postrm + '\n'
    if not recursive:
        objs = os.listdir(dvar + root)
    else:
        objs = []
        for walkroot, dirs, files in os.walk(dvar + root):
            for file in files:
                relpath = os.path.join(walkroot, file).replace(dvar + root + '/', '', 1)
                if relpath:
                    objs.append(relpath)

    if extra_depends == None:
        extra_depends = d.getVar("PN")

    if not summary:
        summary = description

    for o in sorted(objs):
        import re, stat
        if match_path:
            m = re.match(file_regex, o)
        else:
            m = re.match(file_regex, os.path.basename(o))

        if not m:
            continue
        f = os.path.join(dvar + root, o)
        mode = os.lstat(f).st_mode
        if not (stat.S_ISREG(mode) or (allow_links and stat.S_ISLNK(mode)) or (allow_dirs and stat.S_ISDIR(mode))):
            continue
        on = legitimize_package_name(m.group(1))
        pkg = output_pattern % on
        split_packages.add(pkg)
        if not pkg in packages:
            if prepend:
                packages = [pkg] + packages
            else:
                packages.append(pkg)
        oldfiles = d.getVar('FILES_' + pkg)
        newfile = os.path.join(root, o)
        # These names will be passed through glob() so if the filename actually
        # contains * or ? (rare, but possible) we need to handle that specially
        newfile = newfile.replace('*', '[*]')
        newfile = newfile.replace('?', '[?]')
        if not oldfiles:
            the_files = [newfile]
            if aux_files_pattern:
                if type(aux_files_pattern) is list:
                    for fp in aux_files_pattern:
                        the_files.append(fp % on)
                else:
                    the_files.append(aux_files_pattern % on)
            if aux_files_pattern_verbatim:
                if type(aux_files_pattern_verbatim) is list:
                    for fp in aux_files_pattern_verbatim:
                        the_files.append(fp % m.group(1))
                else:
                    the_files.append(aux_files_pattern_verbatim % m.group(1))
            d.setVar('FILES_' + pkg, " ".join(the_files))
        else:
            d.setVar('FILES_' + pkg, oldfiles + " " + newfile)
        if extra_depends != '':
            d.appendVar('RDEPENDS_' + pkg, ' ' + extra_depends)
        if not d.getVar('DESCRIPTION_' + pkg):
            d.setVar('DESCRIPTION_' + pkg, description % on)
        if not d.getVar('SUMMARY_' + pkg):
            d.setVar('SUMMARY_' + pkg, summary % on)
        if postinst:
            d.setVar('pkg_postinst_' + pkg, postinst)
        if postrm:
            d.setVar('pkg_postrm_' + pkg, postrm)
        if callable(hook):
            hook(f, pkg, file_regex, output_pattern, m.group(1))

    d.setVar('PACKAGES', ' '.join(packages))
    return list(split_packages)
}


python do_unpack () {
    bb.build.exec_func('base_do_unpack', d)
}


python emit_pkgdata () {
    from glob import glob
    import json

    def process_postinst_on_target(pkg, mlprefix):
        pkgval = d.getVar('PKG_%s' % pkg)
        if pkgval is None:
            pkgval = pkg

        defer_fragment = """
if [ -n "$D" ]; then
    $INTERCEPT_DIR/postinst_intercept delay_to_first_boot %s mlprefix=%s
    exit 0
fi
""" % (pkgval, mlprefix)

        postinst = d.getVar('pkg_postinst_%s' % pkg)
        postinst_ontarget = d.getVar('pkg_postinst_ontarget_%s' % pkg)

        if postinst_ontarget:
            bb.debug(1, 'adding deferred pkg_postinst_ontarget() to pkg_postinst() for %s' % pkg)
            if not postinst:
                postinst = '#!/bin/sh\n'
            postinst += defer_fragment
            postinst += postinst_ontarget
            d.setVar('pkg_postinst_%s' % pkg, postinst)

    def add_set_e_to_scriptlets(pkg):
        for scriptlet_name in ('pkg_preinst', 'pkg_postinst', 'pkg_prerm', 'pkg_postrm'):
            scriptlet = d.getVar('%s_%s' % (scriptlet_name, pkg))
            if scriptlet:
                scriptlet_split = scriptlet.split('\n')
                if scriptlet_split[0].startswith("#!"):
                    scriptlet = scriptlet_split[0] + "\nset -e\n" + "\n".join(scriptlet_split[1:])
                else:
                    scriptlet = "set -e\n" + "\n".join(scriptlet_split[0:])
            d.setVar('%s_%s' % (scriptlet_name, pkg), scriptlet)

    def write_if_exists(f, pkg, var):
        def encode(str):
            import codecs
            c = codecs.getencoder("unicode_escape")
            return c(str)[0].decode("latin1")

        val = d.getVar('%s_%s' % (var, pkg))
        if val:
            f.write('%s_%s: %s\n' % (var, pkg, encode(val)))
            return val
        val = d.getVar('%s' % (var))
        if val:
            f.write('%s: %s\n' % (var, encode(val)))
        return val

    def write_extra_pkgs(variants, pn, packages, pkgdatadir):
        for variant in variants:
            with open("%s/%s-%s" % (pkgdatadir, variant, pn), 'w') as fd:
                fd.write("PACKAGES: %s\n" % ' '.join(
                            map(lambda pkg: '%s-%s' % (variant, pkg), packages.split())))

    def write_extra_runtime_pkgs(variants, packages, pkgdatadir):
        for variant in variants:
            for pkg in packages.split():
                ml_pkg = "%s-%s" % (variant, pkg)
                subdata_file = "%s/runtime/%s" % (pkgdatadir, ml_pkg)
                with open(subdata_file, 'w') as fd:
                    fd.write("PKG_%s: %s" % (ml_pkg, pkg))

    packages = d.getVar('PACKAGES')
    pkgdest = d.getVar('PKGDEST')
    pkgdatadir = d.getVar('PKGDESTWORK')

    data_file = pkgdatadir + d.expand("/${PN}" )
    f = open(data_file, 'w')
    f.write("PACKAGES: %s\n" % packages)
    f.close()

    pn = d.getVar('PN')
    global_variants = (d.getVar('MULTILIB_GLOBAL_VARIANTS') or "").split()
    variants = (d.getVar('MULTILIB_VARIANTS') or "").split()

    if bb.data.inherits_class('kernel', d) or bb.data.inherits_class('module-base', d):
        write_extra_pkgs(variants, pn, packages, pkgdatadir)

    if bb.data.inherits_class('allarch', d) and not variants \
        and not bb.data.inherits_class('packagegroup', d):
        write_extra_pkgs(global_variants, pn, packages, pkgdatadir)

    workdir = d.getVar('WORKDIR')

    for pkg in packages.split():
        pkgval = d.getVar('PKG_%s' % pkg)
        if pkgval is None:
            pkgval = pkg
            d.setVar('PKG_%s' % pkg, pkg)

        pkgdestpkg = os.path.join(pkgdest, pkg)
        files = {}
        total_size = 0
        seen = set()
        for f in pkgfiles[pkg]:
            relpth = os.path.relpath(f, pkgdestpkg)
            fstat = os.lstat(f)
            files[os.sep + relpth] = fstat.st_size
            if fstat.st_ino not in seen:
                seen.add(fstat.st_ino)
                total_size += fstat.st_size
        d.setVar('FILES_INFO', json.dumps(files, sort_keys=True))

        process_postinst_on_target(pkg, d.getVar("MLPREFIX"))
        add_set_e_to_scriptlets(pkg)

        subdata_file = pkgdatadir + "/runtime/%s" % pkg
        with open(subdata_file, 'w') as sf:
            for var in (d.getVar('PKGDATA_VARS') or "").split():
                val = write_if_exists(sf, pkg, var)

            write_if_exists(sf, pkg, 'FILERPROVIDESFLIST')
            for dfile in (d.getVar('FILERPROVIDESFLIST_' + pkg) or "").split():
                write_if_exists(sf, pkg, 'FILERPROVIDES_' + dfile)

            write_if_exists(sf, pkg, 'FILERDEPENDSFLIST')
            for dfile in (d.getVar('FILERDEPENDSFLIST_' + pkg) or "").split():
                write_if_exists(sf, pkg, 'FILERDEPENDS_' + dfile)

            sf.write('%s_%s: %d\n' % ('PKGSIZE', pkg, total_size))

        # Symlinks needed for rprovides lookup
        rprov = d.getVar('RPROVIDES_%s' % pkg) or d.getVar('RPROVIDES')
        if rprov:
            for p in rprov.strip().split():
                subdata_sym = pkgdatadir + "/runtime-rprovides/%s/%s" % (p, pkg)
                bb.utils.mkdirhier(os.path.dirname(subdata_sym))
                oe.path.symlink("../../runtime/%s" % pkg, subdata_sym, True)

        allow_empty = d.getVar('ALLOW_EMPTY_%s' % pkg)
        if not allow_empty:
            allow_empty = d.getVar('ALLOW_EMPTY')
        root = "%s/%s" % (pkgdest, pkg)
        os.chdir(root)
        g = glob('*')
        if g or allow_empty == "1":
            # Symlinks needed for reverse lookups (from the final package name)
            subdata_sym = pkgdatadir + "/runtime-reverse/%s" % pkgval
            oe.path.symlink("../runtime/%s" % pkg, subdata_sym, True)

            packagedfile = pkgdatadir + '/runtime/%s.packaged' % pkg
            open(packagedfile, 'w').close()

    if bb.data.inherits_class('kernel', d) or bb.data.inherits_class('module-base', d):
        write_extra_runtime_pkgs(variants, packages, pkgdatadir)

    if bb.data.inherits_class('allarch', d) and not variants \
        and not bb.data.inherits_class('packagegroup', d):
        write_extra_runtime_pkgs(global_variants, packages, pkgdatadir)

}


python emit_terminal_func () {
def emit_terminal_func(command, envdata, d):
    import bb.build
    cmd_func = 'do_terminal'

    envdata.setVar(cmd_func, 'exec ' + command)
    envdata.setVarFlag(cmd_func, 'func', '1')

    runfmt = d.getVar('BB_RUNFMT') or "run.{func}.{pid}"
    runfile = runfmt.format(func=cmd_func, task=cmd_func, taskfunc=cmd_func, pid=os.getpid())
    runfile = os.path.join(d.getVar('T'), runfile)
    bb.utils.mkdirhier(os.path.dirname(runfile))

    with open(runfile, 'w') as script:
        script.write(bb.build.shell_trap_code())
        bb.data.emit_func(cmd_func, script, envdata)
        script.write(cmd_func)
        script.write("\n")
    os.chmod(runfile, 0o755)

    return runfile
}


python enable_uninative () {
def enable_uninative(d):
    loader = d.getVar("UNINATIVE_LOADER")
    if os.path.exists(loader):
        bb.debug(2, "Enabling uninative")
        d.setVar("NATIVELSBSTRING", "universal%s" % oe.utils.host_gcc_version(d))
        d.appendVar("SSTATEPOSTUNPACKFUNCS", " uninative_changeinterp")
        d.appendVarFlag("SSTATEPOSTUNPACKFUNCS", "vardepvalueexclude", "| uninative_changeinterp")
        d.appendVar("BUILD_LDFLAGS", " -Wl,--allow-shlib-undefined -Wl,--dynamic-linker=${UNINATIVE_LOADER}")
        d.appendVarFlag("BUILD_LDFLAGS", "vardepvalueexclude", "| -Wl,--allow-shlib-undefined -Wl,--dynamic-linker=${UNINATIVE_LOADER}")
        d.appendVarFlag("BUILD_LDFLAGS", "vardepsexclude", "UNINATIVE_LOADER")
        d.prependVar("PATH", "${STAGING_DIR}-uninative/${BUILD_ARCH}-linux${bindir_native}:")
}


python expand_wildcard_licenses () {
def expand_wildcard_licenses(d, wildcard_licenses):
    """
    Return actual spdx format license names if wildcards are used. We expand
    wildcards from SPDXLICENSEMAP flags and AVAILABLE_LICENSES.
    """
    import fnmatch
    licenses = wildcard_licenses[:]
    spdxmapkeys = d.getVarFlags('SPDXLICENSEMAP').keys()
    for wld_lic in wildcard_licenses:
        spdxflags = fnmatch.filter(spdxmapkeys, wld_lic)
        licenses += [d.getVarFlag('SPDXLICENSEMAP', flag) for flag in spdxflags]

    spdx_lics = d.getVar('AVAILABLE_LICENSES').split()
    for wld_lic in wildcard_licenses:
        licenses += fnmatch.filter(spdx_lics, wld_lic)

    licenses = list(set(licenses))
    return licenses
}


python explode_deps () {
def explode_deps(s):
    return bb.utils.explode_deps(s)
}


python extend_recipe_sysroot () {
    import copy
    import subprocess
    import errno
    import collections
    import glob

    taskdepdata = d.getVar("BB_TASKDEPDATA", False)
    mytaskname = d.getVar("BB_RUNTASK")
    if mytaskname.endswith("_setscene"):
        mytaskname = mytaskname.replace("_setscene", "")
    workdir = d.getVar("WORKDIR")
    #bb.warn(str(taskdepdata))
    pn = d.getVar("PN")
    stagingdir = d.getVar("STAGING_DIR")
    sharedmanifests = d.getVar("COMPONENTS_DIR") + "/manifests"
    recipesysroot = d.getVar("RECIPE_SYSROOT")
    recipesysrootnative = d.getVar("RECIPE_SYSROOT_NATIVE")

    # Detect bitbake -b usage
    nodeps = d.getVar("BB_LIMITEDDEPS") or False
    if nodeps:
        lock = bb.utils.lockfile(recipesysroot + "/sysroot.lock")
        staging_populate_sysroot_dir(recipesysroot, recipesysrootnative, True, d)
        staging_populate_sysroot_dir(recipesysroot, recipesysrootnative, False, d)
        bb.utils.unlockfile(lock)
        return

    start = None
    configuredeps = []
    for dep in taskdepdata:
        data = taskdepdata[dep]
        if data[1] == mytaskname and data[0] == pn:
            start = dep
            break
    if start is None:
        bb.fatal("Couldn't find ourself in BB_TASKDEPDATA?")

    # We need to figure out which sysroot files we need to expose to this task.
    # This needs to match what would get restored from sstate, which is controlled
    # ultimately by calls from bitbake to setscene_depvalid().
    # That function expects a setscene dependency tree. We build a dependency tree
    # condensed to inter-sstate task dependencies, similar to that used by setscene
    # tasks. We can then call into setscene_depvalid() and decide
    # which dependencies we can "see" and should expose in the recipe specific sysroot.
    setscenedeps = copy.deepcopy(taskdepdata)

    start = set([start])

    sstatetasks = d.getVar("SSTATETASKS").split()
    # Add recipe specific tasks referenced by setscene_depvalid()
    sstatetasks.append("do_stash_locale")

    def print_dep_tree(deptree):
        data = ""
        for dep in deptree:
            deps = "    " + "\n    ".join(deptree[dep][3]) + "\n"
            data = data + "%s:\n  %s\n  %s\n%s  %s\n  %s\n" % (deptree[dep][0], deptree[dep][1], deptree[dep][2], deps, deptree[dep][4], deptree[dep][5])
        return data

    #bb.note("Full dep tree is:\n%s" % print_dep_tree(taskdepdata))

    #bb.note(" start2 is %s" % str(start))

    # If start is an sstate task (like do_package) we need to add in its direct dependencies
    # else the code below won't recurse into them.
    for dep in set(start):
        for dep2 in setscenedeps[dep][3]:
            start.add(dep2)
        start.remove(dep)

    #bb.note(" start3 is %s" % str(start))

    # Create collapsed do_populate_sysroot -> do_populate_sysroot tree
    for dep in taskdepdata:
        data = setscenedeps[dep]
        if data[1] not in sstatetasks:
            for dep2 in setscenedeps:
                data2 = setscenedeps[dep2]
                if dep in data2[3]:
                    data2[3].update(setscenedeps[dep][3])
                    data2[3].remove(dep)
            if dep in start:
                start.update(setscenedeps[dep][3])
                start.remove(dep)
            del setscenedeps[dep]

    # Remove circular references
    for dep in setscenedeps:
        if dep in setscenedeps[dep][3]:
            setscenedeps[dep][3].remove(dep)

    #bb.note("Computed dep tree is:\n%s" % print_dep_tree(setscenedeps))
    #bb.note(" start is %s" % str(start))

    # Direct dependencies should be present and can be depended upon
    for dep in set(start):
        if setscenedeps[dep][1] == "do_populate_sysroot":
            if dep not in configuredeps:
                configuredeps.append(dep)
    bb.note("Direct dependencies are %s" % str(configuredeps))
    #bb.note(" or %s" % str(start))

    msgbuf = []
    # Call into setscene_depvalid for each sub-dependency and only copy sysroot files
    # for ones that would be restored from sstate.
    done = list(start)
    next = list(start)
    while next:
        new = []
        for dep in next:
            data = setscenedeps[dep]
            for datadep in data[3]:
                if datadep in done:
                    continue
                taskdeps = {}
                taskdeps[dep] = setscenedeps[dep][:2]
                taskdeps[datadep] = setscenedeps[datadep][:2]
                retval = setscene_depvalid(datadep, taskdeps, [], d, msgbuf)
                if retval:
                    msgbuf.append("Skipping setscene dependency %s for installation into the sysroot" % datadep)
                    continue
                done.append(datadep)
                new.append(datadep)
                if datadep not in configuredeps and setscenedeps[datadep][1] == "do_populate_sysroot":
                    configuredeps.append(datadep)
                    msgbuf.append("Adding dependency on %s" % setscenedeps[datadep][0])
                else:
                    msgbuf.append("Following dependency on %s" % setscenedeps[datadep][0])
        next = new

    # This logging is too verbose for day to day use sadly
    #bb.debug(2, "\n".join(msgbuf))

    depdir = recipesysrootnative + "/installeddeps"
    bb.utils.mkdirhier(depdir)
    bb.utils.mkdirhier(sharedmanifests)

    lock = bb.utils.lockfile(recipesysroot + "/sysroot.lock")

    fixme = {}
    seendirs = set()
    postinsts = []
    multilibs = {}
    manifests = {}
    # All files that we're going to be installing, to find conflicts.
    fileset = {}

    for f in os.listdir(depdir):
        if not f.endswith(".complete"):
            continue
        f = depdir + "/" + f
        if os.path.islink(f) and not os.path.exists(f):
            bb.note("%s no longer exists, removing from sysroot" % f)
            lnk = os.readlink(f.replace(".complete", ""))
            sstate_clean_manifest(depdir + "/" + lnk, d, workdir)
            os.unlink(f)
            os.unlink(f.replace(".complete", ""))

    installed = []
    for dep in configuredeps:
        c = setscenedeps[dep][0]
        if mytaskname in ["do_sdk_depends", "do_populate_sdk_ext"] and c.endswith("-initial"):
            bb.note("Skipping initial setscene dependency %s for installation into the sysroot" % c)
            continue
        installed.append(c)

    # We want to remove anything which this task previously installed but is no longer a dependency
    taskindex = depdir + "/" + "index." + mytaskname
    if os.path.exists(taskindex):
        potential = []
        with open(taskindex, "r") as f:
            for l in f:
                l = l.strip()
                if l not in installed:
                    fl = depdir + "/" + l
                    if not os.path.exists(fl):
                        # Was likely already uninstalled
                        continue
                    potential.append(l)
        # We need to ensure not other task needs this dependency. We hold the sysroot
        # lock so we ca search the indexes to check
        if potential:
            for i in glob.glob(depdir + "/index.*"):
                if i.endswith("." + mytaskname):
                    continue
                with open(i, "r") as f:
                    for l in f:
                        l = l.strip()
                        if l in potential:
                            potential.remove(l)
        for l in potential:
            fl = depdir + "/" + l
            bb.note("Task %s no longer depends on %s, removing from sysroot" % (mytaskname, l))
            lnk = os.readlink(fl)
            sstate_clean_manifest(depdir + "/" + lnk, d, workdir)
            os.unlink(fl)
            os.unlink(fl + ".complete")

    msg_exists = []
    msg_adding = []

    for dep in configuredeps:
        c = setscenedeps[dep][0]
        if c not in installed:
            continue
        taskhash = setscenedeps[dep][5]
        taskmanifest = depdir + "/" + c + "." + taskhash

        if os.path.exists(depdir + "/" + c):
            lnk = os.readlink(depdir + "/" + c)
            if lnk == c + "." + taskhash and os.path.exists(depdir + "/" + c + ".complete"):
                msg_exists.append(c)
                continue
            else:
                bb.note("%s exists in sysroot, but is stale (%s vs. %s), removing." % (c, lnk, c + "." + taskhash))
                sstate_clean_manifest(depdir + "/" + lnk, d, workdir)
                os.unlink(depdir + "/" + c)
                if os.path.lexists(depdir + "/" + c + ".complete"):
                    os.unlink(depdir + "/" + c + ".complete")
        elif os.path.lexists(depdir + "/" + c):
            os.unlink(depdir + "/" + c)

        msg_adding.append(c)

        os.symlink(c + "." + taskhash, depdir + "/" + c)

        manifest, d2 = oe.sstatesig.find_sstate_manifest(c, setscenedeps[dep][2], "populate_sysroot", d, multilibs)
        if d2 is not d:
            # If we don't do this, the recipe sysroot will be placed in the wrong WORKDIR for multilibs
            # We need a consistent WORKDIR for the image
            d2.setVar("WORKDIR", d.getVar("WORKDIR"))
        destsysroot = d2.getVar("RECIPE_SYSROOT")
        # We put allarch recipes into the default sysroot
        if manifest and "allarch" in manifest:
            destsysroot = d.getVar("RECIPE_SYSROOT")

        native = False
        if c.endswith("-native") or "-cross-" in c or "-crosssdk" in c:
            native = True

        if manifest:
            newmanifest = collections.OrderedDict()
            targetdir = destsysroot
            if native:
                targetdir = recipesysrootnative
            if targetdir not in fixme:
                fixme[targetdir] = []
            fm = fixme[targetdir]

            with open(manifest, "r") as f:
                manifests[dep] = manifest
                for l in f:
                    l = l.strip()
                    if l.endswith("/fixmepath"):
                        fm.append(l)
                        continue
                    if l.endswith("/fixmepath.cmd"):
                        continue
                    dest = l.replace(stagingdir, "")
                    dest = "/" + "/".join(dest.split("/")[3:])
                    newmanifest[l] = targetdir + dest

                    # Check if files have already been installed by another
                    # recipe and abort if they have, explaining what recipes are
                    # conflicting.
                    hashname = targetdir + dest
                    if not hashname.endswith("/"):
                        if hashname in fileset:
                            bb.fatal("The file %s is installed by both %s and %s, aborting" % (dest, c, fileset[hashname]))
                        else:
                            fileset[hashname] = c

            # Having multiple identical manifests in each sysroot eats diskspace so
            # create a shared pool of them and hardlink if we can.
            # We create the manifest in advance so that if something fails during installation,
            # or the build is interrupted, subsequent exeuction can cleanup.
            sharedm = sharedmanifests + "/" + os.path.basename(taskmanifest)
            if not os.path.exists(sharedm):
                smlock = bb.utils.lockfile(sharedm + ".lock")
                # Can race here. You'd think it just means we may not end up with all copies hardlinked to each other
                # but python can lose file handles so we need to do this under a lock.
                if not os.path.exists(sharedm):
                    with open(sharedm, 'w') as m:
                       for l in newmanifest:
                           dest = newmanifest[l]
                           m.write(dest.replace(workdir + "/", "") + "\n")
                bb.utils.unlockfile(smlock)
            try:
                os.link(sharedm, taskmanifest)
            except OSError as err:
                if err.errno == errno.EXDEV:
                    bb.utils.copyfile(sharedm, taskmanifest)
                else:
                    raise
            # Finally actually install the files
            for l in newmanifest:
                    dest = newmanifest[l]
                    if l.endswith("/"):
                        staging_copydir(l, targetdir, dest, seendirs)
                        continue
                    staging_copyfile(l, targetdir, dest, postinsts, seendirs)

    bb.note("Installed into sysroot: %s" % str(msg_adding))
    bb.note("Skipping as already exists in sysroot: %s" % str(msg_exists))

    for f in fixme:
        staging_processfixme(fixme[f], f, recipesysroot, recipesysrootnative, d)

    for p in postinsts:
        subprocess.check_output(p, shell=True, stderr=subprocess.STDOUT)

    for dep in manifests:
        c = setscenedeps[dep][0]
        os.symlink(manifests[dep], depdir + "/" + c + ".complete")

    with open(taskindex, "w") as f:
        for l in sorted(installed):
            f.write(l + "\n")

    bb.utils.unlockfile(lock)
}


python extend_variants () {
def extend_variants(d, var, extend, delim=':'):
    """Return a string of all bb class extend variants for the given extend"""
    variants = []
    whole = d.getVar(var) or ""
    for ext in whole.split():
        eext = ext.split(delim)
        if len(eext) > 1 and eext[0] == extend:
            variants.append(eext[1])
    return " ".join(variants)
}


python extra_path_elements () {
def extra_path_elements(d):
    path = ""
    elements = (d.getVar('EXTRANATIVEPATH') or "").split()
    for e in elements:
        path = path + "${STAGING_BINDIR_NATIVE}/" + e + ":"
    return path
}


python files_from_filevars () {
def files_from_filevars(filevars):
    import os,glob
    cpath = oe.cachedpath.CachedPath()
    files = []
    for f in filevars:
        if os.path.isabs(f):
            f = '.' + f
        if not f.startswith("./"):
            f = './' + f
        globbed = glob.glob(f)
        if globbed:
            if [ f ] != globbed:
                files += globbed
                continue
        files.append(f)

    symlink_paths = []
    for ind, f in enumerate(files):
        # Handle directory symlinks. Truncate path to the lowest level symlink
        parent = ''
        for dirname in f.split('/')[:-1]:
            parent = os.path.join(parent, dirname)
            if dirname == '.':
                continue
            if cpath.islink(parent):
                bb.warn("FILES contains file '%s' which resides under a "
                        "directory symlink. Please fix the recipe and use the "
                        "real path for the file." % f[1:])
                symlink_paths.append(f)
                files[ind] = parent
                f = parent
                break

        if not cpath.islink(f):
            if cpath.isdir(f):
                newfiles = [ os.path.join(f,x) for x in os.listdir(f) ]
                if newfiles:
                    files += newfiles

    return files, symlink_paths

# Called in package_<rpm,ipk,deb>.bbclass to get the correct list of configuration files}


python find_license_files () {
def find_license_files(d):
    """
    Creates list of files used in LIC_FILES_CHKSUM and generic LICENSE files.
    """
    import shutil
    import oe.license
    from collections import defaultdict, OrderedDict

    # All the license files for the package
    lic_files = d.getVar('LIC_FILES_CHKSUM') or ""
    pn = d.getVar('PN')
    # The license files are located in S/LIC_FILE_CHECKSUM.
    srcdir = d.getVar('S')
    # Directory we store the generic licenses as set in the distro configuration
    generic_directory = d.getVar('COMMON_LICENSE_DIR')
    # List of basename, path tuples
    lic_files_paths = []
    # hash for keep track generic lics mappings
    non_generic_lics = {}
    # Entries from LIC_FILES_CHKSUM
    lic_chksums = {}
    license_source_dirs = []
    license_source_dirs.append(generic_directory)
    try:
        additional_lic_dirs = d.getVar('LICENSE_PATH').split()
        for lic_dir in additional_lic_dirs:
            license_source_dirs.append(lic_dir)
    except:
        pass

    class FindVisitor(oe.license.LicenseVisitor):
        def visit_Str(self, node):
            #
            # Until I figure out what to do with
            # the two modifiers I support (or greater = +
            # and "with exceptions" being *
            # we'll just strip out the modifier and put
            # the base license.
            find_license(node.s.replace("+", "").replace("*", ""))
            self.generic_visit(node)

    def find_license(license_type):
        try:
            bb.utils.mkdirhier(gen_lic_dest)
        except:
            pass
        spdx_generic = None
        license_source = None
        # If the generic does not exist we need to check to see if there is an SPDX mapping to it,
        # unless NO_GENERIC_LICENSE is set.
        for lic_dir in license_source_dirs:
            if not os.path.isfile(os.path.join(lic_dir, license_type)):
                if d.getVarFlag('SPDXLICENSEMAP', license_type) != None:
                    # Great, there is an SPDXLICENSEMAP. We can copy!
                    bb.debug(1, "We need to use a SPDXLICENSEMAP for %s" % (license_type))
                    spdx_generic = d.getVarFlag('SPDXLICENSEMAP', license_type)
                    license_source = lic_dir
                    break
            elif os.path.isfile(os.path.join(lic_dir, license_type)):
                spdx_generic = license_type
                license_source = lic_dir
                break

        non_generic_lic = d.getVarFlag('NO_GENERIC_LICENSE', license_type)
        if spdx_generic and license_source:
            # we really should copy to generic_ + spdx_generic, however, that ends up messing the manifest
            # audit up. This should be fixed in emit_pkgdata (or, we actually got and fix all the recipes)

            lic_files_paths.append(("generic_" + license_type, os.path.join(license_source, spdx_generic),
                                    None, None))

            # The user may attempt to use NO_GENERIC_LICENSE for a generic license which doesn't make sense
            # and should not be allowed, warn the user in this case.
            if d.getVarFlag('NO_GENERIC_LICENSE', license_type):
                bb.warn("%s: %s is a generic license, please don't use NO_GENERIC_LICENSE for it." % (pn, license_type))

        elif non_generic_lic and non_generic_lic in lic_chksums:
            # if NO_GENERIC_LICENSE is set, we copy the license files from the fetched source
            # of the package rather than the license_source_dirs.
            lic_files_paths.append(("generic_" + license_type,
                                    os.path.join(srcdir, non_generic_lic), None, None))
            non_generic_lics[non_generic_lic] = license_type
        else:
            # Add explicity avoid of CLOSED license because this isn't generic
            if license_type != 'CLOSED':
                # And here is where we warn people that their licenses are lousy
                bb.warn("%s: No generic license file exists for: %s in any provider" % (pn, license_type))
            pass

    if not generic_directory:
        bb.fatal("COMMON_LICENSE_DIR is unset. Please set this in your distro config")

    for url in lic_files.split():
        try:
            (method, host, path, user, pswd, parm) = bb.fetch.decodeurl(url)
            if method != "file" or not path:
                raise bb.fetch.MalformedUrl()
        except bb.fetch.MalformedUrl:
            bb.fatal("%s: LIC_FILES_CHKSUM contains an invalid URL:  %s" % (d.getVar('PF'), url))
        # We want the license filename and path
        chksum = parm.get('md5', None)
        beginline = parm.get('beginline')
        endline = parm.get('endline')
        lic_chksums[path] = (chksum, beginline, endline)

    v = FindVisitor()
    try:
        v.visit_string(d.getVar('LICENSE'))
    except oe.license.InvalidLicense as exc:
        bb.fatal('%s: %s' % (d.getVar('PF'), exc))
    except SyntaxError:
        bb.warn("%s: Failed to parse it's LICENSE field." % (d.getVar('PF')))
    # Add files from LIC_FILES_CHKSUM to list of license files
    lic_chksum_paths = defaultdict(OrderedDict)
    for path, data in sorted(lic_chksums.items()):
        lic_chksum_paths[os.path.basename(path)][data] = (os.path.join(srcdir, path), data[1], data[2])
    for basename, files in lic_chksum_paths.items():
        if len(files) == 1:
            # Don't copy again a LICENSE already handled as non-generic
            if basename in non_generic_lics:
                continue
            data = list(files.values())[0]
            lic_files_paths.append(tuple([basename] + list(data)))
        else:
            # If there are multiple different license files with identical
            # basenames we rename them to <file>.0, <file>.1, ...
            for i, data in enumerate(files.values()):
                lic_files_paths.append(tuple(["%s.%d" % (basename, i)] + list(data)))

    return lic_files_paths
}


python fixup_perms () {
    import pwd, grp

    # init using a string with the same format as a line as documented in
    # the fs-perms.txt file
    # <path> <mode> <uid> <gid> <walk> <fmode> <fuid> <fgid>
    # <path> link <link target>
    #
    # __str__ can be used to print out an entry in the input format
    #
    # if fs_perms_entry.path is None:
    #    an error occurred
    # if fs_perms_entry.link, you can retrieve:
    #    fs_perms_entry.path = path
    #    fs_perms_entry.link = target of link
    # if not fs_perms_entry.link, you can retrieve:
    #    fs_perms_entry.path = path
    #    fs_perms_entry.mode = expected dir mode or None
    #    fs_perms_entry.uid = expected uid or -1
    #    fs_perms_entry.gid = expected gid or -1
    #    fs_perms_entry.walk = 'true' or something else
    #    fs_perms_entry.fmode = expected file mode or None
    #    fs_perms_entry.fuid = expected file uid or -1
    #    fs_perms_entry_fgid = expected file gid or -1
    class fs_perms_entry():
        def __init__(self, line):
            lsplit = line.split()
            if len(lsplit) == 3 and lsplit[1].lower() == "link":
                self._setlink(lsplit[0], lsplit[2])
            elif len(lsplit) == 8:
                self._setdir(lsplit[0], lsplit[1], lsplit[2], lsplit[3], lsplit[4], lsplit[5], lsplit[6], lsplit[7])
            else:
                msg = "Fixup Perms: invalid config line %s" % line
                package_qa_handle_error("perm-config", msg, d)
                self.path = None
                self.link = None

        def _setdir(self, path, mode, uid, gid, walk, fmode, fuid, fgid):
            self.path = os.path.normpath(path)
            self.link = None
            self.mode = self._procmode(mode)
            self.uid  = self._procuid(uid)
            self.gid  = self._procgid(gid)
            self.walk = walk.lower()
            self.fmode = self._procmode(fmode)
            self.fuid = self._procuid(fuid)
            self.fgid = self._procgid(fgid)

        def _setlink(self, path, link):
            self.path = os.path.normpath(path)
            self.link = link

        def _procmode(self, mode):
            if not mode or (mode and mode == "-"):
                return None
            else:
                return int(mode,8)

        # Note uid/gid -1 has special significance in os.lchown
        def _procuid(self, uid):
            if uid is None or uid == "-":
                return -1
            elif uid.isdigit():
                return int(uid)
            else:
                return pwd.getpwnam(uid).pw_uid

        def _procgid(self, gid):
            if gid is None or gid == "-":
                return -1
            elif gid.isdigit():
                return int(gid)
            else:
                return grp.getgrnam(gid).gr_gid

        # Use for debugging the entries
        def __str__(self):
            if self.link:
                return "%s link %s" % (self.path, self.link)
            else:
                mode = "-"
                if self.mode:
                    mode = "0%o" % self.mode
                fmode = "-"
                if self.fmode:
                    fmode = "0%o" % self.fmode
                uid = self._mapugid(self.uid)
                gid = self._mapugid(self.gid)
                fuid = self._mapugid(self.fuid)
                fgid = self._mapugid(self.fgid)
                return "%s %s %s %s %s %s %s %s" % (self.path, mode, uid, gid, self.walk, fmode, fuid, fgid)

        def _mapugid(self, id):
            if id is None or id == -1:
                return "-"
            else:
                return "%d" % id

    # Fix the permission, owner and group of path
    def fix_perms(path, mode, uid, gid, dir):
        if mode and not os.path.islink(path):
            #bb.note("Fixup Perms: chmod 0%o %s" % (mode, dir))
            os.chmod(path, mode)
        # -1 is a special value that means don't change the uid/gid
        # if they are BOTH -1, don't bother to lchown
        if not (uid == -1 and gid == -1):
            #bb.note("Fixup Perms: lchown %d:%d %s" % (uid, gid, dir))
            os.lchown(path, uid, gid)

    # Return a list of configuration files based on either the default
    # files/fs-perms.txt or the contents of FILESYSTEM_PERMS_TABLES
    # paths are resolved via BBPATH
    def get_fs_perms_list(d):
        str = ""
        bbpath = d.getVar('BBPATH')
        fs_perms_tables = d.getVar('FILESYSTEM_PERMS_TABLES') or ""
        for conf_file in fs_perms_tables.split():
            confpath = bb.utils.which(bbpath, conf_file)
            if confpath:
                str += " %s" % bb.utils.which(bbpath, conf_file)
            else:
                bb.warn("cannot find %s specified in FILESYSTEM_PERMS_TABLES" % conf_file)
        return str



    dvar = d.getVar('PKGD')

    fs_perms_table = {}
    fs_link_table = {}

    # By default all of the standard directories specified in
    # bitbake.conf will get 0755 root:root.
    target_path_vars = [    'base_prefix',
                'prefix',
                'exec_prefix',
                'base_bindir',
                'base_sbindir',
                'base_libdir',
                'datadir',
                'sysconfdir',
                'servicedir',
                'sharedstatedir',
                'localstatedir',
                'infodir',
                'mandir',
                'docdir',
                'bindir',
                'sbindir',
                'libexecdir',
                'libdir',
                'includedir',
                'oldincludedir' ]

    for path in target_path_vars:
        dir = d.getVar(path) or ""
        if dir == "":
            continue
        fs_perms_table[dir] = fs_perms_entry(d.expand("%s 0755 root root false - - -" % (dir)))

    # Now we actually load from the configuration files
    for conf in get_fs_perms_list(d).split():
        if os.path.exists(conf):
            f = open(conf)
            for line in f:
                if line.startswith('#'):
                    continue
                lsplit = line.split()
                if len(lsplit) == 0:
                    continue
                if len(lsplit) != 8 and not (len(lsplit) == 3 and lsplit[1].lower() == "link"):
                    msg = "Fixup perms: %s invalid line: %s" % (conf, line)
                    package_qa_handle_error("perm-line", msg, d)
                    continue
                entry = fs_perms_entry(d.expand(line))
                if entry and entry.path:
                    if entry.link:
                        fs_link_table[entry.path] = entry
                        if entry.path in fs_perms_table:
                            fs_perms_table.pop(entry.path)
                    else:
                        fs_perms_table[entry.path] = entry
                        if entry.path in fs_link_table:
                            fs_link_table.pop(entry.path)
            f.close()

    # Debug -- list out in-memory table
    #for dir in fs_perms_table:
    #    bb.note("Fixup Perms: %s: %s" % (dir, str(fs_perms_table[dir])))
    #for link in fs_link_table:
    #    bb.note("Fixup Perms: %s: %s" % (link, str(fs_link_table[link])))

    # We process links first, so we can go back and fixup directory ownership
    # for any newly created directories
    # Process in sorted order so /run gets created before /run/lock, etc.
    for entry in sorted(fs_link_table.values(), key=lambda x: x.link):
        link = entry.link
        dir = entry.path
        origin = dvar + dir
        if not (cpath.exists(origin) and cpath.isdir(origin) and not cpath.islink(origin)):
            continue

        if link[0] == "/":
            target = dvar + link
            ptarget = link
        else:
            target = os.path.join(os.path.dirname(origin), link)
            ptarget = os.path.join(os.path.dirname(dir), link)
        if os.path.exists(target):
            msg = "Fixup Perms: Unable to correct directory link, target already exists: %s -> %s" % (dir, ptarget)
            package_qa_handle_error("perm-link", msg, d)
            continue

        # Create path to move directory to, move it, and then setup the symlink
        bb.utils.mkdirhier(os.path.dirname(target))
        #bb.note("Fixup Perms: Rename %s -> %s" % (dir, ptarget))
        os.rename(origin, target)
        #bb.note("Fixup Perms: Link %s -> %s" % (dir, link))
        os.symlink(link, origin)

    for dir in fs_perms_table:
        origin = dvar + dir
        if not (cpath.exists(origin) and cpath.isdir(origin)):
            continue

        fix_perms(origin, fs_perms_table[dir].mode, fs_perms_table[dir].uid, fs_perms_table[dir].gid, dir)

        if fs_perms_table[dir].walk == 'true':
            for root, dirs, files in os.walk(origin):
                for dr in dirs:
                    each_dir = os.path.join(root, dr)
                    fix_perms(each_dir, fs_perms_table[dir].mode, fs_perms_table[dir].uid, fs_perms_table[dir].gid, dir)
                for f in files:
                    each_file = os.path.join(root, f)
                    fix_perms(each_file, fs_perms_table[dir].fmode, fs_perms_table[dir].fuid, fs_perms_table[dir].fgid, dir)
}


python gen_packagevar () {
def gen_packagevar(d):
    ret = []
    pkgs = (d.getVar("PACKAGES") or "").split()
    vars = (d.getVar("PACKAGEVARS") or "").split()
    for p in pkgs:
        for v in vars:
            ret.append(v + "_" + p)

        # Ensure that changes to INCOMPATIBLE_LICENSE re-run do_package for
        # affected recipes.
        ret.append('LICENSE_EXCLUSION-%s' % p)
    return " ".join(ret)
}


python generate_sstatefn () {
def generate_sstatefn(spec, hash, d):
    if not hash:
        hash = "INVALID"
    return hash[:2] + "/" + spec + hash
}


python get_buildprocess_cputime () {
def get_buildprocess_cputime(pid):
    with open("/proc/%d/stat" % pid, "r") as f:
        fields = f.readline().rstrip().split()
    # 13: utime, 14: stime, 15: cutime, 16: cstime
    return sum(int(field) for field in fields[13:16])
}


python get_buildtimedata () {
def get_buildtimedata(var, d):
    import time
    timedata = d.getVar(var, False)
    if timedata is None:
        return
    oldtime, oldcpu, oldproc = timedata
    procdiff = get_buildprocess_cputime(os.getpid()) - oldproc
    cpudiff = get_cputime() - oldcpu
    end_time = time.time()
    timediff = end_time - oldtime
    if cpudiff > 0:
        cpuperc = float(procdiff) * 100 / cpudiff
    else:
        cpuperc = None
    return timediff, cpuperc
}


python get_conffiles () {
def get_conffiles(pkg, d):
    pkgdest = d.getVar('PKGDEST')
    root = os.path.join(pkgdest, pkg)
    cwd = os.getcwd()
    os.chdir(root)

    conffiles = d.getVar('CONFFILES_%s' % pkg);
    if conffiles == None:
        conffiles = d.getVar('CONFFILES')
    if conffiles == None:
        conffiles = ""
    conffiles = conffiles.split()
    conf_orig_list = files_from_filevars(conffiles)[0]

    # Remove links and directories from conf_orig_list to get conf_list which only contains normal files
    conf_list = []
    for f in conf_orig_list:
        if os.path.isdir(f):
            continue
        if os.path.islink(f):
            continue
        if not os.path.exists(f):
            continue
        conf_list.append(f)

    # Remove the leading './'
    for i in range(0, len(conf_list)):
        conf_list[i] = conf_list[i][1:]

    os.chdir(cwd)
    return conf_list
}


python get_cputime () {
def get_cputime():
    with open("/proc/stat", "r") as f:
        fields = f.readline().rstrip().split()[1:]
    return sum(int(field) for field in fields)
}


python get_filesystem_id () {
def get_filesystem_id(path):
    import subprocess
    try:
        return subprocess.check_output(["stat", "-f", "-c", "%t", path]).decode('utf-8').strip()
    except subprocess.CalledProcessError:
        bb.warn("Can't get filesystem id of: %s" % path)
        return None

# Check that the path isn't located on nfs.}


python get_glibc_loader () {
def get_glibc_loader(d):
    import re

    dynamic_loader = None
    targetarch = d.getVar("TARGET_ARCH")
    if targetarch in ["powerpc", "microblaze"]:
        dynamic_loader = "${base_libdir}/ld.so.1"
    elif targetarch in ["mipsisa32r6el", "mipsisa32r6", "mipsisa64r6el", "mipsisa64r6"]:
        dynamic_loader = "${base_libdir}/ld-linux-mipsn8.so.1"
    elif targetarch.startswith("mips"):
        dynamic_loader = "${base_libdir}/ld.so.1"
    elif targetarch == "powerpc64":
        dynamic_loader = "${base_libdir}/ld64.so.1"
    elif targetarch == "x86_64":
        dynamic_loader = "${base_libdir}/ld-linux-x86-64.so.2"
    elif re.search("i.86", targetarch):
        dynamic_loader = "${base_libdir}/ld-linux.so.2"
    elif targetarch == "arm":
        dynamic_loader = "${base_libdir}/ld-linux${@['-armhf', ''][d.getVar('TARGET_FPU') == 'soft']}.so.3"
    elif targetarch.startswith("aarch64"):
        dynamic_loader = "${base_libdir}/ld-linux-aarch64${ARMPKGSFX_ENDIAN_64}.so.1"
    elif targetarch.startswith("riscv64"):
        dynamic_loader = "${base_libdir}/ld-linux-riscv64-lp64${@['d', ''][d.getVar('TARGET_FPU') == 'soft']}.so.1"
    return dynamic_loader
}


python get_layers_branch_rev () {
def get_layers_branch_rev(d):
    layers = (d.getVar("BBLAYERS") or "").split()
    layers_branch_rev = ["%-20s = \"%s:%s\"" % (os.path.basename(i), \
        base_get_metadata_git_branch(i, None).strip(), \
        base_get_metadata_git_revision(i, None)) \
            for i in layers]
    i = len(layers_branch_rev)-1
    p1 = layers_branch_rev[i].find("=")
    s1 = layers_branch_rev[i][p1:]
    while i > 0:
        p2 = layers_branch_rev[i-1].find("=")
        s2= layers_branch_rev[i-1][p2:]
        if s1 == s2:
            layers_branch_rev[i-1] = layers_branch_rev[i-1][0:p2]
            i -= 1
        else:
            i -= 1
            p1 = layers_branch_rev[i].find("=")
            s1= layers_branch_rev[i][p1:]
    return layers_branch_rev

}


python get_lic_checksum_file_list () {
def get_lic_checksum_file_list(d):
    filelist = []
    lic_files = d.getVar("LIC_FILES_CHKSUM") or ''
    tmpdir = d.getVar("TMPDIR")
    s = d.getVar("S")
    b = d.getVar("B")
    workdir = d.getVar("WORKDIR")

    urls = lic_files.split()
    for url in urls:
        # We only care about items that are absolute paths since
        # any others should be covered by SRC_URI.
        try:
            (method, host, path, user, pswd, parm) = bb.fetch.decodeurl(url)
            if method != "file" or not path:
                raise bb.fetch.MalformedUrl(url)

            if path[0] == '/':
                if path.startswith((tmpdir, s, b, workdir)):
                    continue
                filelist.append(path + ":" + str(os.path.exists(path)))
        except bb.fetch.MalformedUrl:
            bb.fatal(d.getVar('PN') + ": LIC_FILES_CHKSUM contains an invalid URL: " + url)
    return " ".join(filelist)
}


python get_linuxloader () {
def get_linuxloader(d):
    overrides = d.getVar("OVERRIDES").split(":")

    if "libc-baremetal" in overrides:
        return None

    if "libc-musl" in overrides:
        dynamic_loader = get_musl_loader(d)
    else:
        dynamic_loader = get_glibc_loader(d)
    return dynamic_loader
}


python get_multilib_datastore () {
def get_multilib_datastore(variant, d):
    return oe.utils.get_multilib_datastore(variant, d)
}


python get_musl_loader () {
def get_musl_loader(d):
    import re
    dynamic_loader = None

    targetarch = d.getVar("TARGET_ARCH")
    if targetarch.startswith("microblaze"):
        dynamic_loader = "${base_libdir}/ld-musl-microblaze${@bb.utils.contains('TUNE_FEATURES', 'bigendian', '', 'el' ,d)}.so.1"
    elif targetarch.startswith("mips"):
        dynamic_loader = "${base_libdir}/ld-musl-mips${ABIEXTENSION}${MIPSPKGSFX_BYTE}${MIPSPKGSFX_R6}${MIPSPKGSFX_ENDIAN}${@['', '-sf'][d.getVar('TARGET_FPU') == 'soft']}.so.1"
    elif targetarch == "powerpc":
        dynamic_loader = "${base_libdir}/ld-musl-powerpc${@['', '-sf'][d.getVar('TARGET_FPU') == 'soft']}.so.1"
    elif targetarch == "powerpc64":
        dynamic_loader = "${base_libdir}/ld-musl-powerpc64.so.1"
    elif targetarch == "x86_64":
        dynamic_loader = "${base_libdir}/ld-musl-x86_64.so.1"
    elif re.search("i.86", targetarch):
        dynamic_loader = "${base_libdir}/ld-musl-i386.so.1"
    elif targetarch.startswith("arm"):
        dynamic_loader = "${base_libdir}/ld-musl-arm${ARMPKGSFX_ENDIAN}${ARMPKGSFX_EABI}.so.1"
    elif targetarch.startswith("aarch64"):
        dynamic_loader = "${base_libdir}/ld-musl-aarch64${ARMPKGSFX_ENDIAN_64}.so.1"
    elif targetarch.startswith("riscv64"):
        dynamic_loader = "${base_libdir}/ld-musl-riscv64${@['', '-sf'][d.getVar('TARGET_FPU') == 'soft']}.so.1"
    return dynamic_loader
}


python get_package_additional_metadata () {
def get_package_additional_metadata (pkg_type, d):
    base_key = "PACKAGE_ADD_METADATA"
    for key in ("%s_%s" % (base_key, pkg_type.upper()), base_key):
        if d.getVar(key, False) is None:
            continue
        d.setVarFlag(key, "type", "list")
        if d.getVarFlag(key, "separator") is None:
            d.setVarFlag(key, "separator", "\\n")
        metadata_fields = [field.strip() for field in oe.data.typed_value(key, d)]
        return "\n".join(metadata_fields).strip()
}


python get_package_mapping () {
def get_package_mapping (pkg, basepkg, d):
    import oe.packagedata

    data = oe.packagedata.read_subpkgdata(pkg, d)
    key = "PKG_%s" % pkg

    if key in data:
        # Have to avoid undoing the write_extra_pkgs(global_variants...)
        if bb.data.inherits_class('allarch', d) and not d.getVar('MULTILIB_VARIANTS') \
            and data[key] == basepkg:
            return pkg
        return data[key]

    return pkg
}


python get_process_cputime () {
def get_process_cputime(pid):
    import resource
    with open("/proc/%d/stat" % pid, "r") as f:
        fields = f.readline().rstrip().split()
    stats = {
        'utime'  : fields[13],
        'stime'  : fields[14],
        'cutime' : fields[15],
        'cstime' : fields[16],
    }
    iostats = {}
    if os.path.isfile("/proc/%d/io" % pid):
        with open("/proc/%d/io" % pid, "r") as f:
            while True:
                i = f.readline().strip()
                if not i:
                    break
                if not ":" in i:
                    # one more extra line is appended (empty or containing "0")
                    # most probably due to race condition in kernel while
                    # updating IO stats
                    break
                i = i.split(": ")
                iostats[i[0]] = i[1]
    resources = resource.getrusage(resource.RUSAGE_SELF)
    childres = resource.getrusage(resource.RUSAGE_CHILDREN)
    return stats, iostats, resources, childres
}


python get_recipe_info () {
def get_recipe_info(d):
    info = {}
    info["PV"] = d.getVar("PV")
    info["PR"] = d.getVar("PR")
    info["LICENSE"] = d.getVar("LICENSE")
    return info
}


python get_timedata () {
def get_timedata(var, d, end_time):
    oldtime = d.getVar(var, False)
    if oldtime is None:
        return
    return end_time - oldtime
}


python incompatible_license () {
def incompatible_license(d, dont_want_licenses, package=None):
    """
    This function checks if a recipe has only incompatible licenses. It also
    take into consideration 'or' operand.  dont_want_licenses should be passed
    as canonical (SPDX) names.
    """
    import oe.license
    license = d.getVar("LICENSE_%s" % package) if package else None
    if not license:
        license = d.getVar('LICENSE')

    # Handles an "or" or two license sets provided by
    # flattened_licenses(), pick one that works if possible.
    def choose_lic_set(a, b):
        return a if all(oe.license.license_ok(canonical_license(d, lic),
                            dont_want_licenses) for lic in a) else b

    try:
        licenses = oe.license.flattened_licenses(license, choose_lic_set)
    except oe.license.LicenseError as exc:
        bb.fatal('%s: %s' % (d.getVar('P'), exc))
    return any(not oe.license.license_ok(canonical_license(d, l), \
               dont_want_licenses) for l in licenses)
}


python incompatible_license_contains () {
def incompatible_license_contains(license, truevalue, falsevalue, d):
    license = canonical_license(d, license)
    bad_licenses = (d.getVar('INCOMPATIBLE_LICENSE') or "").split()
    bad_licenses = expand_wildcard_licenses(d, bad_licenses)
    return truevalue if license in bad_licenses else falsevalue
}


python ipk_write_pkg () {
def ipk_write_pkg(pkg, d):
    import re, copy
    import subprocess
    import textwrap
    import collections

    def cleanupcontrol(root):
        for p in ['CONTROL', 'DEBIAN']:
            p = os.path.join(root, p)
            if os.path.exists(p):
                bb.utils.prunedir(p)

    outdir = d.getVar('PKGWRITEDIRIPK')
    pkgdest = d.getVar('PKGDEST')
    recipesource = os.path.basename(d.getVar('FILE'))

    localdata = bb.data.createCopy(d)
    root = "%s/%s" % (pkgdest, pkg)

    lf = bb.utils.lockfile(root + ".lock")
    try:
        localdata.setVar('ROOT', '')
        localdata.setVar('ROOT_%s' % pkg, root)
        pkgname = localdata.getVar('PKG_%s' % pkg)
        if not pkgname:
            pkgname = pkg
        localdata.setVar('PKG', pkgname)

        localdata.setVar('OVERRIDES', d.getVar("OVERRIDES", False) + ":" + pkg)

        basedir = os.path.join(os.path.dirname(root))
        arch = localdata.getVar('PACKAGE_ARCH')

        if localdata.getVar('IPK_HIERARCHICAL_FEED', False) == "1":
            # Spread packages across subdirectories so each isn't too crowded
            if pkgname.startswith('lib'):
                pkg_prefix = 'lib' + pkgname[3]
            else:
                pkg_prefix = pkgname[0]

            # Keep -dbg, -dev, -doc, -staticdev, -locale and -locale-* packages
            # together. These package suffixes are taken from the definitions of
            # PACKAGES and PACKAGES_DYNAMIC in meta/conf/bitbake.conf
            if pkgname[-4:] in ('-dbg', '-dev', '-doc'):
                pkg_subdir = pkgname[:-4]
            elif pkgname.endswith('-staticdev'):
                pkg_subdir = pkgname[:-10]
            elif pkgname.endswith('-locale'):
                pkg_subdir = pkgname[:-7]
            elif '-locale-' in pkgname:
                pkg_subdir = pkgname[:pkgname.find('-locale-')]
            else:
                pkg_subdir = pkgname

            pkgoutdir = "%s/%s/%s/%s" % (outdir, arch, pkg_prefix, pkg_subdir)
        else:
            pkgoutdir = "%s/%s" % (outdir, arch)

        bb.utils.mkdirhier(pkgoutdir)
        os.chdir(root)
        cleanupcontrol(root)
        from glob import glob
        g = glob('*')
        if not g and localdata.getVar('ALLOW_EMPTY', False) != "1":
            bb.note("Not creating empty archive for %s-%s-%s" % (pkg, localdata.getVar('PKGV'), localdata.getVar('PKGR')))
            return

        controldir = os.path.join(root, 'CONTROL')
        bb.utils.mkdirhier(controldir)
        ctrlfile = open(os.path.join(controldir, 'control'), 'w')

        fields = []
        pe = d.getVar('PKGE')
        if pe and int(pe) > 0:
            fields.append(["Version: %s:%s-%s\n", ['PKGE', 'PKGV', 'PKGR']])
        else:
            fields.append(["Version: %s-%s\n", ['PKGV', 'PKGR']])
        fields.append(["Description: %s\n", ['DESCRIPTION']])
        fields.append(["Section: %s\n", ['SECTION']])
        fields.append(["Priority: %s\n", ['PRIORITY']])
        fields.append(["Maintainer: %s\n", ['MAINTAINER']])
        fields.append(["License: %s\n", ['LICENSE']])
        fields.append(["Architecture: %s\n", ['PACKAGE_ARCH']])
        fields.append(["OE: %s\n", ['PN']])
        if d.getVar('HOMEPAGE'):
            fields.append(["Homepage: %s\n", ['HOMEPAGE']])

        def pullData(l, d):
            l2 = []
            for i in l:
                l2.append(d.getVar(i))
            return l2

        ctrlfile.write("Package: %s\n" % pkgname)
        # check for required fields
        for (c, fs) in fields:
            for f in fs:
                if localdata.getVar(f, False) is None:
                    raise KeyError(f)
            # Special behavior for description...
            if 'DESCRIPTION' in fs:
                summary = localdata.getVar('SUMMARY') or localdata.getVar('DESCRIPTION') or "."
                ctrlfile.write('Description: %s\n' % summary)
                description = localdata.getVar('DESCRIPTION') or "."
                description = textwrap.dedent(description).strip()
                if '\\n' in description:
                    # Manually indent: multiline description includes a leading space
                    for t in description.split('\\n'):
                        ctrlfile.write(' %s\n' % (t.strip() or ' .'))
                else:
                    # Auto indent
                    ctrlfile.write('%s\n' % textwrap.fill(description, width=74, initial_indent=' ', subsequent_indent=' '))
            else:
                ctrlfile.write(c % tuple(pullData(fs, localdata)))
        # more fields

        custom_fields_chunk = get_package_additional_metadata("ipk", localdata)
        if custom_fields_chunk is not None:
            ctrlfile.write(custom_fields_chunk)
            ctrlfile.write("\n")

        mapping_rename_hook(localdata)

        def debian_cmp_remap(var):
            # In debian '>' and '<' do not mean what it appears they mean
            #   '<' = less or equal
            #   '>' = greater or equal
            # adjust these to the '<<' and '>>' equivalents
            #
            for dep in var:
                for i, v in enumerate(var[dep]):
                    if (v or "").startswith("< "):
                        var[dep][i] = var[dep][i].replace("< ", "<< ")
                    elif (v or "").startswith("> "):
                        var[dep][i] = var[dep][i].replace("> ", ">> ")

        rdepends = bb.utils.explode_dep_versions2(localdata.getVar("RDEPENDS") or "")
        debian_cmp_remap(rdepends)
        rrecommends = bb.utils.explode_dep_versions2(localdata.getVar("RRECOMMENDS") or "")
        debian_cmp_remap(rrecommends)
        rsuggests = bb.utils.explode_dep_versions2(localdata.getVar("RSUGGESTS") or "")
        debian_cmp_remap(rsuggests)
        # Deliberately drop version information here, not wanted/supported by ipk
        rprovides = dict.fromkeys(bb.utils.explode_dep_versions2(localdata.getVar("RPROVIDES") or ""), [])
        rprovides = collections.OrderedDict(sorted(rprovides.items(), key=lambda x: x[0]))
        debian_cmp_remap(rprovides)
        rreplaces = bb.utils.explode_dep_versions2(localdata.getVar("RREPLACES") or "")
        debian_cmp_remap(rreplaces)
        rconflicts = bb.utils.explode_dep_versions2(localdata.getVar("RCONFLICTS") or "")
        debian_cmp_remap(rconflicts)

        if rdepends:
            ctrlfile.write("Depends: %s\n" % bb.utils.join_deps(rdepends))
        if rsuggests:
            ctrlfile.write("Suggests: %s\n" % bb.utils.join_deps(rsuggests))
        if rrecommends:
            ctrlfile.write("Recommends: %s\n" % bb.utils.join_deps(rrecommends))
        if rprovides:
            ctrlfile.write("Provides: %s\n" % bb.utils.join_deps(rprovides))
        if rreplaces:
            ctrlfile.write("Replaces: %s\n" % bb.utils.join_deps(rreplaces))
        if rconflicts:
            ctrlfile.write("Conflicts: %s\n" % bb.utils.join_deps(rconflicts))
        ctrlfile.write("Source: %s\n" % recipesource)
        ctrlfile.close()

        for script in ["preinst", "postinst", "prerm", "postrm"]:
            scriptvar = localdata.getVar('pkg_%s' % script)
            if not scriptvar:
                continue
            scriptfile = open(os.path.join(controldir, script), 'w')
            scriptfile.write(scriptvar)
            scriptfile.close()
            os.chmod(os.path.join(controldir, script), 0o755)

        conffiles_str = ' '.join(get_conffiles(pkg, d))
        if conffiles_str:
            conffiles = open(os.path.join(controldir, 'conffiles'), 'w')
            for f in conffiles_str.split():
                if os.path.exists(oe.path.join(root, f)):
                    conffiles.write('%s\n' % f)
            conffiles.close()

        os.chdir(basedir)
        subprocess.check_output("PATH=\"%s\" %s %s %s" % (localdata.getVar("PATH"),
                                                          d.getVar("OPKGBUILDCMD"), pkg, pkgoutdir),
                                stderr=subprocess.STDOUT,
                                shell=True)

        if d.getVar('IPK_SIGN_PACKAGES') == '1':
            ipkver = "%s-%s" % (d.getVar('PKGV'), d.getVar('PKGR'))
            ipk_to_sign = "%s/%s_%s_%s.ipk" % (pkgoutdir, pkgname, ipkver, d.getVar('PACKAGE_ARCH'))
            sign_ipk(d, ipk_to_sign)

    finally:
        cleanupcontrol(root)
        bb.utils.unlockfile(lf)

# Otherwise allarch packages may change depending on override configuration}


python is_machine_specific () {
def is_machine_specific(d):
    """Determine whether the current recipe is machine specific"""
    machinepaths = set(machine_paths(d))
    srcuri = d.getVar("SRC_URI").split()
    for url in srcuri:
        fetcher = bb.fetch2.Fetch([srcuri], d)
        if url.startswith("file://"):
            if any(fetcher.localpath(url).startswith(mp + "/") for mp in machinepaths):
                return True
}


python legitimize_package_name () {
def legitimize_package_name(s):
    """
    Make sure package names are legitimate strings
    """
    import re

    def fixutf(m):
        cp = m.group(1)
        if cp:
            return ('\\u%s' % cp).encode('latin-1').decode('unicode_escape')

    # Handle unicode codepoints encoded as <U0123>, as in glibc locale files.
    s = re.sub(r'<U([0-9A-Fa-f]{1,4})>', fixutf, s)

    # Remaining package name validity fixes
    return s.lower().replace('_', '-').replace('@', '+').replace(',', '+').replace('/', '-')
}


python lsb_distro_identifier () {
def lsb_distro_identifier(d):
    adjust = d.getVar('LSB_DISTRO_ADJUST')
    adjust_func = None
    if adjust:
        try:
            adjust_func = globals()[adjust]
        except KeyError:
            pass
    return oe.lsb.distro_identifier(adjust_func)
}


python machine_paths () {
def machine_paths(d):
    """List any existing machine specific filespath directories"""
    machine = d.getVar("MACHINE")
    filespathpkg = d.getVar("FILESPATHPKG").split(":")
    for basepath in d.getVar("FILESPATHBASE").split(":"):
        for pkgpath in filespathpkg:
            machinepath = os.path.join(basepath, pkgpath, machine)
            if os.path.isdir(machinepath):
                yield machinepath
}


python mapping_rename_hook () {
def mapping_rename_hook(d):
    """
    Rewrite variables to account for package renaming in things
    like debian.bbclass or manual PKG variable name changes
    """
    pkg = d.getVar("PKG")
    runtime_mapping_rename("RDEPENDS", pkg, d)
    runtime_mapping_rename("RRECOMMENDS", pkg, d)
    runtime_mapping_rename("RSUGGESTS", pkg, d)}


python multilib_pkg_extend () {
def multilib_pkg_extend(d, pkg):
    variants = (d.getVar("MULTILIB_VARIANTS") or "").split()
    if not variants:
        return pkg
    pkgs = pkg
    for v in variants:
        pkgs = pkgs + " " + v + "-" + pkg
    return pkgs
}


python oe_import () {
def oe_import(d):
    import sys

    bbpath = d.getVar("BBPATH").split(":")
    sys.path[0:0] = [os.path.join(dir, "lib") for dir in bbpath]

    def inject(name, value):
        """Make a python object accessible from the metadata"""
        if hasattr(bb.utils, "_context"):
            bb.utils._context[name] = value
        else:
            __builtins__[name] = value

    import oe.data
    for toimport in oe.data.typed_value("OE_IMPORTS", d):
        try:
            imported = __import__(toimport)
            inject(toimport.split(".", 1)[0], imported)
        except AttributeError as e:
            bb.error("Error importing OE modules: %s" % str(e))
    return ""

# We need the oe module name space early (before INHERITs get added)}


python oe_terminal () {
def oe_terminal(command, title, d):
    import oe.data
    import oe.terminal

    envdata = bb.data.init()

    for v in os.environ:
        envdata.setVar(v, os.environ[v])
        envdata.setVarFlag(v, 'export', '1')

    for export in oe.data.typed_value('OE_TERMINAL_EXPORTS', d):
        value = d.getVar(export)
        if value is not None:
            os.environ[export] = str(value)
            envdata.setVar(export, str(value))
            envdata.setVarFlag(export, 'export', '1')
        if export == "PSEUDO_DISABLED":
            if "PSEUDO_UNLOAD" in os.environ:
                del os.environ["PSEUDO_UNLOAD"]
            envdata.delVar("PSEUDO_UNLOAD")

    # Add in all variables from the user's original environment which
    # haven't subsequntly been set/changed
    origbbenv = d.getVar("BB_ORIGENV", False) or {}
    for key in origbbenv:
        if key in envdata:
            continue
        value = origbbenv.getVar(key)
        if value is not None:
            os.environ[key] = str(value)
            envdata.setVar(key, str(value))
            envdata.setVarFlag(key, 'export', '1')

    # Use original PATH as a fallback
    path = d.getVar('PATH') + ":" + origbbenv.getVar('PATH')
    os.environ['PATH'] = path
    envdata.setVar('PATH', path)

    # A complex PS1 might need more escaping of chars.
    # Lets not export PS1 instead.
    envdata.delVar("PS1")

    # Replace command with an executable wrapper script
    command = emit_terminal_func(command, envdata, d)

    terminal = oe.data.typed_value('OE_TERMINAL', d).lower()
    if terminal == 'none':
        bb.fatal('Devshell usage disabled with OE_TERMINAL')
    elif terminal != 'auto':
        try:
            oe.terminal.spawn(terminal, command, title, None, d)
            return
        except oe.terminal.UnsupportedTerminal:
            bb.warn('Unsupported terminal "%s", defaulting to "auto"' %
                    terminal)
        except oe.terminal.ExecutionError as exc:
            bb.fatal('Unable to spawn terminal %s: %s' % (terminal, exc))

    try:
        oe.terminal.spawn_preferred(command, title, None, d)
    except oe.terminal.NoSupportedTerminals as nosup:
        nosup.terms.remove("false")
        cmds = '\n\t'.join(nosup.terms).replace("{command}",
                    "do_terminal").replace("{title}", title)
        bb.fatal('No valid terminal found, unable to open devshell.\n' +
                'Tried the following commands:\n\t%s' % cmds)
    except oe.terminal.ExecutionError as exc:
        bb.fatal('Unable to spawn terminal %s: %s' % (terminal, exc))
}


python oe_terminal_prioritized () {
def oe_terminal_prioritized():
    import oe.terminal
    return " ".join(o.name for o in oe.terminal.prioritized())
}


python oecore_update_bblayers () {
    # bblayers.conf is out of date, so see if we can resolve that

    current_lconf = int(d.getVar('LCONF_VERSION'))
    lconf_version = int(d.getVar('LAYER_CONF_VERSION'))

    failmsg = """Your version of bblayers.conf has the wrong LCONF_VERSION (has ${LCONF_VERSION}, expecting ${LAYER_CONF_VERSION}).
Please compare your file against bblayers.conf.sample and merge any changes before continuing.
"${SANITY_DIFF_TOOL} conf/bblayers.conf ${SANITY_BBLAYERCONF_SAMPLE}"

is a good way to visualise the changes."""
    failmsg = d.expand(failmsg)

    if not current_lconf:
        raise NotImplementedError(failmsg)

    lines = []

    if current_lconf < 4:
        raise NotImplementedError(failmsg)

    bblayers_fn = bblayers_conf_file(d)
    lines = sanity_conf_read(bblayers_fn)

    if current_lconf == 4 and lconf_version > 4:
        topdir_var = '$' + '{TOPDIR}'
        index, bbpath_line = sanity_conf_find_line('BBPATH', lines)
        if bbpath_line:
            start = bbpath_line.find('"')
            if start != -1 and (len(bbpath_line) != (start + 1)):
                if bbpath_line[start + 1] == '"':
                    lines[index] = (bbpath_line[:start + 1] +
                                    topdir_var + bbpath_line[start + 1:])
                else:
                    if not topdir_var in bbpath_line:
                        lines[index] = (bbpath_line[:start + 1] +
                                    topdir_var + ':' + bbpath_line[start + 1:])
            else:
                raise NotImplementedError(failmsg)
        else:
            index, bbfiles_line = sanity_conf_find_line('BBFILES', lines)
            if bbfiles_line:
                lines.insert(index, 'BBPATH = "' + topdir_var + '"\n')
            else:
                raise NotImplementedError(failmsg)

        current_lconf += 1
        sanity_conf_update(bblayers_fn, lines, 'LCONF_VERSION', current_lconf)
        bb.note("Your conf/bblayers.conf has been automatically updated.")
        return

    elif current_lconf == 5 and lconf_version > 5:
        # Null update, to avoid issues with people switching between poky and other distros
        current_lconf = 6
        sanity_conf_update(bblayers_fn, lines, 'LCONF_VERSION', current_lconf)
        bb.note("Your conf/bblayers.conf has been automatically updated.")
        return

        status.addresult()

    elif current_lconf == 6 and lconf_version > 6:
        # Handle rename of meta-yocto -> meta-poky
        # This marks the start of separate version numbers but code is needed in OE-Core
        # for the migration, one last time.
        layers = d.getVar('BBLAYERS').split()
        layers = [ os.path.basename(path) for path in layers ]
        if 'meta-yocto' in layers:
            found = False
            while True:
                index, meta_yocto_line = sanity_conf_find_line(r'.*meta-yocto[\'"\s\n]', lines)
                if meta_yocto_line:
                    lines[index] = meta_yocto_line.replace('meta-yocto', 'meta-poky')
                    found = True
                else:
                    break
            if not found:
                raise NotImplementedError(failmsg)
            index, meta_yocto_line = sanity_conf_find_line('LCONF_VERSION.*\n', lines)
            if meta_yocto_line:
                lines[index] = 'POKY_BBLAYERS_CONF_VERSION = "1"\n'
            else:
                raise NotImplementedError(failmsg)
            with open(bblayers_fn, "w") as f:
                f.write(''.join(lines))
            bb.note("Your conf/bblayers.conf has been automatically updated.")
            return
        current_lconf += 1
        sanity_conf_update(bblayers_fn, lines, 'LCONF_VERSION', current_lconf)
        bb.note("Your conf/bblayers.conf has been automatically updated.")
        return

    raise NotImplementedError(failmsg)
}


python oecore_update_localconf () {
    # Check we are using a valid local.conf
    current_conf  = d.getVar('CONF_VERSION')
    conf_version =  d.getVar('LOCALCONF_VERSION')

    failmsg = """Your version of local.conf was generated from an older/newer version of
local.conf.sample and there have been updates made to this file. Please compare the two
files and merge any changes before continuing.

Matching the version numbers will remove this message.

\"${SANITY_DIFF_TOOL} conf/local.conf ${SANITY_LOCALCONF_SAMPLE}\"

is a good way to visualise the changes."""
    failmsg = d.expand(failmsg)

    raise NotImplementedError(failmsg)
}


python oecore_update_siteconf () {
    # If we have a site.conf, check it's valid
    current_sconf = d.getVar('SCONF_VERSION')
    sconf_version = d.getVar('SITE_CONF_VERSION')

    failmsg = """Your version of site.conf was generated from an older version of
site.conf.sample and there have been updates made to this file. Please compare the two
files and merge any changes before continuing.

Matching the version numbers will remove this message.

\"${SANITY_DIFF_TOOL} conf/site.conf ${SANITY_SITECONF_SAMPLE}\"

is a good way to visualise the changes."""
    failmsg = d.expand(failmsg)

    raise NotImplementedError(failmsg)
}


python package_depchains () {
    """
    For a given set of prefix and postfix modifiers, make those packages
    RRECOMMENDS on the corresponding packages for its RDEPENDS.

    Example:  If package A depends upon package B, and A's .bb emits an
    A-dev package, this would make A-dev Recommends: B-dev.

    If only one of a given suffix is specified, it will take the RRECOMMENDS
    based on the RDEPENDS of *all* other packages. If more than one of a given
    suffix is specified, its will only use the RDEPENDS of the single parent
    package.
    """

    packages  = d.getVar('PACKAGES')
    postfixes = (d.getVar('DEPCHAIN_POST') or '').split()
    prefixes  = (d.getVar('DEPCHAIN_PRE') or '').split()

    def pkg_adddeprrecs(pkg, base, suffix, getname, depends, d):

        #bb.note('depends for %s is %s' % (base, depends))
        rreclist = bb.utils.explode_dep_versions2(d.getVar('RRECOMMENDS_' + pkg) or "")

        for depend in sorted(depends):
            if depend.find('-native') != -1 or depend.find('-cross') != -1 or depend.startswith('virtual/'):
                #bb.note("Skipping %s" % depend)
                continue
            if depend.endswith('-dev'):
                depend = depend[:-4]
            if depend.endswith('-dbg'):
                depend = depend[:-4]
            pkgname = getname(depend, suffix)
            #bb.note("Adding %s for %s" % (pkgname, depend))
            if pkgname not in rreclist and pkgname != pkg:
                rreclist[pkgname] = []

        #bb.note('setting: RRECOMMENDS_%s=%s' % (pkg, ' '.join(rreclist)))
        d.setVar('RRECOMMENDS_%s' % pkg, bb.utils.join_deps(rreclist, commasep=False))

    def pkg_addrrecs(pkg, base, suffix, getname, rdepends, d):

        #bb.note('rdepends for %s is %s' % (base, rdepends))
        rreclist = bb.utils.explode_dep_versions2(d.getVar('RRECOMMENDS_' + pkg) or "")

        for depend in sorted(rdepends):
            if depend.find('virtual-locale-') != -1:
                #bb.note("Skipping %s" % depend)
                continue
            if depend.endswith('-dev'):
                depend = depend[:-4]
            if depend.endswith('-dbg'):
                depend = depend[:-4]
            pkgname = getname(depend, suffix)
            #bb.note("Adding %s for %s" % (pkgname, depend))
            if pkgname not in rreclist and pkgname != pkg:
                rreclist[pkgname] = []

        #bb.note('setting: RRECOMMENDS_%s=%s' % (pkg, ' '.join(rreclist)))
        d.setVar('RRECOMMENDS_%s' % pkg, bb.utils.join_deps(rreclist, commasep=False))

    def add_dep(list, dep):
        if dep not in list:
            list.append(dep)

    depends = []
    for dep in bb.utils.explode_deps(d.getVar('DEPENDS') or ""):
        add_dep(depends, dep)

    rdepends = []
    for pkg in packages.split():
        for dep in bb.utils.explode_deps(d.getVar('RDEPENDS_' + pkg) or ""):
            add_dep(rdepends, dep)

    #bb.note('rdepends is %s' % rdepends)

    def post_getname(name, suffix):
        return '%s%s' % (name, suffix)
    def pre_getname(name, suffix):
        return '%s%s' % (suffix, name)

    pkgs = {}
    for pkg in packages.split():
        for postfix in postfixes:
            if pkg.endswith(postfix):
                if not postfix in pkgs:
                    pkgs[postfix] = {}
                pkgs[postfix][pkg] = (pkg[:-len(postfix)], post_getname)

        for prefix in prefixes:
            if pkg.startswith(prefix):
                if not prefix in pkgs:
                    pkgs[prefix] = {}
                pkgs[prefix][pkg] = (pkg[:-len(prefix)], pre_getname)

    if "-dbg" in pkgs:
        pkglibdeps = read_libdep_files(d)
        pkglibdeplist = []
        for pkg in pkglibdeps:
            for k in pkglibdeps[pkg]:
                add_dep(pkglibdeplist, k)
        dbgdefaultdeps = ((d.getVar('DEPCHAIN_DBGDEFAULTDEPS') == '1') or (bb.data.inherits_class('packagegroup', d)))

    for suffix in pkgs:
        for pkg in pkgs[suffix]:
            if d.getVarFlag('RRECOMMENDS_' + pkg, 'nodeprrecs'):
                continue
            (base, func) = pkgs[suffix][pkg]
            if suffix == "-dev":
                pkg_adddeprrecs(pkg, base, suffix, func, depends, d)
            elif suffix == "-dbg":
                if not dbgdefaultdeps:
                    pkg_addrrecs(pkg, base, suffix, func, pkglibdeplist, d)
                    continue
            if len(pkgs[suffix]) == 1:
                pkg_addrrecs(pkg, base, suffix, func, rdepends, d)
            else:
                rdeps = []
                for dep in bb.utils.explode_deps(d.getVar('RDEPENDS_' + base) or ""):
                    add_dep(rdeps, dep)
                pkg_addrrecs(pkg, base, suffix, func, rdeps, d)
}


python package_do_filedeps () {
    if d.getVar('SKIP_FILEDEPS') == '1':
        return

    pkgdest = d.getVar('PKGDEST')
    packages = d.getVar('PACKAGES')
    rpmdeps = d.getVar('RPMDEPS')

    def chunks(files, n):
        return [files[i:i+n] for i in range(0, len(files), n)]

    pkglist = []
    for pkg in packages.split():
        if d.getVar('SKIP_FILEDEPS_' + pkg) == '1':
            continue
        if pkg.endswith('-dbg') or pkg.endswith('-doc') or pkg.find('-locale-') != -1 or pkg.find('-localedata-') != -1 or pkg.find('-gconv-') != -1 or pkg.find('-charmap-') != -1 or pkg.startswith('kernel-module-') or pkg.endswith('-src'):
            continue
        for files in chunks(pkgfiles[pkg], 100):
            pkglist.append((pkg, files, rpmdeps, pkgdest))

    processed = oe.utils.multiprocess_launch(oe.package.filedeprunner, pkglist, d)

    provides_files = {}
    requires_files = {}

    for result in processed:
        (pkg, provides, requires) = result

        if pkg not in provides_files:
            provides_files[pkg] = []
        if pkg not in requires_files:
            requires_files[pkg] = []

        for file in sorted(provides):
            provides_files[pkg].append(file)
            key = "FILERPROVIDES_" + file + "_" + pkg
            d.appendVar(key, " " + " ".join(provides[file]))

        for file in sorted(requires):
            requires_files[pkg].append(file)
            key = "FILERDEPENDS_" + file + "_" + pkg
            d.appendVar(key, " " + " ".join(requires[file]))

    for pkg in requires_files:
        d.setVar("FILERDEPENDSFLIST_" + pkg, " ".join(requires_files[pkg]))
    for pkg in provides_files:
        d.setVar("FILERPROVIDESFLIST_" + pkg, " ".join(provides_files[pkg]))
}


python package_do_pkgconfig () {
    import re

    packages = d.getVar('PACKAGES')
    workdir = d.getVar('WORKDIR')
    pkgdest = d.getVar('PKGDEST')

    shlibs_dirs = d.getVar('SHLIBSDIRS').split()
    shlibswork_dir = d.getVar('SHLIBSWORKDIR')

    pc_re = re.compile(r'(.*)\.pc$')
    var_re = re.compile(r'(.*)=(.*)')
    field_re = re.compile(r'(.*): (.*)')

    pkgconfig_provided = {}
    pkgconfig_needed = {}
    for pkg in packages.split():
        pkgconfig_provided[pkg] = []
        pkgconfig_needed[pkg] = []
        for file in pkgfiles[pkg]:
                m = pc_re.match(file)
                if m:
                    pd = bb.data.init()
                    name = m.group(1)
                    pkgconfig_provided[pkg].append(name)
                    if not os.access(file, os.R_OK):
                        continue
                    f = open(file, 'r')
                    lines = f.readlines()
                    f.close()
                    for l in lines:
                        m = var_re.match(l)
                        if m:
                            name = m.group(1)
                            val = m.group(2)
                            pd.setVar(name, pd.expand(val))
                            continue
                        m = field_re.match(l)
                        if m:
                            hdr = m.group(1)
                            exp = pd.expand(m.group(2))
                            if hdr == 'Requires':
                                pkgconfig_needed[pkg] += exp.replace(',', ' ').split()

    for pkg in packages.split():
        pkgs_file = os.path.join(shlibswork_dir, pkg + ".pclist")
        if pkgconfig_provided[pkg] != []:
            f = open(pkgs_file, 'w')
            for p in pkgconfig_provided[pkg]:
                f.write('%s\n' % p)
            f.close()

    # Go from least to most specific since the last one found wins
    for dir in reversed(shlibs_dirs):
        if not os.path.exists(dir):
            continue
        for file in sorted(os.listdir(dir)):
            m = re.match(r'^(.*)\.pclist$', file)
            if m:
                pkg = m.group(1)
                fd = open(os.path.join(dir, file))
                lines = fd.readlines()
                fd.close()
                pkgconfig_provided[pkg] = []
                for l in lines:
                    pkgconfig_provided[pkg].append(l.rstrip())

    for pkg in packages.split():
        deps = []
        for n in pkgconfig_needed[pkg]:
            found = False
            for k in pkgconfig_provided.keys():
                if n in pkgconfig_provided[k]:
                    if k != pkg and not (k in deps):
                        deps.append(k)
                    found = True
            if found == False:
                bb.note("couldn't find pkgconfig module '%s' in any package" % n)
        deps_file = os.path.join(pkgdest, pkg + ".pcdeps")
        if len(deps):
            fd = open(deps_file, 'w')
            for dep in deps:
                fd.write(dep + '\n')
            fd.close()
}


python package_do_shlibs () {
    import itertools
    import re, pipes
    import subprocess

    exclude_shlibs = d.getVar('EXCLUDE_FROM_SHLIBS', False)
    if exclude_shlibs:
        bb.note("not generating shlibs")
        return

    lib_re = re.compile(r"^.*\.so")
    libdir_re = re.compile(r".*/%s$" % d.getVar('baselib'))

    packages = d.getVar('PACKAGES')

    shlib_pkgs = []
    exclusion_list = d.getVar("EXCLUDE_PACKAGES_FROM_SHLIBS")
    if exclusion_list:
        for pkg in packages.split():
            if pkg not in exclusion_list.split():
                shlib_pkgs.append(pkg)
            else:
                bb.note("not generating shlibs for %s" % pkg)
    else:
        shlib_pkgs = packages.split()

    targetos = d.getVar('TARGET_OS')

    workdir = d.getVar('WORKDIR')

    ver = d.getVar('PKGV')
    if not ver:
        msg = "PKGV not defined"
        package_qa_handle_error("pkgv-undefined", msg, d)
        return

    pkgdest = d.getVar('PKGDEST')

    shlibswork_dir = d.getVar('SHLIBSWORKDIR')

    def linux_so(file, pkg, pkgver, d):
        needs_ldconfig = False
        needed = set()
        sonames = set()
        renames = []
        ldir = os.path.dirname(file).replace(pkgdest + "/" + pkg, '')
        cmd = d.getVar('OBJDUMP') + " -p " + pipes.quote(file) + " 2>/dev/null"
        fd = os.popen(cmd)
        lines = fd.readlines()
        fd.close()
        rpath = tuple()
        for l in lines:
            m = re.match(r"\s+RPATH\s+([^\s]*)", l)
            if m:
                rpaths = m.group(1).replace("$ORIGIN", ldir).split(":")
                rpath = tuple(map(os.path.normpath, rpaths))
        for l in lines:
            m = re.match(r"\s+NEEDED\s+([^\s]*)", l)
            if m:
                dep = m.group(1)
                if dep not in needed:
                    needed.add((dep, file, rpath))
            m = re.match(r"\s+SONAME\s+([^\s]*)", l)
            if m:
                this_soname = m.group(1)
                prov = (this_soname, ldir, pkgver)
                if not prov in sonames:
                    # if library is private (only used by package) then do not build shlib for it
                    import fnmatch
                    if not private_libs or len([i for i in private_libs if fnmatch.fnmatch(this_soname, i)]) == 0:
                        sonames.add(prov)
                if libdir_re.match(os.path.dirname(file)):
                    needs_ldconfig = True
                if snap_symlinks and (os.path.basename(file) != this_soname):
                    renames.append((file, os.path.join(os.path.dirname(file), this_soname)))
        return (needs_ldconfig, needed, sonames, renames)

    def darwin_so(file, needed, sonames, renames, pkgver):
        if not os.path.exists(file):
            return
        ldir = os.path.dirname(file).replace(pkgdest + "/" + pkg, '')

        def get_combinations(base):
            #
            # Given a base library name, find all combinations of this split by "." and "-"
            #
            combos = []
            options = base.split(".")
            for i in range(1, len(options) + 1):
                combos.append(".".join(options[0:i]))
            options = base.split("-")
            for i in range(1, len(options) + 1):
                combos.append("-".join(options[0:i]))
            return combos

        if (file.endswith('.dylib') or file.endswith('.so')) and not pkg.endswith('-dev') and not pkg.endswith('-dbg') and not pkg.endswith('-src'):
            # Drop suffix
            name = os.path.basename(file).rsplit(".",1)[0]
            # Find all combinations
            combos = get_combinations(name)
            for combo in combos:
                if not combo in sonames:
                    prov = (combo, ldir, pkgver)
                    sonames.add(prov)
        if file.endswith('.dylib') or file.endswith('.so'):
            rpath = []
            p = subprocess.Popen([d.expand("${HOST_PREFIX}otool"), '-l', file], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            out, err = p.communicate()
            # If returned successfully, process stdout for results
            if p.returncode == 0:
                for l in out.split("\n"):
                    l = l.strip()
                    if l.startswith('path '):
                        rpath.append(l.split()[1])

        p = subprocess.Popen([d.expand("${HOST_PREFIX}otool"), '-L', file], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        out, err = p.communicate()
        # If returned successfully, process stdout for results
        if p.returncode == 0:
            for l in out.split("\n"):
                l = l.strip()
                if not l or l.endswith(":"):
                    continue
                if "is not an object file" in l:
                    continue
                name = os.path.basename(l.split()[0]).rsplit(".", 1)[0]
                if name and name not in needed[pkg]:
                     needed[pkg].add((name, file, tuple()))

    def mingw_dll(file, needed, sonames, renames, pkgver):
        if not os.path.exists(file):
            return

        if file.endswith(".dll"):
            # assume all dlls are shared objects provided by the package
            sonames.add((os.path.basename(file), os.path.dirname(file).replace(pkgdest + "/" + pkg, ''), pkgver))

        if (file.endswith(".dll") or file.endswith(".exe")):
            # use objdump to search for "DLL Name: .*\.dll"
            p = subprocess.Popen([d.expand("${HOST_PREFIX}objdump"), "-p", file], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            out, err = p.communicate()
            # process the output, grabbing all .dll names
            if p.returncode == 0:
                for m in re.finditer(r"DLL Name: (.*?\.dll)$", out.decode(), re.MULTILINE | re.IGNORECASE):
                    dllname = m.group(1)
                    if dllname:
                        needed[pkg].add((dllname, file, tuple()))

    if d.getVar('PACKAGE_SNAP_LIB_SYMLINKS') == "1":
        snap_symlinks = True
    else:
        snap_symlinks = False

    use_ldconfig = bb.utils.contains('DISTRO_FEATURES', 'ldconfig', True, False, d)

    needed = {}

    shlib_provider = oe.package.read_shlib_providers(d)

    for pkg in shlib_pkgs:
        private_libs = d.getVar('PRIVATE_LIBS_' + pkg) or d.getVar('PRIVATE_LIBS') or ""
        private_libs = private_libs.split()
        needs_ldconfig = False
        bb.debug(2, "calculating shlib provides for %s" % pkg)

        pkgver = d.getVar('PKGV_' + pkg)
        if not pkgver:
            pkgver = d.getVar('PV_' + pkg)
        if not pkgver:
            pkgver = ver

        needed[pkg] = set()
        sonames = set()
        renames = []
        linuxlist = []
        for file in pkgfiles[pkg]:
                soname = None
                if cpath.islink(file):
                    continue
                if targetos == "darwin" or targetos == "darwin8":
                    darwin_so(file, needed, sonames, renames, pkgver)
                elif targetos.startswith("mingw"):
                    mingw_dll(file, needed, sonames, renames, pkgver)
                elif os.access(file, os.X_OK) or lib_re.match(file):
                    linuxlist.append(file)

        if linuxlist:
            results = oe.utils.multiprocess_launch(linux_so, linuxlist, d, extraargs=(pkg, pkgver, d))
            for r in results:
                ldconfig = r[0]
                needed[pkg] |= r[1]
                sonames |= r[2]
                renames.extend(r[3])
                needs_ldconfig = needs_ldconfig or ldconfig

        for (old, new) in renames:
            bb.note("Renaming %s to %s" % (old, new))
            os.rename(old, new)
            pkgfiles[pkg].remove(old)

        shlibs_file = os.path.join(shlibswork_dir, pkg + ".list")
        if len(sonames):
            fd = open(shlibs_file, 'w')
            for s in sonames:
                if s[0] in shlib_provider and s[1] in shlib_provider[s[0]]:
                    (old_pkg, old_pkgver) = shlib_provider[s[0]][s[1]]
                    if old_pkg != pkg:
                        bb.warn('%s-%s was registered as shlib provider for %s, changing it to %s-%s because it was built later' % (old_pkg, old_pkgver, s[0], pkg, pkgver))
                bb.debug(1, 'registering %s-%s as shlib provider for %s' % (pkg, pkgver, s[0]))
                fd.write(s[0] + ':' + s[1] + ':' + s[2] + '\n')
                if s[0] not in shlib_provider:
                    shlib_provider[s[0]] = {}
                shlib_provider[s[0]][s[1]] = (pkg, pkgver)
            fd.close()
        if needs_ldconfig and use_ldconfig:
            bb.debug(1, 'adding ldconfig call to postinst for %s' % pkg)
            postinst = d.getVar('pkg_postinst_%s' % pkg)
            if not postinst:
                postinst = '#!/bin/sh\n'
            postinst += d.getVar('ldconfig_postinst_fragment')
            d.setVar('pkg_postinst_%s' % pkg, postinst)
        bb.debug(1, 'LIBNAMES: pkg %s sonames %s' % (pkg, sonames))

    assumed_libs = d.getVar('ASSUME_SHLIBS')
    if assumed_libs:
        libdir = d.getVar("libdir")
        for e in assumed_libs.split():
            l, dep_pkg = e.split(":")
            lib_ver = None
            dep_pkg = dep_pkg.rsplit("_", 1)
            if len(dep_pkg) == 2:
                lib_ver = dep_pkg[1]
            dep_pkg = dep_pkg[0]
            if l not in shlib_provider:
                shlib_provider[l] = {}
            shlib_provider[l][libdir] = (dep_pkg, lib_ver)

    libsearchpath = [d.getVar('libdir'), d.getVar('base_libdir')]

    for pkg in shlib_pkgs:
        bb.debug(2, "calculating shlib requirements for %s" % pkg)

        private_libs = d.getVar('PRIVATE_LIBS_' + pkg) or d.getVar('PRIVATE_LIBS') or ""
        private_libs = private_libs.split()

        deps = list()
        for n in needed[pkg]:
            # if n is in private libraries, don't try to search provider for it
            # this could cause problem in case some abc.bb provides private
            # /opt/abc/lib/libfoo.so.1 and contains /usr/bin/abc depending on system library libfoo.so.1
            # but skipping it is still better alternative than providing own
            # version and then adding runtime dependency for the same system library
            import fnmatch
            if private_libs and len([i for i in private_libs if fnmatch.fnmatch(n[0], i)]) > 0:
                bb.debug(2, '%s: Dependency %s covered by PRIVATE_LIBS' % (pkg, n[0]))
                continue
            if n[0] in shlib_provider.keys():
                shlib_provider_map = shlib_provider[n[0]]
                matches = set()
                for p in itertools.chain(list(n[2]), sorted(shlib_provider_map.keys()), libsearchpath):
                    if p in shlib_provider_map:
                        matches.add(p)
                if len(matches) > 1:
                    matchpkgs = ', '.join([shlib_provider_map[match][0] for match in matches])
                    bb.error("%s: Multiple shlib providers for %s: %s (used by files: %s)" % (pkg, n[0], matchpkgs, n[1]))
                elif len(matches) == 1:
                    (dep_pkg, ver_needed) = shlib_provider_map[matches.pop()]

                    bb.debug(2, '%s: Dependency %s requires package %s (used by files: %s)' % (pkg, n[0], dep_pkg, n[1]))

                    if dep_pkg == pkg:
                        continue

                    if ver_needed:
                        dep = "%s (>= %s)" % (dep_pkg, ver_needed)
                    else:
                        dep = dep_pkg
                    if not dep in deps:
                        deps.append(dep)
                    continue
            bb.note("Couldn't find shared library provider for %s, used by files: %s" % (n[0], n[1]))

        deps_file = os.path.join(pkgdest, pkg + ".shlibdeps")
        if os.path.exists(deps_file):
            os.remove(deps_file)
        if len(deps):
            fd = open(deps_file, 'w')
            for dep in sorted(deps):
                fd.write(dep + '\n')
            fd.close()
}


python package_do_split_locales () {
    if (d.getVar('PACKAGE_NO_LOCALE') == '1'):
        bb.debug(1, "package requested not splitting locales")
        return

    packages = (d.getVar('PACKAGES') or "").split()

    datadir = d.getVar('datadir')
    if not datadir:
        bb.note("datadir not defined")
        return

    dvar = d.getVar('PKGD')
    pn = d.getVar('LOCALEBASEPN')

    if pn + '-locale' in packages:
        packages.remove(pn + '-locale')

    localedir = os.path.join(dvar + datadir, 'locale')

    if not cpath.isdir(localedir):
        bb.debug(1, "No locale files in this package")
        return

    locales = os.listdir(localedir)

    summary = d.getVar('SUMMARY') or pn
    description = d.getVar('DESCRIPTION') or ""
    locale_section = d.getVar('LOCALE_SECTION')
    mlprefix = d.getVar('MLPREFIX') or ""
    for l in sorted(locales):
        ln = legitimize_package_name(l)
        pkg = pn + '-locale-' + ln
        packages.append(pkg)
        d.setVar('FILES_' + pkg, os.path.join(datadir, 'locale', l))
        d.setVar('RRECOMMENDS_' + pkg, '%svirtual-locale-%s' % (mlprefix, ln))
        d.setVar('RPROVIDES_' + pkg, '%s-locale %s%s-translation' % (pn, mlprefix, ln))
        d.setVar('SUMMARY_' + pkg, '%s - %s translations' % (summary, l))
        d.setVar('DESCRIPTION_' + pkg, '%s  This package contains language translation files for the %s locale.' % (description, l))
        if locale_section:
            d.setVar('SECTION_' + pkg, locale_section)

    d.setVar('PACKAGES', ' '.join(packages))

    # Disabled by RP 18/06/07
    # Wildcards aren't supported in debian
    # They break with ipkg since glibc-locale* will mean that
    # glibc-localedata-translit* won't install as a dependency
    # for some other package which breaks meta-toolchain
    # Probably breaks since virtual-locale- isn't provided anywhere
    #rdep = (d.getVar('RDEPENDS_%s' % pn) or "").split()
    #rdep.append('%s-locale*' % pn)
    #d.setVar('RDEPENDS_%s' % pn, ' '.join(rdep))
}


python package_fixsymlinks () {
    import errno
    pkgdest = d.getVar('PKGDEST')
    packages = d.getVar("PACKAGES", False).split()

    dangling_links = {}
    pkg_files = {}
    for pkg in packages:
        dangling_links[pkg] = []
        pkg_files[pkg] = []
        inst_root = os.path.join(pkgdest, pkg)
        for path in pkgfiles[pkg]:
                rpath = path[len(inst_root):]
                pkg_files[pkg].append(rpath)
                rtarget = cpath.realpath(path, inst_root, True, assume_dir = True)
                if not cpath.lexists(rtarget):
                    dangling_links[pkg].append(os.path.normpath(rtarget[len(inst_root):]))

    newrdepends = {}
    for pkg in dangling_links:
        for l in dangling_links[pkg]:
            found = False
            bb.debug(1, "%s contains dangling link %s" % (pkg, l))
            for p in packages:
                if l in pkg_files[p]:
                        found = True
                        bb.debug(1, "target found in %s" % p)
                        if p == pkg:
                            break
                        if pkg not in newrdepends:
                            newrdepends[pkg] = []
                        newrdepends[pkg].append(p)
                        break
            if found == False:
                bb.note("%s contains dangling symlink to %s" % (pkg, l))

    for pkg in newrdepends:
        rdepends = bb.utils.explode_dep_versions2(d.getVar('RDEPENDS_' + pkg) or "")
        for p in newrdepends[pkg]:
            if p not in rdepends:
                rdepends[p] = []
        d.setVar('RDEPENDS_' + pkg, bb.utils.join_deps(rdepends, commasep=False))
}


python package_get_auto_pr () {
    import oe.prservice
    import re

    # Support per recipe PRSERV_HOST
    pn = d.getVar('PN')
    host = d.getVar("PRSERV_HOST_" + pn)
    if not (host is None):
        d.setVar("PRSERV_HOST", host)

    pkgv = d.getVar("PKGV")

    # PR Server not active, handle AUTOINC
    if not d.getVar('PRSERV_HOST'):
        if 'AUTOINC' in pkgv:
            d.setVar("PKGV", pkgv.replace("AUTOINC", "0"))
        return

    auto_pr = None
    pv = d.getVar("PV")
    version = d.getVar("PRAUTOINX")
    pkgarch = d.getVar("PACKAGE_ARCH")
    checksum = d.getVar("BB_TASKHASH")

    if d.getVar('PRSERV_LOCKDOWN'):
        auto_pr = d.getVar('PRAUTO_' + version + '_' + pkgarch) or d.getVar('PRAUTO_' + version) or None
        if auto_pr is None:
            bb.fatal("Can NOT get PRAUTO from lockdown exported file")
        d.setVar('PRAUTO',str(auto_pr))
        return

    try:
        conn = d.getVar("__PRSERV_CONN")
        if conn is None:
            conn = oe.prservice.prserv_make_conn(d)
        if conn is not None:
            if "AUTOINC" in pkgv:
                srcpv = bb.fetch2.get_srcrev(d)
                base_ver = "AUTOINC-%s" % version[:version.find(srcpv)]
                value = conn.getPR(base_ver, pkgarch, srcpv)
                d.setVar("PKGV", pkgv.replace("AUTOINC", str(value)))

            auto_pr = conn.getPR(version, pkgarch, checksum)
    except Exception as e:
        bb.fatal("Can NOT get PRAUTO, exception %s" %  str(e))
    if auto_pr is None:
        bb.fatal("Can NOT get PRAUTO from remote PR service")
    d.setVar('PRAUTO',str(auto_pr))
}


python package_name_hook () {
    bb.build.exec_func('debian_package_name_hook', d)
}


python package_package_name_hook () {
    """
    A package_name_hook function can be used to rewrite the package names by
    changing PKG.  For an example, see debian.bbclass.
    """
    pass
}


python package_populate_pkgdata_dir () {
def package_populate_pkgdata_dir(pkgdatadir, d):
    import glob

    postinsts = []
    seendirs = set()
    stagingdir = d.getVar("PKGDATA_DIR")
    pkgarchs = ['${MACHINE_ARCH}']
    pkgarchs = pkgarchs + list(reversed(d.getVar("PACKAGE_EXTRA_ARCHS").split()))
    pkgarchs.append('allarch')

    bb.utils.mkdirhier(pkgdatadir)
    for pkgarch in pkgarchs:
        for manifest in glob.glob(d.expand("${SSTATE_MANIFESTS}/manifest-%s-*.packagedata" % pkgarch)):
            with open(manifest, "r") as f:
                for l in f:
                    l = l.strip()
                    dest = l.replace(stagingdir, "")
                    if l.endswith("/"):
                        staging_copydir(l, pkgdatadir, dest, seendirs)
                        continue
                    try:
                        staging_copyfile(l, pkgdatadir, dest, postinsts, seendirs)
                    except FileExistsError:
                        continue
}


python package_prepare_pkgdata () {
    import copy
    import glob

    taskdepdata = d.getVar("BB_TASKDEPDATA", False)
    mytaskname = d.getVar("BB_RUNTASK")
    if mytaskname.endswith("_setscene"):
        mytaskname = mytaskname.replace("_setscene", "")
    workdir = d.getVar("WORKDIR")
    pn = d.getVar("PN")
    stagingdir = d.getVar("PKGDATA_DIR")
    pkgdatadir = d.getVar("WORKDIR_PKGDATA")

    # Detect bitbake -b usage
    nodeps = d.getVar("BB_LIMITEDDEPS") or False
    if nodeps:
        staging_package_populate_pkgdata_dir(pkgdatadir, d)
        return

    start = None
    configuredeps = []
    for dep in taskdepdata:
        data = taskdepdata[dep]
        if data[1] == mytaskname and data[0] == pn:
            start = dep
            break
    if start is None:
        bb.fatal("Couldn't find ourself in BB_TASKDEPDATA?")

    # We need to figure out which sysroot files we need to expose to this task.
    # This needs to match what would get restored from sstate, which is controlled
    # ultimately by calls from bitbake to setscene_depvalid().
    # That function expects a setscene dependency tree. We build a dependency tree
    # condensed to inter-sstate task dependencies, similar to that used by setscene
    # tasks. We can then call into setscene_depvalid() and decide
    # which dependencies we can "see" and should expose in the recipe specific sysroot.
    setscenedeps = copy.deepcopy(taskdepdata)

    start = set([start])

    sstatetasks = d.getVar("SSTATETASKS").split()
    # Add recipe specific tasks referenced by setscene_depvalid()
    sstatetasks.append("do_stash_locale")

    # If start is an sstate task (like do_package) we need to add in its direct dependencies
    # else the code below won't recurse into them.
    for dep in set(start):
        for dep2 in setscenedeps[dep][3]:
            start.add(dep2)
        start.remove(dep)

    # Create collapsed do_populate_sysroot -> do_populate_sysroot tree
    for dep in taskdepdata:
        data = setscenedeps[dep]
        if data[1] not in sstatetasks:
            for dep2 in setscenedeps:
                data2 = setscenedeps[dep2]
                if dep in data2[3]:
                    data2[3].update(setscenedeps[dep][3])
                    data2[3].remove(dep)
            if dep in start:
                start.update(setscenedeps[dep][3])
                start.remove(dep)
            del setscenedeps[dep]

    # Remove circular references
    for dep in setscenedeps:
        if dep in setscenedeps[dep][3]:
            setscenedeps[dep][3].remove(dep)

    # Direct dependencies should be present and can be depended upon
    for dep in set(start):
        if setscenedeps[dep][1] == "do_packagedata":
            if dep not in configuredeps:
                configuredeps.append(dep)

    msgbuf = []
    # Call into setscene_depvalid for each sub-dependency and only copy sysroot files
    # for ones that would be restored from sstate.
    done = list(start)
    next = list(start)
    while next:
        new = []
        for dep in next:
            data = setscenedeps[dep]
            for datadep in data[3]:
                if datadep in done:
                    continue
                taskdeps = {}
                taskdeps[dep] = setscenedeps[dep][:2]
                taskdeps[datadep] = setscenedeps[datadep][:2]
                retval = setscene_depvalid(datadep, taskdeps, [], d, msgbuf)
                done.append(datadep)
                new.append(datadep)
                if retval:
                    msgbuf.append("Skipping setscene dependency %s" % datadep)
                    continue
                if datadep not in configuredeps and setscenedeps[datadep][1] == "do_packagedata":
                    configuredeps.append(datadep)
                    msgbuf.append("Adding dependency on %s" % setscenedeps[datadep][0])
                else:
                    msgbuf.append("Following dependency on %s" % setscenedeps[datadep][0])
        next = new

    # This logging is too verbose for day to day use sadly
    #bb.debug(2, "\n".join(msgbuf))

    seendirs = set()
    postinsts = []
    multilibs = {}
    manifests = {}

    msg_adding = []

    for dep in configuredeps:
        c = setscenedeps[dep][0]
        msg_adding.append(c)

        manifest, d2 = oe.sstatesig.find_sstate_manifest(c, setscenedeps[dep][2], "packagedata", d, multilibs)
        destsysroot = pkgdatadir

        if manifest:
            targetdir = destsysroot
            with open(manifest, "r") as f:
                manifests[dep] = manifest
                for l in f:
                    l = l.strip()
                    dest = targetdir + l.replace(stagingdir, "")
                    if l.endswith("/"):
                        staging_copydir(l, targetdir, dest, seendirs)
                        continue
                    staging_copyfile(l, targetdir, dest, postinsts, seendirs)

    bb.note("Installed into pkgdata-sysroot: %s" % str(msg_adding))

}


python package_qa_add_message () {
def package_qa_add_message(messages, section, new_msg):
    if section not in messages:
        messages[section] = new_msg
    else:
        messages[section] = messages[section] + "\n" + new_msg
}


python package_qa_check_arch () {
def package_qa_check_arch(path,name,d, elf, messages):
    """
    Check if archs are compatible
    """
    import re, oe.elf

    if not elf:
        return

    target_os   = d.getVar('TARGET_OS')
    target_arch = d.getVar('TARGET_ARCH')
    provides = d.getVar('PROVIDES')
    bpn = d.getVar('BPN')

    if target_arch == "allarch":
        pn = d.getVar('PN')
        package_qa_add_message(messages, "arch", pn + ": Recipe inherits the allarch class, but has packaged architecture-specific binaries")
        return

    # FIXME: Cross package confuse this check, so just skip them
    for s in ['cross', 'nativesdk', 'cross-canadian']:
        if bb.data.inherits_class(s, d):
            return

    # avoid following links to /usr/bin (e.g. on udev builds)
    # we will check the files pointed to anyway...
    if os.path.islink(path):
        return

    #if this will throw an exception, then fix the dict above
    (machine, osabi, abiversion, littleendian, bits) \
        = oe.elf.machine_dict(d)[target_os][target_arch]

    # Check the architecture and endiannes of the binary
    is_32 = (("virtual/kernel" in provides) or bb.data.inherits_class("module", d)) and \
            (target_os == "linux-gnux32" or target_os == "linux-muslx32" or \
            target_os == "linux-gnu_ilp32" or re.match(r'mips64.*32', d.getVar('DEFAULTTUNE')))
    is_bpf = (oe.qa.elf_machine_to_string(elf.machine()) == "BPF")
    if not ((machine == elf.machine()) or is_32 or is_bpf):
        package_qa_add_message(messages, "arch", "Architecture did not match (%s, expected %s) on %s" % \
                 (oe.qa.elf_machine_to_string(elf.machine()), oe.qa.elf_machine_to_string(machine), package_qa_clean_path(path,d)))
    elif not ((bits == elf.abiSize()) or is_32 or is_bpf):
        package_qa_add_message(messages, "arch", "Bit size did not match (%d to %d) %s on %s" % \
                 (bits, elf.abiSize(), bpn, package_qa_clean_path(path,d)))
    elif not ((littleendian == elf.isLittleEndian()) or is_bpf):
        package_qa_add_message(messages, "arch", "Endiannes did not match (%d to %d) on %s" % \
                 (littleendian, elf.isLittleEndian(), package_qa_clean_path(path,d)))
}


python package_qa_check_buildpaths () {
def package_qa_check_buildpaths(path, name, d, elf, messages):
    """
    Check for build paths inside target files and error if not found in the whitelist
    """
    # Ignore .debug files, not interesting
    if path.find(".debug") != -1:
        return

    # Ignore symlinks
    if os.path.islink(path):
        return

    # Ignore ipk and deb's CONTROL dir
    if path.find(name + "/CONTROL/") != -1 or path.find(name + "/DEBIAN/") != -1:
        return

    tmpdir = bytes(d.getVar('TMPDIR'), encoding="utf-8")
    with open(path, 'rb') as f:
        file_content = f.read()
        if tmpdir in file_content:
            trimmed = path.replace(os.path.join (d.getVar("PKGDEST"), name), "")
            package_qa_add_message(messages, "buildpaths", "File %s in package %s contains reference to TMPDIR" % (trimmed, name))

}


python package_qa_check_dbg () {
def package_qa_check_dbg(path, name, d, elf, messages):
    """
    Check for ".debug" files or directories outside of the dbg package
    """

    if not "-dbg" in name and not "-ptest" in name:
        if '.debug' in path.split(os.path.sep):
            package_qa_add_message(messages, "debug-files", "non debug package contains .debug directory: %s path %s" % \
                     (name, package_qa_clean_path(path,d)))
}


python package_qa_check_deps () {
def package_qa_check_deps(pkg, pkgdest, d):

    localdata = bb.data.createCopy(d)
    localdata.setVar('OVERRIDES', pkg)

    def check_valid_deps(var):
        try:
            rvar = bb.utils.explode_dep_versions2(localdata.getVar(var) or "")
        except ValueError as e:
            bb.fatal("%s_%s: %s" % (var, pkg, e))
        for dep in rvar:
            for v in rvar[dep]:
                if v and not v.startswith(('< ', '= ', '> ', '<= ', '>=')):
                    error_msg = "%s_%s is invalid: %s (%s)   only comparisons <, =, >, <=, and >= are allowed" % (var, pkg, dep, v)
                    package_qa_handle_error("dep-cmp", error_msg, d)

    check_valid_deps('RDEPENDS')
    check_valid_deps('RRECOMMENDS')
    check_valid_deps('RSUGGESTS')
    check_valid_deps('RPROVIDES')
    check_valid_deps('RREPLACES')
    check_valid_deps('RCONFLICTS')
}


python package_qa_check_desktop () {
def package_qa_check_desktop(path, name, d, elf, messages):
    """
    Run all desktop files through desktop-file-validate.
    """
    if path.endswith(".desktop"):
        desktop_file_validate = os.path.join(d.getVar('STAGING_BINDIR_NATIVE'),'desktop-file-validate')
        output = os.popen("%s %s" % (desktop_file_validate, path))
        # This only produces output on errors
        for l in output:
            package_qa_add_message(messages, "desktop", "Desktop file issue: " + l.strip())
}


python package_qa_check_dev () {
def package_qa_check_dev(path, name, d, elf, messages):
    """
    Check for ".so" library symlinks in non-dev packages
    """

    if not name.endswith("-dev") and not name.endswith("-dbg") and not name.endswith("-ptest") and not name.startswith("nativesdk-") and path.endswith(".so") and os.path.islink(path):
        package_qa_add_message(messages, "dev-so", "non -dev/-dbg/nativesdk- package contains symlink .so: %s path '%s'" % \
                 (name, package_qa_clean_path(path,d)))
}


python package_qa_check_dev_elf () {
def package_qa_check_dev_elf(path, name, d, elf, messages):
    """
    Check that -dev doesn't contain real shared libraries.  The test has to
    check that the file is not a link and is an ELF object as some recipes
    install link-time .so files that are linker scripts.
    """
    if name.endswith("-dev") and path.endswith(".so") and not os.path.islink(path) and elf:
        package_qa_add_message(messages, "dev-elf", "-dev package contains non-symlink .so: %s path '%s'" % \
                 (name, package_qa_clean_path(path,d)))
}


python package_qa_check_encoding () {
def package_qa_check_encoding(keys, encode, d):
    def check_encoding(key, enc):
        sane = True
        value = d.getVar(key)
        if value:
            try:
                s = value.encode(enc)
            except UnicodeDecodeError as e:
                error_msg = "%s has non %s characters" % (key,enc)
                sane = False
                package_qa_handle_error("invalid-chars", error_msg, d)
        return sane

    for key in keys:
        sane = check_encoding(key, encode)
        if not sane:
            break
}


python package_qa_check_expanded_d () {
def package_qa_check_expanded_d(package, d, messages):
    """
    Check for the expanded D (${D}) value in pkg_* and FILES
    variables, warn the user to use it correctly.
    """
    sane = True
    expanded_d = d.getVar('D')

    for var in 'FILES','pkg_preinst', 'pkg_postinst', 'pkg_prerm', 'pkg_postrm':
        bbvar = d.getVar(var + "_" + package) or ""
        if expanded_d in bbvar:
            if var == 'FILES':
                package_qa_add_message(messages, "expanded-d", "FILES in %s recipe should not contain the ${D} variable as it references the local build directory not the target filesystem, best solution is to remove the ${D} reference" % package)
                sane = False
            else:
                package_qa_add_message(messages, "expanded-d", "%s in %s recipe contains ${D}, it should be replaced by $D instead" % (var, package))
                sane = False
    return sane
}


python package_qa_check_host_user () {
def package_qa_check_host_user(path, name, d, elf, messages):
    """Check for paths outside of /home which are owned by the user running bitbake."""

    if not os.path.lexists(path):
        return

    dest = d.getVar('PKGDEST')
    pn = d.getVar('PN')
    home = os.path.join(dest, 'home')
    if path == home or path.startswith(home + os.sep):
        return

    try:
        stat = os.lstat(path)
    except OSError as exc:
        import errno
        if exc.errno != errno.ENOENT:
            raise
    else:
        check_uid = int(d.getVar('HOST_USER_UID'))
        if stat.st_uid == check_uid:
            package_qa_add_message(messages, "host-user-contaminated", "%s: %s is owned by uid %d, which is the same as the user running bitbake. This may be due to host contamination" % (pn, package_qa_clean_path(path, d, name), check_uid))
            return False

        check_gid = int(d.getVar('HOST_USER_GID'))
        if stat.st_gid == check_gid:
            package_qa_add_message(messages, "host-user-contaminated", "%s: %s is owned by gid %d, which is the same as the user running bitbake. This may be due to host contamination" % (pn, package_qa_clean_path(path, d, name), check_gid))
            return False
    return True
}


python package_qa_check_infodir () {
def package_qa_check_infodir(path, name, d, elf, messages):
    """
    Check that /usr/share/info/dir isn't shipped in a particular package
    """
    infodir = d.expand("${infodir}/dir")

    if infodir in path:
        package_qa_add_message(messages, "infodir", "The /usr/share/info/dir file is not meant to be shipped in a particular package.")
}


python package_qa_check_libdir () {
def package_qa_check_libdir(d):
    """
    Check for wrong library installation paths. For instance, catch
    recipes installing /lib/bar.so when ${base_libdir}="lib32" or
    installing in /usr/lib64 when ${libdir}="/usr/lib"
    """
    import re

    pkgdest = d.getVar('PKGDEST')
    base_libdir = d.getVar("base_libdir") + os.sep
    libdir = d.getVar("libdir") + os.sep
    libexecdir = d.getVar("libexecdir") + os.sep
    exec_prefix = d.getVar("exec_prefix") + os.sep

    messages = []

    # The re's are purposely fuzzy, as some there are some .so.x.y.z files
    # that don't follow the standard naming convention. It checks later
    # that they are actual ELF files
    lib_re = re.compile(r"^/lib.+\.so(\..+)?$")
    exec_re = re.compile(r"^%s.*/lib.+\.so(\..+)?$" % exec_prefix)

    for root, dirs, files in os.walk(pkgdest):
        if root == pkgdest:
            # Skip subdirectories for any packages with libdir in INSANE_SKIP
            skippackages = []
            for package in dirs:
                if 'libdir' in (d.getVar('INSANE_SKIP_' + package) or "").split():
                    bb.note("Package %s skipping libdir QA test" % (package))
                    skippackages.append(package)
                elif d.getVar('PACKAGE_DEBUG_SPLIT_STYLE') == 'debug-file-directory' and package.endswith("-dbg"):
                    bb.note("Package %s skipping libdir QA test for PACKAGE_DEBUG_SPLIT_STYLE equals debug-file-directory" % (package))
                    skippackages.append(package)
            for package in skippackages:
                dirs.remove(package)
        for file in files:
            full_path = os.path.join(root, file)
            rel_path = os.path.relpath(full_path, pkgdest)
            if os.sep in rel_path:
                package, rel_path = rel_path.split(os.sep, 1)
                rel_path = os.sep + rel_path
                if lib_re.match(rel_path):
                    if base_libdir not in rel_path:
                        # make sure it's an actual ELF file
                        elf = oe.qa.ELFFile(full_path)
                        try:
                            elf.open()
                            messages.append("%s: found library in wrong location: %s" % (package, rel_path))
                        except (oe.qa.NotELFFileError):
                            pass
                if exec_re.match(rel_path):
                    if libdir not in rel_path and libexecdir not in rel_path:
                        # make sure it's an actual ELF file
                        elf = oe.qa.ELFFile(full_path)
                        try:
                            elf.open()
                            messages.append("%s: found library in wrong location: %s" % (package, rel_path))
                        except (oe.qa.NotELFFileError):
                            pass

    if messages:
        package_qa_handle_error("libdir", "\n".join(messages), d)
}


python package_qa_check_libexec () {
def package_qa_check_libexec(path,name, d, elf, messages):

    # Skip the case where the default is explicitly /usr/libexec
    libexec = d.getVar('libexecdir')
    if libexec == "/usr/libexec":
        return True

    if 'libexec' in path.split(os.path.sep):
        package_qa_add_message(messages, "libexec", "%s: %s is using libexec please relocate to %s" % (name, package_qa_clean_path(path, d), libexec))
        return False

    return True
}


python package_qa_check_perllocalpod () {
def package_qa_check_perllocalpod(pkg, d, messages):
    """
    Check that the recipe didn't ship a perlocal.pod file, which shouldn't be
    installed in a distribution package.  cpan.bbclass sets NO_PERLLOCAL=1 to
    handle this for most recipes.
    """
    import glob
    pkgd = oe.path.join(d.getVar('PKGDEST'), pkg)
    podpath = oe.path.join(pkgd, d.getVar("libdir"), "perl*", "*", "*", "perllocal.pod")

    matches = glob.glob(podpath)
    if matches:
        matches = [package_qa_clean_path(path, d, pkg) for path in matches]
        msg = "%s contains perllocal.pod (%s), should not be installed" % (pkg, " ".join(matches))
        package_qa_add_message(messages, "perllocalpod", msg)
}


python package_qa_check_rdepends () {
def package_qa_check_rdepends(pkg, pkgdest, skip, taskdeps, packages, d):
    # Don't do this check for kernel/module recipes, there aren't too many debug/development
    # packages and you can get false positives e.g. on kernel-module-lirc-dev
    if bb.data.inherits_class("kernel", d) or bb.data.inherits_class("module-base", d):
        return

    if not "-dbg" in pkg and not "packagegroup-" in pkg and not "-image" in pkg:
        localdata = bb.data.createCopy(d)
        localdata.setVar('OVERRIDES', localdata.getVar('OVERRIDES') + ':' + pkg)

        # Now check the RDEPENDS
        rdepends = bb.utils.explode_deps(localdata.getVar('RDEPENDS') or "")

        # Now do the sanity check!!!
        if "build-deps" not in skip:
            for rdepend in rdepends:
                if "-dbg" in rdepend and "debug-deps" not in skip:
                    error_msg = "%s rdepends on %s" % (pkg,rdepend)
                    package_qa_handle_error("debug-deps", error_msg, d)
                if (not "-dev" in pkg and not "-staticdev" in pkg) and rdepend.endswith("-dev") and "dev-deps" not in skip:
                    error_msg = "%s rdepends on %s" % (pkg, rdepend)
                    package_qa_handle_error("dev-deps", error_msg, d)
                if rdepend not in packages:
                    rdep_data = oe.packagedata.read_subpkgdata(rdepend, d)
                    if rdep_data and 'PN' in rdep_data and rdep_data['PN'] in taskdeps:
                        continue
                    if not rdep_data or not 'PN' in rdep_data:
                        pkgdata_dir = d.getVar("PKGDATA_DIR")
                        try:
                            possibles = os.listdir("%s/runtime-rprovides/%s/" % (pkgdata_dir, rdepend))
                        except OSError:
                            possibles = []
                        for p in possibles:
                            rdep_data = oe.packagedata.read_subpkgdata(p, d)
                            if rdep_data and 'PN' in rdep_data and rdep_data['PN'] in taskdeps:
                                break
                    if rdep_data and 'PN' in rdep_data and rdep_data['PN'] in taskdeps:
                        continue
                    if rdep_data and 'PN' in rdep_data:
                        error_msg = "%s rdepends on %s, but it isn't a build dependency, missing %s in DEPENDS or PACKAGECONFIG?" % (pkg, rdepend, rdep_data['PN'])
                    else:
                        error_msg = "%s rdepends on %s, but it isn't a build dependency?" % (pkg, rdepend)
                    package_qa_handle_error("build-deps", error_msg, d)

        if "file-rdeps" not in skip:
            ignored_file_rdeps = set(['/bin/sh', '/usr/bin/env', 'rtld(GNU_HASH)'])
            if bb.data.inherits_class('nativesdk', d):
                ignored_file_rdeps |= set(['/bin/bash', '/usr/bin/perl', 'perl'])
            # For Saving the FILERDEPENDS
            filerdepends = {}
            rdep_data = oe.packagedata.read_subpkgdata(pkg, d)
            for key in rdep_data:
                if key.startswith("FILERDEPENDS_"):
                    for subkey in bb.utils.explode_deps(rdep_data[key]):
                        if subkey not in ignored_file_rdeps and \
                                not subkey.startswith('perl('):
                            # We already know it starts with FILERDEPENDS_
                            filerdepends[subkey] = key[13:]

            if filerdepends:
                done = rdepends[:]
                # Add the rprovides of itself
                if pkg not in done:
                    done.insert(0, pkg)

                # The python is not a package, but python-core provides it, so
                # skip checking /usr/bin/python if python is in the rdeps, in
                # case there is a RDEPENDS_pkg = "python" in the recipe.
                for py in [ d.getVar('MLPREFIX') + "python", "python" ]:
                    if py in done:
                        filerdepends.pop("/usr/bin/python",None)
                        done.remove(py)
                for rdep in done:
                    # The file dependencies may contain package names, e.g.,
                    # perl
                    filerdepends.pop(rdep,None)

                    # For Saving the FILERPROVIDES, RPROVIDES and FILES_INFO
                    rdep_data = oe.packagedata.read_subpkgdata(rdep, d)
                    for key in rdep_data:
                        if key.startswith("FILERPROVIDES_") or key.startswith("RPROVIDES_"):
                            for subkey in bb.utils.explode_deps(rdep_data[key]):
                                filerdepends.pop(subkey,None)
                        # Add the files list to the rprovides
                        if key == "FILES_INFO":
                            # Use eval() to make it as a dict
                            for subkey in eval(rdep_data[key]):
                                filerdepends.pop(subkey,None)
                    if not filerdepends:
                        # Break if all the file rdepends are met
                        break
            if filerdepends:
                for key in filerdepends:
                    error_msg = "%s contained in package %s requires %s, but no providers found in RDEPENDS_%s?" % \
                            (filerdepends[key].replace("_%s" % pkg, "").replace("@underscore@", "_"), pkg, key, pkg)
                    package_qa_handle_error("file-rdeps", error_msg, d)}


python package_qa_check_rpath () {
def package_qa_check_rpath(file,name, d, elf, messages):
    """
    Check for dangerous RPATHs
    """
    if not elf:
        return

    if os.path.islink(file):
        return

    bad_dirs = [d.getVar('BASE_WORKDIR'), d.getVar('STAGING_DIR_TARGET')]

    phdrs = elf.run_objdump("-p", d)

    import re
    rpath_re = re.compile(r"\s+RPATH\s+(.*)")
    for line in phdrs.split("\n"):
        m = rpath_re.match(line)
        if m:
            rpath = m.group(1)
            for dir in bad_dirs:
                if dir in rpath:
                    package_qa_add_message(messages, "rpaths", "package %s contains bad RPATH %s in file %s" % (name, rpath, file))
}


python package_qa_check_src_uri () {
def package_qa_check_src_uri(pn, d, messages):
    import re

    if "${PN}" in d.getVar("SRC_URI", False):
        package_qa_handle_error("src-uri-bad", "%s: SRC_URI uses PN not BPN" % pn, d)

    pn = d.getVar("SRC_URI")
    if re.search(r"github\.com/.+/.+/archive/.+", pn):
        package_qa_handle_error("src-uri-bad", "%s: SRC_URI uses unstable GitHub archives" % pn, d)


# The PACKAGE FUNC to scan each package}


python package_qa_check_staticdev () {
def package_qa_check_staticdev(path, name, d, elf, messages):
    """
    Check for ".a" library in non-staticdev packages
    There are a number of exceptions to this rule, -pic packages can contain
    static libraries, the _nonshared.a belong with their -dev packages and
    libgcc.a, libgcov.a will be skipped in their packages
    """

    if not name.endswith("-pic") and not name.endswith("-staticdev") and not name.endswith("-ptest") and path.endswith(".a") and not path.endswith("_nonshared.a"):
        package_qa_add_message(messages, "staticdev", "non -staticdev package contains static .a library: %s path '%s'" % \
                 (name, package_qa_clean_path(path,d)))
}


python package_qa_check_symlink_to_sysroot () {
def package_qa_check_symlink_to_sysroot(path, name, d, elf, messages):
    """
    Check that the package doesn't contain any absolute symlinks to the sysroot.
    """
    if os.path.islink(path):
        target = os.readlink(path)
        if os.path.isabs(target):
            tmpdir = d.getVar('TMPDIR')
            if target.startswith(tmpdir):
                trimmed = path.replace(os.path.join (d.getVar("PKGDEST"), name), "")
                package_qa_add_message(messages, "symlink-to-sysroot", "Symlink %s in %s points to TMPDIR" % (trimmed, name))

# Check license variables}


python package_qa_check_useless_rpaths () {
def package_qa_check_useless_rpaths(file, name, d, elf, messages):
    """
    Check for RPATHs that are useless but not dangerous
    """
    def rpath_eq(a, b):
        return os.path.normpath(a) == os.path.normpath(b)

    if not elf:
        return

    if os.path.islink(file):
        return

    libdir = d.getVar("libdir")
    base_libdir = d.getVar("base_libdir")

    phdrs = elf.run_objdump("-p", d)

    import re
    rpath_re = re.compile(r"\s+RPATH\s+(.*)")
    for line in phdrs.split("\n"):
        m = rpath_re.match(line)
        if m:
            rpath = m.group(1)
            if rpath_eq(rpath, libdir) or rpath_eq(rpath, base_libdir):
                # The dynamic linker searches both these places anyway.  There is no point in
                # looking there again.
                package_qa_add_message(messages, "useless-rpaths", "%s: %s contains probably-redundant RPATH %s" % (name, package_qa_clean_path(file, d), rpath))
}


python package_qa_check_usrmerge () {
def package_qa_check_usrmerge(pkg, d, messages):
    pkgdest = d.getVar('PKGDEST')
    pkg_dir = pkgdest + os.sep + pkg + os.sep
    merged_dirs = ['bin', 'sbin', 'lib'] + d.getVar('MULTILIB_VARIANTS').split()
    for f in merged_dirs:
        if os.path.exists(pkg_dir + f) and not os.path.islink(pkg_dir + f):
            msg = "%s package is not obeying usrmerge distro feature. /%s should be relocated to /usr." % (pkg, f)
            package_qa_add_message(messages, "usrmerge", msg)
            return False
    return True
}


python package_qa_check_xorg_driver_abi () {
def package_qa_check_xorg_driver_abi(path, name, d, elf, messages):
    """
    Check that all packages containing Xorg drivers have ABI dependencies
    """

    # Skip dev, dbg or nativesdk packages
    if name.endswith("-dev") or name.endswith("-dbg") or name.startswith("nativesdk-"):
        return

    driverdir = d.expand("${libdir}/xorg/modules/drivers/")
    if driverdir in path and path.endswith(".so"):
        mlprefix = d.getVar('MLPREFIX') or ''
        for rdep in bb.utils.explode_deps(d.getVar('RDEPENDS_' + name) or ""):
            if rdep.startswith("%sxorg-abi-" % mlprefix):
                return
        package_qa_add_message(messages, "xorg-driver-abi", "Package %s contains Xorg driver (%s) but no xorg-abi- dependencies" % (name, os.path.basename(path)))
}


python package_qa_clean_path () {
def package_qa_clean_path(path, d, pkg=None):
    """
    Remove redundant paths from the path for display.  If pkg isn't set then
    TMPDIR is stripped, otherwise PKGDEST/pkg is stripped.
    """
    if pkg:
        path = path.replace(os.path.join(d.getVar("PKGDEST"), pkg), "/")
    return path.replace(d.getVar("TMPDIR"), "/").replace("//", "/")
}


python package_qa_handle_error () {
def package_qa_handle_error(error_class, error_msg, d):
    if error_class in (d.getVar("ERROR_QA") or "").split():
        package_qa_write_error(error_class, error_msg, d)
        bb.error("QA Issue: %s [%s]" % (error_msg, error_class))
        d.setVar("QA_SANE", False)
        return False
    elif error_class in (d.getVar("WARN_QA") or "").split():
        package_qa_write_error(error_class, error_msg, d)
        bb.warn("QA Issue: %s [%s]" % (error_msg, error_class))
    else:
        bb.note("QA Issue: %s [%s]" % (error_msg, error_class))
    return True
}


python package_qa_hash_style () {
def package_qa_hash_style(path, name, d, elf, messages):
    """
    Check if the binary has the right hash style...
    """

    if not elf:
        return

    if os.path.islink(path):
        return

    gnu_hash = "--hash-style=gnu" in d.getVar('LDFLAGS')
    if not gnu_hash:
        gnu_hash = "--hash-style=both" in d.getVar('LDFLAGS')
    if not gnu_hash:
        return

    sane = False
    has_syms = False

    phdrs = elf.run_objdump("-p", d)

    # If this binary has symbols, we expect it to have GNU_HASH too.
    for line in phdrs.split("\n"):
        if "SYMTAB" in line:
            has_syms = True
        if "GNU_HASH" in line:
            sane = True
        if "[mips32]" in line or "[mips64]" in line:
            sane = True

    if has_syms and not sane:
        package_qa_add_message(messages, "ldflags", "No GNU_HASH in the ELF binary %s, didn't pass LDFLAGS?" % path)

}


python package_qa_package () {
def package_qa_package(warnfuncs, errorfuncs, package, d):
    warnings = {}
    errors = {}

    for func in warnfuncs:
        func(package, d, warnings)
    for func in errorfuncs:
        func(package, d, errors)

    for w in warnings:
        package_qa_handle_error(w, warnings[w], d)
    for e in errors:
        package_qa_handle_error(e, errors[e], d)

    return len(errors) == 0

# Run all recipe-wide warnfuncs and errorfuncs}


python package_qa_recipe () {
def package_qa_recipe(warnfuncs, errorfuncs, pn, d):
    warnings = {}
    errors = {}

    for func in warnfuncs:
        func(pn, d, warnings)
    for func in errorfuncs:
        func(pn, d, errors)

    for w in warnings:
        package_qa_handle_error(w, warnings[w], d)
    for e in errors:
        package_qa_handle_error(e, errors[e], d)

    return len(errors) == 0

# Walk over all files in a directory and call func}


python package_qa_textrel () {
def package_qa_textrel(path, name, d, elf, messages):
    """
    Check if the binary contains relocations in .text
    """

    if not elf:
        return

    if os.path.islink(path):
        return

    phdrs = elf.run_objdump("-p", d)
    sane = True

    import re
    textrel_re = re.compile(r"\s+TEXTREL\s+")
    for line in phdrs.split("\n"):
        if textrel_re.match(line):
            sane = False

    if not sane:
        package_qa_add_message(messages, "textrel", "ELF binary '%s' has relocations in .text" % path)
}


python package_qa_walk () {
def package_qa_walk(warnfuncs, errorfuncs, package, d):
    import oe.qa

    #if this will throw an exception, then fix the dict above
    target_os   = d.getVar('TARGET_OS')
    target_arch = d.getVar('TARGET_ARCH')

    warnings = {}
    errors = {}
    for path in pkgfiles[package]:
            elf = oe.qa.ELFFile(path)
            try:
                elf.open()
            except (IOError, oe.qa.NotELFFileError):
                # IOError can happen if the packaging control files disappear,
                elf = None
            for func in warnfuncs:
                func(path, package, d, elf, warnings)
            for func in errorfuncs:
                func(path, package, d, elf, errors)

    for w in warnings:
        package_qa_handle_error(w, warnings[w], d)
    for e in errors:
        package_qa_handle_error(e, errors[e], d)
}


python package_qa_write_error () {
def package_qa_write_error(type, error, d):
    logfile = d.getVar('QA_LOGFILE')
    if logfile:
        p = d.getVar('P')
        with open(logfile, "a+") as f:
            f.write("%s: %s [%s]\n" % (p, error, type))
}


python parse_debugsources_from_dwarfsrcfiles_output () {
def parse_debugsources_from_dwarfsrcfiles_output(dwarfsrcfiles_output):
    debugfiles = {}

    for line in dwarfsrcfiles_output.splitlines():
        if line.startswith("\t"):
            debugfiles[os.path.normpath(line.split()[0])] = ""

    return debugfiles.keys()
}


python patch_do_patch () {
    import oe.patch

    patchsetmap = {
        "patch": oe.patch.PatchTree,
        "quilt": oe.patch.QuiltTree,
        "git": oe.patch.GitApplyTree,
    }

    cls = patchsetmap[d.getVar('PATCHTOOL') or 'quilt']

    resolvermap = {
        "noop": oe.patch.NOOPResolver,
        "user": oe.patch.UserResolver,
    }

    rcls = resolvermap[d.getVar('PATCHRESOLVE') or 'user']

    classes = {}

    s = d.getVar('S')

    os.putenv('PATH', d.getVar('PATH'))

    # We must use one TMPDIR per process so that the "patch" processes
    # don't generate the same temp file name.

    import tempfile
    process_tmpdir = tempfile.mkdtemp()
    os.environ['TMPDIR'] = process_tmpdir

    for patch in src_patches(d):
        _, _, local, _, _, parm = bb.fetch.decodeurl(patch)

        if "patchdir" in parm:
            patchdir = parm["patchdir"]
            if not os.path.isabs(patchdir):
                patchdir = os.path.join(s, patchdir)
        else:
            patchdir = s

        if not patchdir in classes:
            patchset = cls(patchdir, d)
            resolver = rcls(patchset, oe_terminal)
            classes[patchdir] = (patchset, resolver)
            patchset.Clean()
        else:
            patchset, resolver = classes[patchdir]

        bb.note("Applying patch '%s' (%s)" % (parm['patchname'], oe.path.format_display(local, d)))
        try:
            patchset.Import({"file":local, "strippath": parm['striplevel']}, True)
        except Exception as exc:
            bb.utils.remove(process_tmpdir, True)
            bb.fatal(str(exc))
        try:
            resolver.Resolve()
        except bb.BBHandledException as e:
            bb.utils.remove(process_tmpdir, True)
            bb.fatal(str(e))

    bb.utils.remove(process_tmpdir, True)
    del os.environ['TMPDIR']
}


python patch_task_patch_prefunc () {
    # Prefunc for do_patch
    srcsubdir = d.getVar('S')

    workdir = os.path.abspath(d.getVar('WORKDIR'))
    testsrcdir = os.path.abspath(srcsubdir)
    if (testsrcdir + os.sep).startswith(workdir + os.sep):
        # Double-check that either workdir or S or some directory in-between is a git repository
        found = False
        while testsrcdir != workdir:
            if os.path.exists(os.path.join(testsrcdir, '.git')):
                found = True
                break
            if testsrcdir == workdir:
                break
            testsrcdir = os.path.dirname(testsrcdir)
        if not found:
            bb.fatal('PATCHTOOL = "git" set for source tree that is not a git repository. Refusing to continue as that may result in commits being made in your metadata repository.')

    patchdir = os.path.join(srcsubdir, 'patches')
    if os.path.exists(patchdir):
        if os.listdir(patchdir):
            d.setVar('PATCH_HAS_PATCHES_DIR', '1')
        else:
            os.rmdir(patchdir)
}


python patch_task_postfunc () {
    # Prefunc for task functions between do_unpack and do_patch
    import oe.patch
    import shutil
    func = d.getVar('BB_RUNTASK')
    srcsubdir = d.getVar('S')

    if os.path.exists(srcsubdir):
        if func == 'do_patch':
            haspatches = (d.getVar('PATCH_HAS_PATCHES_DIR') == '1')
            patchdir = os.path.join(srcsubdir, 'patches')
            if os.path.exists(patchdir):
                shutil.rmtree(patchdir)
                if haspatches:
                    stdout, _ = bb.process.run('git status --porcelain patches', cwd=srcsubdir)
                    if stdout:
                        bb.process.run('git checkout patches', cwd=srcsubdir)
        stdout, _ = bb.process.run('git status --porcelain .', cwd=srcsubdir)
        if stdout:
            useroptions = []
            oe.patch.GitApplyTree.gitCommandUserOptions(useroptions, d=d)
            bb.process.run('git add .; git %s commit -a -m "Committing changes from %s\n\n%s"' % (' '.join(useroptions), func, oe.patch.GitApplyTree.ignore_commit_prefix + ' - from %s' % func), cwd=srcsubdir)
}


python perform_packagecopy () {
    enabled = oe.data.typed_value('LICENSE_CREATE_PACKAGE', d)
    if d.getVar('CLASSOVERRIDE') == 'class-target' and enabled:
        lic_files_paths = find_license_files(d)

        # LICENSE_FILES_DIRECTORY starts with '/' so os.path.join cannot be used to join D and LICENSE_FILES_DIRECTORY
        destdir = d.getVar('D') + os.path.join(d.getVar('LICENSE_FILES_DIRECTORY'), d.getVar('PN'))
        copy_license_files(lic_files_paths, destdir)
        add_package_and_files(d)
    import subprocess

    dest = d.getVar('D')
    dvar = d.getVar('PKGD')

    # Start by package population by taking a copy of the installed
    # files to operate on
    # Preserve sparse files and hard links
    cmd = 'tar -cf - -C %s -p -S . | tar -xf - -C %s' % (dest, dvar)
    subprocess.check_output(cmd, shell=True, stderr=subprocess.STDOUT)

    # replace RPATHs for the nativesdk binaries, to make them relocatable
    if bb.data.inherits_class('nativesdk', d) or bb.data.inherits_class('cross-canadian', d):
        rpath_replace (dvar, d)
}


python perform_packagecopy_prepend () {
None}


python poky_update_bblayersconf () {
    current_version = int(d.getVar('POKY_BBLAYERS_CONF_VERSION', True) or -1)
    latest_version = int(d.getVar('REQUIRED_POKY_BBLAYERS_CONF_VERSION', True) or -1)
    if current_version == -1 or latest_version == -1:
        # one or the other missing => malformed configuration
        raise NotImplementedError("You need to update bblayers.conf manually for this version transition")

    success = True

    # check for out of date templateconf.cfg file
    lines = []
    fn = os.path.join(d.getVar('TOPDIR', True), 'conf/templateconf.cfg')

    lines = sanity_conf_read(fn)
    index, meta_yocto_line = sanity_conf_find_line(r'^meta-yocto/', lines)
    if meta_yocto_line:
        lines[index] = meta_yocto_line.replace('meta-yocto', 'meta-poky')
        with open(fn, "w") as f:
            f.write(''.join(lines))
        bb.note("Your conf/templateconf.cfg file was updated from meta-yocto to meta-poky")

    # add any additional layer checks/changes here

    if success:
        current_version = latest_version
        bblayers_fn = bblayers_conf_file(d)
        lines = sanity_conf_read(bblayers_fn)
        # sanity_conf_update() will erroneously find a match when the var name
        # is used in a comment, so do our own here. The code below can be
        # removed when sanity_conf_update() is fixed in OE-Core.
        #sanity_conf_update(bblayers_fn, lines, 'POKY_BBLAYERS_CONF_VERSION', current_version)
        index, line = sanity_conf_find_line(r'^POKY_BBLAYERS_CONF_VERSION', lines)
        lines[index] = 'POKY_BBLAYERS_CONF_VERSION = "%d"\n' % current_version
        with open(bblayers_fn, "w") as f:
            f.write(''.join(lines))
        bb.note("Your conf/bblayers.conf has been automatically updated.")
    if success:
        return

    raise NotImplementedError("You need to update bblayers.conf manually for this version transition")
}


python populate_lic_qa_checksum () {
    """
    Check for changes in the license files.
    """
    sane = True

    lic_files = d.getVar('LIC_FILES_CHKSUM') or ''
    lic = d.getVar('LICENSE')
    pn = d.getVar('PN')

    if lic == "CLOSED":
        return

    if not lic_files and d.getVar('SRC_URI'):
        sane &= package_qa_handle_error("license-checksum", pn + ": Recipe file fetches files and does not have license file information (LIC_FILES_CHKSUM)", d)

    srcdir = d.getVar('S')
    corebase_licensefile = d.getVar('COREBASE') + "/LICENSE"
    for url in lic_files.split():
        try:
            (type, host, path, user, pswd, parm) = bb.fetch.decodeurl(url)
        except bb.fetch.MalformedUrl:
            sane &= package_qa_handle_error("license-checksum", pn + ": LIC_FILES_CHKSUM contains an invalid URL: " + url, d)
            continue
        srclicfile = os.path.join(srcdir, path)
        if not os.path.isfile(srclicfile):
            sane &= package_qa_handle_error("license-checksum", pn + ": LIC_FILES_CHKSUM points to an invalid file: " + srclicfile, d)
            continue

        if (srclicfile == corebase_licensefile):
            bb.warn("${COREBASE}/LICENSE is not a valid license file, please use '${COMMON_LICENSE_DIR}/MIT' for a MIT License file in LIC_FILES_CHKSUM. This will become an error in the future")

        recipemd5 = parm.get('md5', '')
        beginline, endline = 0, 0
        if 'beginline' in parm:
            beginline = int(parm['beginline'])
        if 'endline' in parm:
            endline = int(parm['endline'])

        if (not beginline) and (not endline):
            md5chksum = bb.utils.md5_file(srclicfile)
            with open(srclicfile, 'r', errors='replace') as f:
                license = f.read().splitlines()
        else:
            with open(srclicfile, 'rb') as f:
                import hashlib
                lineno = 0
                license = []
                m = hashlib.md5()
                for line in f:
                    lineno += 1
                    if (lineno >= beginline):
                        if ((lineno <= endline) or not endline):
                            m.update(line)
                            license.append(line.decode('utf-8', errors='replace').rstrip())
                        else:
                            break
                md5chksum = m.hexdigest()
        if recipemd5 == md5chksum:
            bb.note (pn + ": md5 checksum matched for ", url)
        else:
            if recipemd5:
                msg = pn + ": The LIC_FILES_CHKSUM does not match for " + url
                msg = msg + "\n" + pn + ": The new md5 checksum is " + md5chksum
                max_lines = int(d.getVar('QA_MAX_LICENSE_LINES') or 20)
                if not license or license[-1] != '':
                    # Ensure that our license text ends with a line break
                    # (will be added with join() below).
                    license.append('')
                remove = len(license) - max_lines
                if remove > 0:
                    start = max_lines // 2
                    end = start + remove - 1
                    del license[start:end]
                    license.insert(start, '...')
                msg = msg + "\n" + pn + ": Here is the selected license text:" + \
                        "\n" + \
                        "{:v^70}".format(" beginline=%d " % beginline if beginline else "") + \
                        "\n" + "\n".join(license) + \
                        "{:^^70}".format(" endline=%d " % endline if endline else "")
                if beginline:
                    if endline:
                        srcfiledesc = "%s (lines %d through to %d)" % (srclicfile, beginline, endline)
                    else:
                        srcfiledesc = "%s (beginning on line %d)" % (srclicfile, beginline)
                elif endline:
                    srcfiledesc = "%s (ending on line %d)" % (srclicfile, endline)
                else:
                    srcfiledesc = srclicfile
                msg = msg + "\n" + pn + ": Check if the license information has changed in %s to verify that the LICENSE value \"%s\" remains valid" % (srcfiledesc, lic)

            else:
                msg = pn + ": LIC_FILES_CHKSUM is not specified for " +  url
                msg = msg + "\n" + pn + ": The md5 checksum is " + md5chksum
            sane &= package_qa_handle_error("license-checksum", msg, d)

    if not sane:
        bb.fatal("Fatal QA errors found, failing task.")
}


python populate_packages () {
    import glob, re

    workdir = d.getVar('WORKDIR')
    outdir = d.getVar('DEPLOY_DIR')
    dvar = d.getVar('PKGD')
    packages = d.getVar('PACKAGES').split()
    pn = d.getVar('PN')

    bb.utils.mkdirhier(outdir)
    os.chdir(dvar)

    autodebug = not (d.getVar("NOAUTOPACKAGEDEBUG") or False)

    split_source_package = (d.getVar('PACKAGE_DEBUG_SPLIT_STYLE') == 'debug-with-srcpkg')

    # If debug-with-srcpkg mode is enabled then add the source package if it
    # doesn't exist and add the source file contents to the source package.
    if split_source_package:
        src_package_name = ('%s-src' % d.getVar('PN'))
        if not src_package_name in packages:
            packages.append(src_package_name)
        d.setVar('FILES_%s' % src_package_name, '/usr/src/debug')

    # Sanity check PACKAGES for duplicates
    # Sanity should be moved to sanity.bbclass once we have the infrastructure
    package_dict = {}

    for i, pkg in enumerate(packages):
        if pkg in package_dict:
            msg = "%s is listed in PACKAGES multiple times, this leads to packaging errors." % pkg
            package_qa_handle_error("packages-list", msg, d)
        # Ensure the source package gets the chance to pick up the source files
        # before the debug package by ordering it first in PACKAGES. Whether it
        # actually picks up any source files is controlled by
        # PACKAGE_DEBUG_SPLIT_STYLE.
        elif pkg.endswith("-src"):
            package_dict[pkg] = (10, i)
        elif autodebug and pkg.endswith("-dbg"):
            package_dict[pkg] = (30, i)
        else:
            package_dict[pkg] = (50, i)
    packages = sorted(package_dict.keys(), key=package_dict.get)
    d.setVar('PACKAGES', ' '.join(packages))
    pkgdest = d.getVar('PKGDEST')

    seen = []

    # os.mkdir masks the permissions with umask so we have to unset it first
    oldumask = os.umask(0)

    debug = []
    for root, dirs, files in cpath.walk(dvar):
        dir = root[len(dvar):]
        if not dir:
            dir = os.sep
        for f in (files + dirs):
            path = "." + os.path.join(dir, f)
            if "/.debug/" in path or path.endswith("/.debug"):
                debug.append(path)

    for pkg in packages:
        root = os.path.join(pkgdest, pkg)
        bb.utils.mkdirhier(root)

        filesvar = d.getVar('FILES_%s' % pkg) or ""
        if "//" in filesvar:
            msg = "FILES variable for package %s contains '//' which is invalid. Attempting to fix this but you should correct the metadata.\n" % pkg
            package_qa_handle_error("files-invalid", msg, d)
            filesvar.replace("//", "/")

        origfiles = filesvar.split()
        files, symlink_paths = files_from_filevars(origfiles)

        if autodebug and pkg.endswith("-dbg"):
            files.extend(debug)

        for file in files:
            if (not cpath.islink(file)) and (not cpath.exists(file)):
                continue
            if file in seen:
                continue
            seen.append(file)

            def mkdir(src, dest, p):
                src = os.path.join(src, p)
                dest = os.path.join(dest, p)
                fstat = cpath.stat(src)
                os.mkdir(dest)
                os.chmod(dest, fstat.st_mode)
                os.chown(dest, fstat.st_uid, fstat.st_gid)
                if p not in seen:
                    seen.append(p)
                cpath.updatecache(dest)

            def mkdir_recurse(src, dest, paths):
                if cpath.exists(dest + '/' + paths):
                    return
                while paths.startswith("./"):
                    paths = paths[2:]
                p = "."
                for c in paths.split("/"):
                    p = os.path.join(p, c)
                    if not cpath.exists(os.path.join(dest, p)):
                        mkdir(src, dest, p)

            if cpath.isdir(file) and not cpath.islink(file):
                mkdir_recurse(dvar, root, file)
                continue

            mkdir_recurse(dvar, root, os.path.dirname(file))
            fpath = os.path.join(root,file)
            if not cpath.islink(file):
                os.link(file, fpath)
                continue
            ret = bb.utils.copyfile(file, fpath)
            if ret is False or ret == 0:
                bb.fatal("File population failed")

        # Check if symlink paths exist
        for file in symlink_paths:
            if not os.path.exists(os.path.join(root,file)):
                bb.fatal("File '%s' cannot be packaged into '%s' because its "
                         "parent directory structure does not exist. One of "
                         "its parent directories is a symlink whose target "
                         "directory is not included in the package." %
                         (file, pkg))

    os.umask(oldumask)
    os.chdir(workdir)

    # Handle LICENSE_EXCLUSION
    package_list = []
    for pkg in packages:
        if d.getVar('LICENSE_EXCLUSION-' + pkg):
            msg = "%s has an incompatible license. Excluding from packaging." % pkg
            package_qa_handle_error("incompatible-license", msg, d)
        else:
            package_list.append(pkg)
    d.setVar('PACKAGES', ' '.join(package_list))

    unshipped = []
    for root, dirs, files in cpath.walk(dvar):
        dir = root[len(dvar):]
        if not dir:
            dir = os.sep
        for f in (files + dirs):
            path = os.path.join(dir, f)
            if ('.' + path) not in seen:
                unshipped.append(path)

    if unshipped != []:
        msg = pn + ": Files/directories were installed but not shipped in any package:"
        if "installed-vs-shipped" in (d.getVar('INSANE_SKIP_' + pn) or "").split():
            bb.note("Package %s skipping QA tests: installed-vs-shipped" % pn)
        else:
            for f in unshipped:
                msg = msg + "\n  " + f
            msg = msg + "\nPlease set FILES such that these items are packaged. Alternatively if they are unneeded, avoid installing them or delete them within do_install.\n"
            msg = msg + "%s: %d installed and not shipped files." % (pn, len(unshipped))
            package_qa_handle_error("installed-vs-shipped", msg, d)
}


python prelink_setup () {
    oe.utils.write_ld_so_conf(d)
}


python process_dir () {
def process_dir(rootdir, directory, d, break_hardlinks = False):
    import stat

    rootdir = os.path.normpath(rootdir)
    cmd = d.expand('${CHRPATH_BIN}')
    tmpdir = os.path.normpath(d.getVar('TMPDIR', False))
    baseprefix = os.path.normpath(d.expand('${base_prefix}'))
    hostos = d.getVar("HOST_OS")

    #bb.debug("Checking %s for binaries to process" % directory)
    if not os.path.exists(directory):
        return

    if "linux" in hostos:
        process_file = process_file_linux
    elif "darwin" in hostos:
        process_file = process_file_darwin
    else:
        # Relocations not supported
        return

    dirs = os.listdir(directory)
    for file in dirs:
        fpath = directory + "/" + file
        fpath = os.path.normpath(fpath)
        if os.path.islink(fpath):
            # Skip symlinks
            continue

        if os.path.isdir(fpath):
            process_dir(rootdir, fpath, d, break_hardlinks = break_hardlinks)
        else:
            #bb.note("Testing %s for relocatability" % fpath)

            # We need read and write permissions for chrpath, if we don't have
            # them then set them temporarily. Take a copy of the files
            # permissions so that we can restore them afterwards.
            perms = os.stat(fpath)[stat.ST_MODE]
            if os.access(fpath, os.W_OK|os.R_OK):
                perms = None
            else:
                # Temporarily make the file writeable so we can chrpath it
                os.chmod(fpath, perms|stat.S_IRWXU)

            process_file(cmd, fpath, rootdir, baseprefix, tmpdir, d, break_hardlinks = break_hardlinks)

            if perms:
                os.chmod(fpath, perms)
}


python process_file_darwin () {
def process_file_darwin(cmd, fpath, rootdir, baseprefix, tmpdir, d, break_hardlinks = False):
    import subprocess as sub

    p = sub.Popen([d.expand("${HOST_PREFIX}otool"), '-L', fpath],stdout=sub.PIPE,stderr=sub.PIPE)
    out, err = p.communicate()
    # If returned successfully, process stdout for results
    if p.returncode != 0:
        return
    for l in out.split("\n"):
        if "(compatibility" not in l:
            continue
        rpath = l.partition("(compatibility")[0].strip()
        if baseprefix not in rpath:
            continue

        if break_hardlinks:
            bb.utils.break_hardlinks(fpath)

        newpath = "@loader_path/" + os.path.relpath(rpath, os.path.dirname(fpath.replace(rootdir, "/")))
        p = sub.Popen([d.expand("${HOST_PREFIX}install_name_tool"), '-change', rpath, newpath, fpath],stdout=sub.PIPE,stderr=sub.PIPE)
        out, err = p.communicate()
}


python process_file_linux () {
def process_file_linux(cmd, fpath, rootdir, baseprefix, tmpdir, d, break_hardlinks = False):
    import subprocess as sub

    p = sub.Popen([cmd, '-l', fpath],stdout=sub.PIPE,stderr=sub.PIPE)
    out, err = p.communicate()
    # If returned successfully, process stdout for results
    if p.returncode != 0:
        return

    out = out.decode('utf-8')

    # Handle RUNPATH as well as RPATH
    out = out.replace("RUNPATH=","RPATH=")
    # Throw away everything other than the rpath list
    curr_rpath = out.partition("RPATH=")[2]
    #bb.note("Current rpath for %s is %s" % (fpath, curr_rpath.strip()))
    rpaths = curr_rpath.strip().split(":")
    new_rpaths = []
    modified = False
    for rpath in rpaths:
        # If rpath is already dynamic copy it to new_rpath and continue
        if rpath.find("$ORIGIN") != -1:
            new_rpaths.append(rpath)
            continue
        rpath =  os.path.normpath(rpath)
        if baseprefix not in rpath and tmpdir not in rpath:
            # Skip standard search paths
            if rpath in ['/lib', '/usr/lib', '/lib64/', '/usr/lib64']:
                bb.warn("Skipping RPATH %s as is a standard search path for %s" % (rpath, fpath))
                modified = True
                continue
            new_rpaths.append(rpath)
            continue
        new_rpaths.append("$ORIGIN/" + os.path.relpath(rpath, os.path.dirname(fpath.replace(rootdir, "/"))))
        modified = True

    # if we have modified some rpaths call chrpath to update the binary
    if modified:
        if break_hardlinks:
            bb.utils.break_hardlinks(fpath)

        args = ":".join(new_rpaths)
        #bb.note("Setting rpath for %s to %s" %(fpath, args))
        p = sub.Popen([cmd, '-r', args, fpath],stdout=sub.PIPE,stderr=sub.PIPE)
        out, err = p.communicate()
        if p.returncode != 0:
            bb.fatal("%s: chrpath command failed with exit code %d:\n%s%s" % (d.getVar('PN'), p.returncode, out, err))
}


python pstaging_fetch () {
def pstaging_fetch(sstatefetch, d):
    import bb.fetch2

    # Only try and fetch if the user has configured a mirror
    mirrors = d.getVar('SSTATE_MIRRORS')
    if not mirrors:
        return

    # Copy the data object and override DL_DIR and SRC_URI
    localdata = bb.data.createCopy(d)

    dldir = localdata.expand("${SSTATE_DIR}")
    bb.utils.mkdirhier(dldir)

    localdata.delVar('MIRRORS')
    localdata.setVar('FILESPATH', dldir)
    localdata.setVar('DL_DIR', dldir)
    localdata.setVar('PREMIRRORS', mirrors)

    # if BB_NO_NETWORK is set but we also have SSTATE_MIRROR_ALLOW_NETWORK,
    # we'll want to allow network access for the current set of fetches.
    if bb.utils.to_boolean(localdata.getVar('BB_NO_NETWORK')) and \
            bb.utils.to_boolean(localdata.getVar('SSTATE_MIRROR_ALLOW_NETWORK')):
        localdata.delVar('BB_NO_NETWORK')

    # Try a fetch from the sstate mirror, if it fails just return and
    # we will build the package
    uris = ['file://{0};downloadfilename={0}'.format(sstatefetch),
            'file://{0}.siginfo;downloadfilename={0}.siginfo'.format(sstatefetch)]
    if bb.utils.to_boolean(d.getVar("SSTATE_VERIFY_SIG"), False):
        uris += ['file://{0}.sig;downloadfilename={0}.sig'.format(sstatefetch)]

    for srcuri in uris:
        localdata.setVar('SRC_URI', srcuri)
        try:
            fetcher = bb.fetch2.Fetch([srcuri], localdata, cache=False)
            fetcher.download()

        except bb.fetch2.BBFetchException:
            break
}


python qa_check_staged () {
def qa_check_staged(path,d):
    """
    Check staged la and pc files for common problems like references to the work
    directory.

    As this is run after every stage we should be able to find the one
    responsible for the errors easily even if we look at every .pc and .la file.
    """

    sane = True
    tmpdir = d.getVar('TMPDIR')
    workdir = os.path.join(tmpdir, "work")
    recipesysroot = d.getVar("RECIPE_SYSROOT")

    if bb.data.inherits_class("native", d) or bb.data.inherits_class("cross", d):
        pkgconfigcheck = workdir
    else:
        pkgconfigcheck = tmpdir

    skip = (d.getVar('INSANE_SKIP') or "").split()
    skip_la = False
    if 'la' in skip:
        bb.note("Recipe %s skipping qa checking: la" % d.getVar('PN'))
        skip_la = True

    skip_pkgconfig = False
    if 'pkgconfig' in skip:
        bb.note("Recipe %s skipping qa checking: pkgconfig" % d.getVar('PN'))
        skip_pkgconfig = True

    # find all .la and .pc files
    # read the content
    # and check for stuff that looks wrong
    for root, dirs, files in os.walk(path):
        for file in files:
            path = os.path.join(root,file)
            if file.endswith(".la") and not skip_la:
                with open(path) as f:
                    file_content = f.read()
                    file_content = file_content.replace(recipesysroot, "")
                    if workdir in file_content:
                        error_msg = "%s failed sanity test (workdir) in path %s" % (file,root)
                        sane &= package_qa_handle_error("la", error_msg, d)
            elif file.endswith(".pc") and not skip_pkgconfig:
                with open(path) as f:
                    file_content = f.read()
                    file_content = file_content.replace(recipesysroot, "")
                    if pkgconfigcheck in file_content:
                        error_msg = "%s failed sanity test (tmpdir) in path %s" % (file,root)
                        sane &= package_qa_handle_error("pkgconfig", error_msg, d)

    return sane

# Run all package-wide warnfuncs and errorfuncs}


python raise_sanity_error () {
def raise_sanity_error(msg, d, network_error=False):
    if d.getVar("SANITY_USE_EVENTS") == "1":
        try:
            bb.event.fire(bb.event.SanityCheckFailed(msg, network_error), d)
        except TypeError:
            bb.event.fire(bb.event.SanityCheckFailed(msg), d)
        return

    bb.fatal(""" OE-core's config sanity checker detected a potential misconfiguration.
    Either fix the cause of this error or at your own risk disable the checker (see sanity.conf).
    Following is the list of potential problems / advisories:

    %s""" % msg)

# Check flags associated with a tuning.}


python read_libdep_files () {
def read_libdep_files(d):
    pkglibdeps = {}
    packages = d.getVar('PACKAGES').split()
    for pkg in packages:
        pkglibdeps[pkg] = {}
        for extension in ".shlibdeps", ".pcdeps", ".clilibdeps":
            depsfile = d.expand("${PKGDEST}/" + pkg + extension)
            if os.access(depsfile, os.R_OK):
                fd = open(depsfile)
                lines = fd.readlines()
                fd.close()
                for l in lines:
                    l.rstrip()
                    deps = bb.utils.explode_dep_versions2(l)
                    for dep in deps:
                        if not dep in pkglibdeps[pkg]:
                            pkglibdeps[pkg][dep] = deps[dep]
    return pkglibdeps
}


python read_shlibdeps () {
    pkglibdeps = read_libdep_files(d)

    packages = d.getVar('PACKAGES').split()
    for pkg in packages:
        rdepends = bb.utils.explode_dep_versions2(d.getVar('RDEPENDS_' + pkg) or "")
        for dep in sorted(pkglibdeps[pkg]):
            # Add the dep if it's not already there, or if no comparison is set
            if dep not in rdepends:
                rdepends[dep] = []
            for v in pkglibdeps[pkg][dep]:
                if v not in rdepends[dep]:
                    rdepends[dep].append(v)
        d.setVar('RDEPENDS_' + pkg, bb.utils.join_deps(rdepends, commasep=False))
}


python read_subpackage_metadata () {
    import oe.packagedata

    vars = {
        "PN" : d.getVar('PN'),
        "PE" : d.getVar('PE'),
        "PV" : d.getVar('PV'),
        "PR" : d.getVar('PR'),
    }

    data = oe.packagedata.read_pkgdata(vars["PN"], d)

    for key in data.keys():
        d.setVar(key, data[key])

    for pkg in d.getVar('PACKAGES').split():
        sdata = oe.packagedata.read_subpkgdata(pkg, d)
        for key in sdata.keys():
            if key in vars:
                if sdata[key] != vars[key]:
                    if key == "PN":
                        bb.fatal("Recipe %s is trying to create package %s which was already written by recipe %s. This will cause corruption, please resolve this and only provide the package from one recipe or the other or only build one of the recipes." % (vars[key], pkg, sdata[key]))
                    bb.fatal("Recipe %s is trying to change %s from '%s' to '%s'. This will cause do_package_write_* failures since the incorrect data will be used and they will be unable to find the right workdir." % (vars["PN"], key, vars[key], sdata[key]))
                continue
            #
            # If we set unsuffixed variables here there is a chance they could clobber override versions
            # of that variable, e.g. DESCRIPTION could clobber DESCRIPTION_<pkgname>
            # We therefore don't clobber for the unsuffixed variable versions
            #
            if key.endswith("_" + pkg):
                d.setVar(key, sdata[key])
            else:
                d.setVar(key, sdata[key], parsing=True)
}


python return_spdx () {
def return_spdx(d, license):
    """
    This function returns the spdx mapping of a license if it exists.
     """
    return d.getVarFlag('SPDXLICENSEMAP', license)
}


python rpath_replace () {
def rpath_replace (path, d):
    bindirs = d.expand("${bindir} ${sbindir} ${base_sbindir} ${base_bindir} ${libdir} ${base_libdir} ${libexecdir} ${PREPROCESS_RELOCATE_DIRS}").split()

    for bindir in bindirs:
        #bb.note ("Processing directory " + bindir)
        directory = path + "/" + bindir
        process_dir (path, directory, d)
}


python run_buildstats () {
    import bb.build
    import bb.event
    import time, subprocess, platform

    bn = d.getVar('BUILDNAME')
    bsdir = os.path.join(d.getVar('BUILDSTATS_BASE'), bn)
    taskdir = os.path.join(bsdir, d.getVar('PF'))

    if isinstance(e, bb.event.BuildStarted):
        ########################################################################
        # If the kernel was not configured to provide I/O statistics, issue
        # a one time warning.
        ########################################################################
        if not os.path.isfile("/proc/%d/io" % os.getpid()):
            bb.warn("The Linux kernel on your build host was not configured to provide process I/O statistics. (CONFIG_TASK_IO_ACCOUNTING is not set)")

        ########################################################################
        # at first pass make the buildstats hierarchy and then
        # set the buildname
        ########################################################################
        bb.utils.mkdirhier(bsdir)
        set_buildtimedata("__timedata_build", d)
        build_time = os.path.join(bsdir, "build_stats")
        # write start of build into build_time
        with open(build_time, "a") as f:
            host_info = platform.uname()
            f.write("Host Info: ")
            for x in host_info:
                if x:
                    f.write(x + " ")
            f.write("\n")
            f.write("Build Started: %0.2f \n" % time.time())

    elif isinstance(e, bb.event.BuildCompleted):
        build_time = os.path.join(bsdir, "build_stats")
        with open(build_time, "a") as f:
            ########################################################################
            # Write build statistics for the build
            ########################################################################
            timedata = get_buildtimedata("__timedata_build", d)
            if timedata:
                time, cpu = timedata
                # write end of build and cpu used into build_time
                f.write("Elapsed time: %0.2f seconds \n" % (time))
                if cpu:
                    f.write("CPU usage: %0.1f%% \n" % cpu)

    if isinstance(e, bb.build.TaskStarted):
        set_timedata("__timedata_task", d, e.time)
        bb.utils.mkdirhier(taskdir)
        # write into the task event file the name and start time
        with open(os.path.join(taskdir, e.task), "a") as f:
            f.write("Event: %s \n" % bb.event.getName(e))
            f.write("Started: %0.2f \n" % e.time)

    elif isinstance(e, bb.build.TaskSucceeded):
        write_task_data("passed", os.path.join(taskdir, e.task), e, d)
        if e.task == "do_rootfs":
            bs = os.path.join(bsdir, "build_stats")
            with open(bs, "a") as f:
                rootfs = d.getVar('IMAGE_ROOTFS')
                if os.path.isdir(rootfs):
                    try:
                        rootfs_size = subprocess.check_output(["du", "-sh", rootfs],
                                stderr=subprocess.STDOUT).decode('utf-8')
                        f.write("Uncompressed Rootfs size: %s" % rootfs_size)
                    except subprocess.CalledProcessError as err:
                        bb.warn("Failed to get rootfs size: %s" % err.output.decode('utf-8'))

    elif isinstance(e, bb.build.TaskFailed):
        # Can have a failure before TaskStarted so need to mkdir here too
        bb.utils.mkdirhier(taskdir)
        write_task_data("failed", os.path.join(taskdir, e.task), e, d)
        ########################################################################
        # Lets make things easier and tell people where the build failed in
        # build_status. We do this here because BuildCompleted triggers no
        # matter what the status of the build actually is
        ########################################################################
        build_status = os.path.join(bsdir, "build_stats")
        with open(build_status, "a") as f:
            f.write(d.expand("Failed at: ${PF} at task: %s \n" % e.task))
}


python runqueue_stats () {
    import buildstats
    from bb import event, runqueue
    # We should not record any samples before the first task has started,
    # because that's the first activity shown in the process chart.
    # Besides, at that point we are sure that the build variables
    # are available that we need to find the output directory.
    # The persistent SystemStats is stored in the datastore and
    # closed when the build is done.
    system_stats = d.getVar('_buildstats_system_stats', False)
    if not system_stats and isinstance(e, (bb.runqueue.sceneQueueTaskStarted, bb.runqueue.runQueueTaskStarted)):
        system_stats = buildstats.SystemStats(d)
        d.setVar('_buildstats_system_stats', system_stats)
    if system_stats:
        # Ensure that we sample at important events.
        done = isinstance(e, bb.event.BuildCompleted)
        system_stats.sample(e, force=done)
        if done:
            system_stats.close()
            d.delVar('_buildstats_system_stats')
}


python runtime_mapping_rename () {
def runtime_mapping_rename (varname, pkg, d):
    #bb.note("%s before: %s" % (varname, d.getVar(varname)))

    new_depends = {}
    deps = bb.utils.explode_dep_versions2(d.getVar(varname) or "")
    for depend in deps:
        new_depend = get_package_mapping(depend, pkg, d)
        new_depends[new_depend] = deps[depend]

    d.setVar(varname, bb.utils.join_deps(new_depends, commasep=False))

    #bb.note("%s after: %s" % (varname, d.getVar(varname)))

#
# Package functions suitable for inclusion in PACKAGEFUNCS
#
}


python sanity_check_conffiles () {
def sanity_check_conffiles(d):
    funcs = d.getVar('BBLAYERS_CONF_UPDATE_FUNCS').split()
    for func in funcs:
        conffile, current_version, required_version, func = func.split(":")
        if check_conf_exists(conffile, d) and d.getVar(current_version) is not None and \
                d.getVar(current_version) != d.getVar(required_version):
            try:
                bb.build.exec_func(func, d)
            except NotImplementedError as e:
                bb.fatal(str(e))
            d.setVar("BB_INVALIDCONF", True)
}


python sanity_check_locale () {
def sanity_check_locale(d):
    """
    Currently bitbake switches locale to en_US.UTF-8 so check that this locale actually exists.
    """
    import locale
    try:
        locale.setlocale(locale.LC_ALL, "en_US.UTF-8")
    except locale.Error:
        raise_sanity_error("Your system needs to support the en_US.UTF-8 locale.", d)
}


python sanity_conf_find_line () {
def sanity_conf_find_line(pattern, lines):
    import re
    return next(((index, line)
        for index, line in enumerate(lines)
        if re.search(pattern, line)), (None, None))
}


python sanity_conf_read () {
def sanity_conf_read(fn):
    with open(fn, 'r') as f:
        lines = f.readlines()
    return lines
}


python sanity_conf_update () {
def sanity_conf_update(fn, lines, version_var_name, new_version):
    index, line = sanity_conf_find_line(r"^%s" % version_var_name, lines)
    lines[index] = '%s = "%d"\n' % (version_var_name, new_version)
    with open(fn, "w") as f:
        f.write(''.join(lines))

# Functions added to this variable MUST throw a NotImplementedError exception unless
# they successfully changed the config version in the config file. Exceptions
# are used since exec_func doesn't handle return values.}


python sanity_handle_abichanges () {
def sanity_handle_abichanges(status, d):
    #
    # Check the 'ABI' of TMPDIR
    #
    import subprocess

    current_abi = d.getVar('OELAYOUT_ABI')
    abifile = d.getVar('SANITY_ABIFILE')
    if os.path.exists(abifile):
        with open(abifile, "r") as f:
            abi = f.read().strip()
        if not abi.isdigit():
            with open(abifile, "w") as f:
                f.write(current_abi)
        elif int(abi) <= 11 and current_abi == "12":
            status.addresult("The layout of TMPDIR changed for Recipe Specific Sysroots.\nConversion doesn't make sense and this change will rebuild everything so please delete TMPDIR (%s).\n" % d.getVar("TMPDIR"))
        elif (abi != current_abi):
            # Code to convert from one ABI to another could go here if possible.
            status.addresult("Error, TMPDIR has changed its layout version number (%s to %s) and you need to either rebuild, revert or adjust it at your own risk.\n" % (abi, current_abi))
    else:
        with open(abifile, "w") as f:
            f.write(current_abi)
}


python set_buildtimedata () {
def set_buildtimedata(var, d):
    import time
    time = time.time()
    cputime = get_cputime()
    proctime = get_buildprocess_cputime(os.getpid())
    d.setVar(var, (time, cputime, proctime))
}


python set_packagetriplet () {
def set_packagetriplet(d):
    archs = []
    tos = []
    tvs = []

    archs.append(d.getVar("PACKAGE_ARCHS").split())
    tos.append(d.getVar("TARGET_OS"))
    tvs.append(d.getVar("TARGET_VENDOR"))

    def settriplet(d, varname, archs, tos, tvs):
        triplets = []
        for i in range(len(archs)):
            for arch in archs[i]:
                triplets.append(arch + tvs[i] + "-" + tos[i])
        triplets.reverse()
        d.setVar(varname, " ".join(triplets))

    settriplet(d, "PKGTRIPLETS", archs, tos, tvs)

    variants = d.getVar("MULTILIB_VARIANTS") or ""
    for item in variants.split():
        localdata = bb.data.createCopy(d)
        overrides = localdata.getVar("OVERRIDES", False) + ":virtclass-multilib-" + item
        localdata.setVar("OVERRIDES", overrides)

        archs.append(localdata.getVar("PACKAGE_ARCHS").split())
        tos.append(localdata.getVar("TARGET_OS"))
        tvs.append(localdata.getVar("TARGET_VENDOR"))

    settriplet(d, "PKGMLTRIPLETS", archs, tos, tvs)
}


python set_timedata () {
def set_timedata(var, d, server_time):
    d.setVar(var, server_time)
}


python setscene_depvalid () {
def setscene_depvalid(task, taskdependees, notneeded, d, log=None):
    # taskdependees is a dict of tasks which depend on task, each being a 3 item list of [PN, TASKNAME, FILENAME]
    # task is included in taskdependees too
    # Return - False - We need this dependency
    #        - True - We can skip this dependency
    import re

    def logit(msg, log):
        if log is not None:
            log.append(msg)
        else:
            bb.debug(2, msg)

    logit("Considering setscene task: %s" % (str(taskdependees[task])), log)

    def isNativeCross(x):
        return x.endswith("-native") or "-cross-" in x or "-crosssdk" in x or x.endswith("-cross")

    # We only need to trigger populate_lic through direct dependencies
    if taskdependees[task][1] == "do_populate_lic":
        return True

    # stash_locale and gcc_stash_builddir are never needed as a dependency for built objects
    if taskdependees[task][1] == "do_stash_locale" or taskdependees[task][1] == "do_gcc_stash_builddir":
        return True

    # We only need to trigger packagedata through direct dependencies
    # but need to preserve packagedata on packagedata links
    if taskdependees[task][1] == "do_packagedata":
        for dep in taskdependees:
            if taskdependees[dep][1] == "do_packagedata":
                return False
        return True

    for dep in taskdependees:
        logit("  considering dependency: %s" % (str(taskdependees[dep])), log)
        if task == dep:
            continue
        if dep in notneeded:
            continue
        # do_package_write_* and do_package doesn't need do_package
        if taskdependees[task][1] == "do_package" and taskdependees[dep][1] in ['do_package', 'do_package_write_deb', 'do_package_write_ipk', 'do_package_write_rpm', 'do_packagedata', 'do_package_qa']:
            continue
        # do_package_write_* need do_populate_sysroot as they're mainly postinstall dependencies
        if taskdependees[task][1] == "do_populate_sysroot" and taskdependees[dep][1] in ['do_package_write_deb', 'do_package_write_ipk', 'do_package_write_rpm']:
            return False
        # do_package/packagedata/package_qa don't need do_populate_sysroot
        if taskdependees[task][1] == "do_populate_sysroot" and taskdependees[dep][1] in ['do_package', 'do_packagedata', 'do_package_qa']:
            continue
        # Native/Cross packages don't exist and are noexec anyway
        if isNativeCross(taskdependees[dep][0]) and taskdependees[dep][1] in ['do_package_write_deb', 'do_package_write_ipk', 'do_package_write_rpm', 'do_packagedata', 'do_package', 'do_package_qa']:
            continue

        # This is due to the [depends] in useradd.bbclass complicating matters
        # The logic *is* reversed here due to the way hard setscene dependencies are injected
        if (taskdependees[task][1] == 'do_package' or taskdependees[task][1] == 'do_populate_sysroot') and taskdependees[dep][0].endswith(('shadow-native', 'shadow-sysroot', 'base-passwd', 'pseudo-native')) and taskdependees[dep][1] == 'do_populate_sysroot':
            continue

        # Consider sysroot depending on sysroot tasks
        if taskdependees[task][1] == 'do_populate_sysroot' and taskdependees[dep][1] == 'do_populate_sysroot':
            # Allow excluding certain recursive dependencies. If a recipe needs it should add a
            # specific dependency itself, rather than relying on one of its dependees to pull
            # them in.
            # See also http://lists.openembedded.org/pipermail/openembedded-core/2018-January/146324.html
            not_needed = False
            excludedeps = d.getVar('_SSTATE_EXCLUDEDEPS_SYSROOT')
            if excludedeps is None:
                # Cache the regular expressions for speed
                excludedeps = []
                for excl in (d.getVar('SSTATE_EXCLUDEDEPS_SYSROOT') or "").split():
                    excludedeps.append((re.compile(excl.split('->', 1)[0]), re.compile(excl.split('->', 1)[1])))
                d.setVar('_SSTATE_EXCLUDEDEPS_SYSROOT', excludedeps)
            for excl in excludedeps:
                if excl[0].match(taskdependees[dep][0]):
                    if excl[1].match(taskdependees[task][0]):
                        not_needed = True
                        break
            if not_needed:
                continue
            # For meta-extsdk-toolchain we want all sysroot dependencies
            if taskdependees[dep][0] == 'meta-extsdk-toolchain':
                return False
            # Native/Cross populate_sysroot need their dependencies
            if isNativeCross(taskdependees[task][0]) and isNativeCross(taskdependees[dep][0]):
                return False
            # Target populate_sysroot depended on by cross tools need to be installed
            if isNativeCross(taskdependees[dep][0]):
                return False
            # Native/cross tools depended upon by target sysroot are not needed
            # Add an exception for shadow-native as required by useradd.bbclass
            if isNativeCross(taskdependees[task][0]) and taskdependees[task][0] != 'shadow-native':
                continue
            # Target populate_sysroot need their dependencies
            return False

        if taskdependees[task][1] == 'do_shared_workdir':
            continue

        if taskdependees[dep][1] == "do_populate_lic":
            continue


        # Safe fallthrough default
        logit(" Default setscene dependency fall through due to dependency: %s" % (str(taskdependees[dep])), log)
        return False
    return True
}


python setup_hosttools_dir () {
def setup_hosttools_dir(dest, toolsvar, d, fatal=True):
    tools = d.getVar(toolsvar).split()
    origbbenv = d.getVar("BB_ORIGENV", False)
    path = origbbenv.getVar("PATH")
    bb.utils.mkdirhier(dest)
    notfound = []
    for tool in tools:
        desttool = os.path.join(dest, tool)
        if not os.path.exists(desttool):
            srctool = bb.utils.which(path, tool, executable=True)
            # gcc/g++ may link to ccache on some hosts, e.g.,
            # /usr/local/bin/ccache/gcc -> /usr/bin/ccache, then which(gcc)
            # would return /usr/local/bin/ccache/gcc, but what we need is
            # /usr/bin/gcc, this code can check and fix that.
            if "ccache" in srctool:
                srctool = bb.utils.which(path, tool, executable=True, direction=1)
            if srctool:
                os.symlink(srctool, desttool)
            else:
                notfound.append(tool)
    # Force "python" -> "python2"
    desttool = os.path.join(dest, "python")
    if not os.path.exists(desttool):
        srctool = "python2"
        os.symlink(srctool, desttool)

    if notfound and fatal:
        bb.fatal("The following required tools (as specified by HOSTTOOLS) appear to be unavailable in PATH, please install them in order to proceed:\n  %s" % " ".join(notfound))
}


python should_apply () {
def should_apply(parm, d):
    """Determine if we should apply the given patch"""
    import oe.patch
    return oe.patch.should_apply(parm, d)
}


python source_info () {
def source_info(file, d, fatal=True):
    import subprocess

    cmd = ["dwarfsrcfiles", file]
    try:
        output = subprocess.check_output(cmd, universal_newlines=True, stderr=subprocess.STDOUT)
        retval = 0
    except subprocess.CalledProcessError as exc:
        output = exc.output
        retval = exc.returncode

    # 255 means a specific file wasn't fully parsed to get the debug file list, which is not a fatal failure
    if retval != 0 and retval != 255:
        msg = "dwarfsrcfiles failed with exit code %s (cmd was %s)%s" % (retval, cmd, ":\n%s" % output if output else "")
        if fatal:
            bb.fatal(msg)
        bb.note(msg)

    debugsources = parse_debugsources_from_dwarfsrcfiles_output(output)

    return list(debugsources)
}


python split_and_strip_files () {
    import stat, errno
    import subprocess

    dvar = d.getVar('PKGD')
    pn = d.getVar('PN')
    targetos = d.getVar('TARGET_OS')

    oldcwd = os.getcwd()
    os.chdir(dvar)

    # We default to '.debug' style
    if d.getVar('PACKAGE_DEBUG_SPLIT_STYLE') == 'debug-file-directory':
        # Single debug-file-directory style debug info
        debugappend = ".debug"
        debugdir = ""
        debuglibdir = "/usr/lib/debug"
        debugsrcdir = "/usr/src/debug"
    elif d.getVar('PACKAGE_DEBUG_SPLIT_STYLE') == 'debug-without-src':
        # Original OE-core, a.k.a. ".debug", style debug info, but without sources in /usr/src/debug
        debugappend = ""
        debugdir = "/.debug"
        debuglibdir = ""
        debugsrcdir = ""
    elif d.getVar('PACKAGE_DEBUG_SPLIT_STYLE') == 'debug-with-srcpkg':
        debugappend = ""
        debugdir = "/.debug"
        debuglibdir = ""
        debugsrcdir = "/usr/src/debug"
    else:
        # Original OE-core, a.k.a. ".debug", style debug info
        debugappend = ""
        debugdir = "/.debug"
        debuglibdir = ""
        debugsrcdir = "/usr/src/debug"

    #
    # First lets figure out all of the files we may have to process ... do this only once!
    #
    elffiles = {}
    symlinks = {}
    kernmods = []
    staticlibs = []
    inodes = {}
    libdir = os.path.abspath(dvar + os.sep + d.getVar("libdir"))
    baselibdir = os.path.abspath(dvar + os.sep + d.getVar("base_libdir"))
    skipfiles = (d.getVar("INHIBIT_PACKAGE_STRIP_FILES") or "").split()
    if (d.getVar('INHIBIT_PACKAGE_STRIP') != '1' or \
            d.getVar('INHIBIT_PACKAGE_DEBUG_SPLIT') != '1'):
        checkelf = {}
        checkelflinks = {}
        for root, dirs, files in cpath.walk(dvar):
            for f in files:
                file = os.path.join(root, f)
                if file.endswith(".ko") and file.find("/lib/modules/") != -1:
                    kernmods.append(file)
                    continue
                if oe.package.is_static_lib(file):
                    staticlibs.append(file)
                    continue

                # Skip debug files
                if debugappend and file.endswith(debugappend):
                    continue
                if debugdir and debugdir in os.path.dirname(file[len(dvar):]):
                    continue

                if file in skipfiles:
                    continue

                try:
                    ltarget = cpath.realpath(file, dvar, False)
                    s = cpath.lstat(ltarget)
                except OSError as e:
                    (err, strerror) = e.args
                    if err != errno.ENOENT:
                        raise
                    # Skip broken symlinks
                    continue
                if not s:
                    continue
                # Check its an executable
                if (s[stat.ST_MODE] & stat.S_IXUSR) or (s[stat.ST_MODE] & stat.S_IXGRP) or (s[stat.ST_MODE] & stat.S_IXOTH) \
                        or ((file.startswith(libdir) or file.startswith(baselibdir)) and (".so" in f or ".node" in f)):

                    if cpath.islink(file):
                        checkelflinks[file] = ltarget
                        continue
                    # Use a reference of device ID and inode number to identify files
                    file_reference = "%d_%d" % (s.st_dev, s.st_ino)
                    checkelf[file] = (file, file_reference)

        results = oe.utils.multiprocess_launch(oe.package.is_elf, checkelflinks.values(), d)
        results_map = {}
        for (ltarget, elf_file) in results:
            results_map[ltarget] = elf_file
        for file in checkelflinks:
            ltarget = checkelflinks[file]
            # If it's a symlink, and points to an ELF file, we capture the readlink target
            if results_map[ltarget]:
                target = os.readlink(file)
                #bb.note("Sym: %s (%d)" % (ltarget, results_map[ltarget]))
                symlinks[file] = target

        results = oe.utils.multiprocess_launch(oe.package.is_elf, checkelf.keys(), d)

        # Sort results by file path. This ensures that the files are always
        # processed in the same order, which is important to make sure builds
        # are reproducible when dealing with hardlinks
        results.sort(key=lambda x: x[0])

        for (file, elf_file) in results:
            # It's a file (or hardlink), not a link
            # ...but is it ELF, and is it already stripped?
            if elf_file & 1:
                if elf_file & 2:
                    if 'already-stripped' in (d.getVar('INSANE_SKIP_' + pn) or "").split():
                        bb.note("Skipping file %s from %s for already-stripped QA test" % (file[len(dvar):], pn))
                    else:
                        msg = "File '%s' from %s was already stripped, this will prevent future debugging!" % (file[len(dvar):], pn)
                        package_qa_handle_error("already-stripped", msg, d)
                    continue

                # At this point we have an unstripped elf file. We need to:
                #  a) Make sure any file we strip is not hardlinked to anything else outside this tree
                #  b) Only strip any hardlinked file once (no races)
                #  c) Track any hardlinks between files so that we can reconstruct matching debug file hardlinks

                # Use a reference of device ID and inode number to identify files
                file_reference = checkelf[file][1]
                if file_reference in inodes:
                    os.unlink(file)
                    os.link(inodes[file_reference][0], file)
                    inodes[file_reference].append(file)
                else:
                    inodes[file_reference] = [file]
                    # break hardlink
                    bb.utils.break_hardlinks(file)
                    elffiles[file] = elf_file
                # Modified the file so clear the cache
                cpath.updatecache(file)

    #
    # First lets process debug splitting
    #
    if (d.getVar('INHIBIT_PACKAGE_DEBUG_SPLIT') != '1'):
        results = oe.utils.multiprocess_launch(splitdebuginfo, list(elffiles), d, extraargs=(dvar, debugdir, debuglibdir, debugappend, debugsrcdir, d))

        if debugsrcdir and not targetos.startswith("mingw"):
            for file in staticlibs:
                results.extend(source_info(file, d, fatal=False))

        sources = set()
        for r in results:
            sources.update(r[1])

        # Hardlink our debug symbols to the other hardlink copies
        for ref in inodes:
            if len(inodes[ref]) == 1:
                continue

            target = inodes[ref][0][len(dvar):]
            for file in inodes[ref][1:]:
                src = file[len(dvar):]
                dest = debuglibdir + os.path.dirname(src) + debugdir + "/" + os.path.basename(target) + debugappend
                fpath = dvar + dest
                ftarget = dvar + debuglibdir + os.path.dirname(target) + debugdir + "/" + os.path.basename(target) + debugappend
                bb.utils.mkdirhier(os.path.dirname(fpath))
                # Only one hardlink of separated debug info file in each directory
                if not os.access(fpath, os.R_OK):
                    #bb.note("Link %s -> %s" % (fpath, ftarget))
                    os.link(ftarget, fpath)

        # Create symlinks for all cases we were able to split symbols
        for file in symlinks:
            src = file[len(dvar):]
            dest = debuglibdir + os.path.dirname(src) + debugdir + "/" + os.path.basename(src) + debugappend
            fpath = dvar + dest
            # Skip it if the target doesn't exist
            try:
                s = os.stat(fpath)
            except OSError as e:
                (err, strerror) = e.args
                if err != errno.ENOENT:
                    raise
                continue

            ltarget = symlinks[file]
            lpath = os.path.dirname(ltarget)
            lbase = os.path.basename(ltarget)
            ftarget = ""
            if lpath and lpath != ".":
                ftarget += lpath + debugdir + "/"
            ftarget += lbase + debugappend
            if lpath.startswith(".."):
                ftarget = os.path.join("..", ftarget)
            bb.utils.mkdirhier(os.path.dirname(fpath))
            #bb.note("Symlink %s -> %s" % (fpath, ftarget))
            os.symlink(ftarget, fpath)

        # Process the debugsrcdir if requested...
        # This copies and places the referenced sources for later debugging...
        copydebugsources(debugsrcdir, sources, d)
    #
    # End of debug splitting
    #

    #
    # Now lets go back over things and strip them
    #
    if (d.getVar('INHIBIT_PACKAGE_STRIP') != '1'):
        strip = d.getVar("STRIP")
        sfiles = []
        for file in elffiles:
            elf_file = int(elffiles[file])
            #bb.note("Strip %s" % file)
            sfiles.append((file, elf_file, strip))
        for f in kernmods:
            sfiles.append((f, 16, strip))

        oe.utils.multiprocess_launch(oe.package.runstrip, sfiles, d)

    #
    # End of strip
    #
    os.chdir(oldcwd)
}


python splitdebuginfo () {
def splitdebuginfo(file, dvar, debugdir, debuglibdir, debugappend, debugsrcdir, d):
    # Function to split a single file into two components, one is the stripped
    # target system binary, the other contains any debugging information. The
    # two files are linked to reference each other.
    #
    # return a mapping of files:debugsources

    import stat
    import subprocess

    src = file[len(dvar):]
    dest = debuglibdir + os.path.dirname(src) + debugdir + "/" + os.path.basename(src) + debugappend
    debugfile = dvar + dest
    sources = []

    # Split the file...
    bb.utils.mkdirhier(os.path.dirname(debugfile))
    #bb.note("Split %s -> %s" % (file, debugfile))
    # Only store off the hard link reference if we successfully split!

    dvar = d.getVar('PKGD')
    objcopy = d.getVar("OBJCOPY")

    # We ignore kernel modules, we don't generate debug info files.
    if file.find("/lib/modules/") != -1 and file.endswith(".ko"):
        return (file, sources)

    newmode = None
    if not os.access(file, os.W_OK) or os.access(file, os.R_OK):
        origmode = os.stat(file)[stat.ST_MODE]
        newmode = origmode | stat.S_IWRITE | stat.S_IREAD
        os.chmod(file, newmode)

    # We need to extract the debug src information here...
    if debugsrcdir:
        sources = source_info(file, d)

    bb.utils.mkdirhier(os.path.dirname(debugfile))

    subprocess.check_output([objcopy, '--only-keep-debug', file, debugfile], stderr=subprocess.STDOUT)

    # Set the debuglink to have the view of the file path on the target
    subprocess.check_output([objcopy, '--add-gnu-debuglink', debugfile, file], stderr=subprocess.STDOUT)

    if newmode:
        os.chmod(file, origmode)

    return (file, sources)
}


python src_patches () {
def src_patches(d, all=False, expand=True):
    import oe.patch
    return oe.patch.src_patches(d, all, expand)
}


python sstate_add () {
def sstate_add(ss, source, dest, d):
    if not source.endswith("/"):
         source = source + "/"
    if not dest.endswith("/"):
         dest = dest + "/"
    source = os.path.normpath(source)
    dest = os.path.normpath(dest)
    srcbase = os.path.basename(source)
    ss['dirs'].append([srcbase, source, dest])
    return ss
}


python sstate_checkhashes () {
def sstate_checkhashes(sq_data, d, siginfo=False, currentcount=0, summary=True, **kwargs):
    found = set()
    missed = set()
    extension = ".tgz"
    if siginfo:
        extension = extension + ".siginfo"

    def gethash(task):
        return sq_data['unihash'][task]

    def getpathcomponents(task, d):
        # Magic data from BB_HASHFILENAME
        splithashfn = sq_data['hashfn'][task].split(" ")
        spec = splithashfn[1]
        if splithashfn[0] == "True":
            extrapath = d.getVar("NATIVELSBSTRING") + "/"
        else:
            extrapath = ""

        tname = bb.runqueue.taskname_from_tid(task)[3:]

        if tname in ["fetch", "unpack", "patch", "populate_lic", "preconfigure"] and splithashfn[2]:
            spec = splithashfn[2]
            extrapath = ""

        return spec, extrapath, tname


    for tid in sq_data['hash']:

        spec, extrapath, tname = getpathcomponents(tid, d)

        sstatefile = d.expand("${SSTATE_DIR}/" + extrapath + generate_sstatefn(spec, gethash(tid), d) + "_" + tname + extension)

        if os.path.exists(sstatefile):
            bb.debug(2, "SState: Found valid sstate file %s" % sstatefile)
            found.add(tid)
            continue
        else:
            missed.add(tid)
            bb.debug(2, "SState: Looked for but didn't find file %s" % sstatefile)

    mirrors = d.getVar("SSTATE_MIRRORS")
    if mirrors:
        # Copy the data object and override DL_DIR and SRC_URI
        localdata = bb.data.createCopy(d)

        dldir = localdata.expand("${SSTATE_DIR}")
        localdata.delVar('MIRRORS')
        localdata.setVar('FILESPATH', dldir)
        localdata.setVar('DL_DIR', dldir)
        localdata.setVar('PREMIRRORS', mirrors)

        bb.debug(2, "SState using premirror of: %s" % mirrors)

        # if BB_NO_NETWORK is set but we also have SSTATE_MIRROR_ALLOW_NETWORK,
        # we'll want to allow network access for the current set of fetches.
        if bb.utils.to_boolean(localdata.getVar('BB_NO_NETWORK')) and \
                bb.utils.to_boolean(localdata.getVar('SSTATE_MIRROR_ALLOW_NETWORK')):
            localdata.delVar('BB_NO_NETWORK')

        from bb.fetch2 import FetchConnectionCache
        def checkstatus_init(thread_worker):
            thread_worker.connection_cache = FetchConnectionCache()

        def checkstatus_end(thread_worker):
            thread_worker.connection_cache.close_connections()

        def checkstatus(thread_worker, arg):
            (tid, sstatefile) = arg

            localdata2 = bb.data.createCopy(localdata)
            srcuri = "file://" + sstatefile
            localdata.setVar('SRC_URI', srcuri)
            bb.debug(2, "SState: Attempting to fetch %s" % srcuri)

            try:
                fetcher = bb.fetch2.Fetch(srcuri.split(), localdata2,
                            connection_cache=thread_worker.connection_cache)
                fetcher.checkstatus()
                bb.debug(2, "SState: Successful fetch test for %s" % srcuri)
                found.add(tid)
                if tid in missed:
                    missed.remove(tid)
            except:
                missed.add(tid)
                bb.debug(2, "SState: Unsuccessful fetch test for %s" % srcuri)
                pass
            bb.event.fire(bb.event.ProcessProgress(msg, len(tasklist) - thread_worker.tasks.qsize()), d)

        tasklist = []
        for tid in sq_data['hash']:
            if tid in found:
                continue
            spec, extrapath, tname = getpathcomponents(tid, d)
            sstatefile = d.expand(extrapath + generate_sstatefn(spec, gethash(tid), d) + "_" + tname + extension)
            tasklist.append((tid, sstatefile))

        if tasklist:
            msg = "Checking sstate mirror object availability"
            bb.event.fire(bb.event.ProcessStarted(msg, len(tasklist)), d)

            import multiprocessing
            nproc = min(multiprocessing.cpu_count(), len(tasklist))

            bb.event.enable_threadlock()
            pool = oe.utils.ThreadedPool(nproc, len(tasklist),
                    worker_init=checkstatus_init, worker_end=checkstatus_end)
            for t in tasklist:
                pool.add_task(checkstatus, t)
            pool.start()
            pool.wait_completion()
            bb.event.disable_threadlock()

            bb.event.fire(bb.event.ProcessFinished(msg), d)

    # Likely checking an individual task hash again for multiconfig sharing of sstate tasks so skip reporting
    if len(sq_data['hash']) == 1:
        return found

    inheritlist = d.getVar("INHERIT")
    if "toaster" in inheritlist:
        evdata = {'missed': [], 'found': []};
        for tid in missed:
            spec, extrapath, tname = getpathcomponents(tid, d)
            sstatefile = d.expand(extrapath + generate_sstatefn(spec, gethash(tid), d) + "_" + tname + ".tgz")
            evdata['missed'].append((bb.runqueue.fn_from_tid(tid), bb.runqueue.taskname_from_tid(tid), gethash(tid), sstatefile ) )
        for tid in found:
            spec, extrapath, tname = getpathcomponents(tid, d)
            sstatefile = d.expand(extrapath + generate_sstatefn(spec, gethash(tid), d) + "_" + tname + ".tgz")
            evdata['found'].append((bb.runqueue.fn_from_tid(tid), bb.runqueue.taskname_from_tid(tid), gethash(tid), sstatefile ) )
        bb.event.fire(bb.event.MetadataEvent("MissedSstate", evdata), d)

    if summary:
        # Print some summary statistics about the current task completion and how much sstate
        # reuse there was. Avoid divide by zero errors.
        total = len(sq_data['hash'])
        complete = 0
        if currentcount:
            complete = (len(found) + currentcount) / (total + currentcount) * 100
        match = 0
        if total:
            match = len(found) / total * 100
        bb.plain("Sstate summary: Wanted %d Found %d Missed %d Current %d (%d%% match, %d%% complete)" % (total, len(found), len(missed), currentcount, match, complete))

    if hasattr(bb.parse.siggen, "checkhashes"):
        bb.parse.siggen.checkhashes(sq_data, missed, found, d)

    return found
}


python sstate_clean () {
def sstate_clean(ss, d):
    import oe.path
    import glob

    d2 = d.createCopy()
    stamp_clean = d.getVar("STAMPCLEAN")
    extrainf = d.getVarFlag("do_" + ss['task'], 'stamp-extra-info')
    if extrainf:
        d2.setVar("SSTATE_MANMACH", extrainf)
        wildcard_stfile = "%s.do_%s*.%s" % (stamp_clean, ss['task'], extrainf)
    else:
        wildcard_stfile = "%s.do_%s*" % (stamp_clean, ss['task'])

    manifest = d2.expand("${SSTATE_MANFILEPREFIX}.%s" % ss['task'])

    if os.path.exists(manifest):
        locks = []
        for lock in ss['lockfiles-shared']:
            locks.append(bb.utils.lockfile(lock))
        for lock in ss['lockfiles']:
            locks.append(bb.utils.lockfile(lock))

        sstate_clean_manifest(manifest, d)

        for lock in locks:
            bb.utils.unlockfile(lock)

    # Remove the current and previous stamps, but keep the sigdata.
    #
    # The glob() matches do_task* which may match multiple tasks, for
    # example: do_package and do_package_write_ipk, so we need to
    # exactly match *.do_task.* and *.do_task_setscene.*
    rm_stamp = '.do_%s.' % ss['task']
    rm_setscene = '.do_%s_setscene.' % ss['task']
    # For BB_SIGNATURE_HANDLER = "noop"
    rm_nohash = ".do_%s" % ss['task']
    for stfile in glob.glob(wildcard_stfile):
        # Keep the sigdata
        if ".sigdata." in stfile or ".sigbasedata." in stfile:
            continue
        # Preserve taint files in the stamps directory
        if stfile.endswith('.taint'):
            continue
        if rm_stamp in stfile or rm_setscene in stfile or \
                stfile.endswith(rm_nohash):
            oe.path.remove(stfile)
}


python sstate_clean_cachefile () {
def sstate_clean_cachefile(ss, d):
    import oe.path

    sstatepkgfile = d.getVar('SSTATE_PATHSPEC') + "*_" + ss['task'] + ".tgz*"
    if d.getVarFlag('do_%s' % ss['task'], 'task'):
        bb.note("Removing %s" % sstatepkgfile)
        oe.path.remove(sstatepkgfile)
}


python sstate_clean_cachefiles () {
def sstate_clean_cachefiles(d):
    for task in (d.getVar('SSTATETASKS') or "").split():
        ld = d.createCopy()
        ss = sstate_state_fromvars(ld, task)
        sstate_clean_cachefile(ss, ld)
}


python sstate_clean_manifest () {
def sstate_clean_manifest(manifest, d, prefix=None):
    import oe.path

    mfile = open(manifest)
    entries = mfile.readlines()
    mfile.close()

    for entry in entries:
        entry = entry.strip()
        if prefix and not entry.startswith("/"):
            entry = prefix + "/" + entry
        bb.debug(2, "Removing manifest: %s" % entry)
        # We can race against another package populating directories as we're removing them
        # so we ignore errors here.
        try:
            if entry.endswith("/"):
                if os.path.islink(entry[:-1]):
                    os.remove(entry[:-1])
                elif os.path.exists(entry) and len(os.listdir(entry)) == 0:
                    os.rmdir(entry[:-1])
            else:
                os.remove(entry)
        except OSError:
            pass

    postrm = manifest + ".postrm"
    if os.path.exists(manifest + ".postrm"):
        import subprocess
        os.chmod(postrm, 0o755)
        subprocess.check_call(postrm, shell=True)
        oe.path.remove(postrm)

    oe.path.remove(manifest)
}


python sstate_cleanall () {
    bb.note("Removing shared state for package %s" % d.getVar('PN'))

    manifest_dir = d.getVar('SSTATE_MANIFESTS')
    if not os.path.exists(manifest_dir):
        return

    tasks = d.getVar('SSTATETASKS').split()
    for name in tasks:
        ld = d.createCopy()
        shared_state = sstate_state_fromvars(ld, name)
        sstate_clean(shared_state, ld)
}


python sstate_eventhandler () {
    d = e.data
    # When we write an sstate package we rewrite the SSTATE_PKG
    spkg = d.getVar('SSTATE_PKG')
    if not spkg.endswith(".tgz"):
        taskname = d.getVar("BB_RUNTASK")[3:]
        spec = d.getVar('SSTATE_PKGSPEC')
        swspec = d.getVar('SSTATE_SWSPEC')
        if taskname in ["fetch", "unpack", "patch", "populate_lic", "preconfigure"] and swspec:
            d.setVar("SSTATE_PKGSPEC", "${SSTATE_SWSPEC}")
            d.setVar("SSTATE_EXTRAPATH", "")
        sstatepkg = d.getVar('SSTATE_PKG')
        bb.siggen.dump_this_task(sstatepkg + '_' + taskname + ".tgz" ".siginfo", d)
}


python sstate_eventhandler2 () {
    import glob
    d = e.data
    stamps = e.stamps.values()
    removeworkdir = (d.getVar("SSTATE_PRUNE_OBSOLETEWORKDIR", False) == "1")
    preservestampfile = d.expand('${SSTATE_MANIFESTS}/preserve-stamps')
    preservestamps = []
    if os.path.exists(preservestampfile):
        with open(preservestampfile, 'r') as f:
            preservestamps = f.readlines()
    seen = []

    # The machine index contains all the stamps this machine has ever seen in this build directory.
    # We should only remove things which this machine once accessed but no longer does.
    machineindex = set()
    bb.utils.mkdirhier(d.expand("${SSTATE_MANIFESTS}"))
    mi = d.expand("${SSTATE_MANIFESTS}/index-machine-${MACHINE}")
    if os.path.exists(mi):
        with open(mi, "r") as f:
            machineindex = set(line.strip() for line in f.readlines())

    for a in sorted(list(set(d.getVar("SSTATE_ARCHS").split()))):
        toremove = []
        i = d.expand("${SSTATE_MANIFESTS}/index-" + a)
        if not os.path.exists(i):
            continue
        with open(i, "r") as f:
            lines = f.readlines()
            for l in lines:
                try:
                    (stamp, manifest, workdir) = l.split()
                    if stamp not in stamps and stamp not in preservestamps and stamp in machineindex:
                        toremove.append(l)
                        if stamp not in seen:
                            bb.debug(2, "Stamp %s is not reachable, removing related manifests" % stamp)
                            seen.append(stamp)
                except ValueError:
                    bb.fatal("Invalid line '%s' in sstate manifest '%s'" % (l, i))

        if toremove:
            msg = "Removing %d recipes from the %s sysroot" % (len(toremove), a)
            bb.event.fire(bb.event.ProcessStarted(msg, len(toremove)), d)

            removed = 0
            for r in toremove:
                (stamp, manifest, workdir) = r.split()
                for m in glob.glob(manifest + ".*"):
                    if m.endswith(".postrm"):
                        continue
                    sstate_clean_manifest(m, d)
                bb.utils.remove(stamp + "*")
                if removeworkdir:
                    bb.utils.remove(workdir, recurse = True)
                lines.remove(r)
                removed = removed + 1
                bb.event.fire(bb.event.ProcessProgress(msg, removed), d)

            bb.event.fire(bb.event.ProcessFinished(msg), d)

        with open(i, "w") as f:
            for l in lines:
                f.write(l)
    machineindex |= set(stamps)
    with open(mi, "w") as f:
        for l in machineindex:
            f.write(l + "\n")

    if preservestamps:
        os.remove(preservestampfile)
}


python sstate_hardcode_path () {
    import subprocess, platform

    # Need to remove hardcoded paths and fix these when we install the
    # staging packages.
    #
    # Note: the logic in this function needs to match the reverse logic
    # in sstate_installpkg(ss, d)

    staging_target = d.getVar('RECIPE_SYSROOT')
    staging_host = d.getVar('RECIPE_SYSROOT_NATIVE')
    sstate_builddir = d.getVar('SSTATE_BUILDDIR')

    sstate_sed_cmd = "sed -i -e 's:%s:FIXMESTAGINGDIRHOST:g'" % staging_host
    if bb.data.inherits_class('native', d) or bb.data.inherits_class('cross-canadian', d):
        sstate_grep_cmd = "grep -l -e '%s'" % (staging_host)
    elif bb.data.inherits_class('cross', d) or bb.data.inherits_class('crosssdk', d):
        sstate_grep_cmd = "grep -l -e '%s' -e '%s'" % (staging_target, staging_host)
        sstate_sed_cmd += " -e 's:%s:FIXMESTAGINGDIRTARGET:g'" % staging_target
    else:
        sstate_grep_cmd = "grep -l -e '%s' -e '%s'" % (staging_target, staging_host)
        sstate_sed_cmd += " -e 's:%s:FIXMESTAGINGDIRTARGET:g'" % staging_target

    extra_staging_fixmes = d.getVar('EXTRA_STAGING_FIXMES') or ''
    for fixmevar in extra_staging_fixmes.split():
        fixme_path = d.getVar(fixmevar)
        sstate_sed_cmd += " -e 's:%s:FIXME_%s:g'" % (fixme_path, fixmevar)
        sstate_grep_cmd += " -e '%s'" % (fixme_path)

    fixmefn =  sstate_builddir + "fixmepath"

    sstate_scan_cmd = d.getVar('SSTATE_SCAN_CMD')
    sstate_filelist_cmd = "tee %s" % (fixmefn)

    # fixmepath file needs relative paths, drop sstate_builddir prefix
    sstate_filelist_relative_cmd = "sed -i -e 's:^%s::g' %s" % (sstate_builddir, fixmefn)

    xargs_no_empty_run_cmd = '--no-run-if-empty'
    if platform.system() == 'Darwin':
        xargs_no_empty_run_cmd = ''

    # Limit the fixpaths and sed operations based on the initial grep search
    # This has the side effect of making sure the vfs cache is hot
    sstate_hardcode_cmd = "%s | xargs %s | %s | xargs %s %s" % (sstate_scan_cmd, sstate_grep_cmd, sstate_filelist_cmd, xargs_no_empty_run_cmd, sstate_sed_cmd)

    bb.note("Removing hardcoded paths from sstate package: '%s'" % (sstate_hardcode_cmd))
    subprocess.check_output(sstate_hardcode_cmd, shell=True, cwd=sstate_builddir)

        # If the fixmefn is empty, remove it..
    if os.stat(fixmefn).st_size == 0:
        os.remove(fixmefn)
    else:
        bb.note("Replacing absolute paths in fixmepath file: '%s'" % (sstate_filelist_relative_cmd))
        subprocess.check_output(sstate_filelist_relative_cmd, shell=True)
}


python sstate_hardcode_path_unpack () {
    # Fixup hardcoded paths
    #
    # Note: The logic below must match the reverse logic in
    # sstate_hardcode_path(d)
    import subprocess

    sstateinst = d.getVar('SSTATE_INSTDIR')
    sstatefixmedir = d.getVar('SSTATE_FIXMEDIR')
    fixmefn = sstateinst + "fixmepath"
    if os.path.isfile(fixmefn):
        staging_target = d.getVar('RECIPE_SYSROOT')
        staging_host = d.getVar('RECIPE_SYSROOT_NATIVE')

        if bb.data.inherits_class('native', d) or bb.data.inherits_class('cross-canadian', d):
            sstate_sed_cmd = "sed -i -e 's:FIXMESTAGINGDIRHOST:%s:g'" % (staging_host)
        elif bb.data.inherits_class('cross', d) or bb.data.inherits_class('crosssdk', d):
            sstate_sed_cmd = "sed -i -e 's:FIXMESTAGINGDIRTARGET:%s:g; s:FIXMESTAGINGDIRHOST:%s:g'" % (staging_target, staging_host)
        else:
            sstate_sed_cmd = "sed -i -e 's:FIXMESTAGINGDIRTARGET:%s:g'" % (staging_target)

        extra_staging_fixmes = d.getVar('EXTRA_STAGING_FIXMES') or ''
        for fixmevar in extra_staging_fixmes.split():
            fixme_path = d.getVar(fixmevar)
            sstate_sed_cmd += " -e 's:FIXME_%s:%s:g'" % (fixmevar, fixme_path)

        # Add sstateinst to each filename in fixmepath, use xargs to efficiently call sed
        sstate_hardcode_cmd = "sed -e 's:^:%s:g' %s | xargs %s" % (sstateinst, fixmefn, sstate_sed_cmd)

        # Defer do_populate_sysroot relocation command
        if sstatefixmedir:
            bb.utils.mkdirhier(sstatefixmedir)
            with open(sstatefixmedir + "/fixmepath.cmd", "w") as f:
                sstate_hardcode_cmd = sstate_hardcode_cmd.replace(fixmefn, sstatefixmedir + "/fixmepath")
                sstate_hardcode_cmd = sstate_hardcode_cmd.replace(sstateinst, "FIXMEFINALSSTATEINST")
                sstate_hardcode_cmd = sstate_hardcode_cmd.replace(staging_host, "FIXMEFINALSSTATEHOST")
                sstate_hardcode_cmd = sstate_hardcode_cmd.replace(staging_target, "FIXMEFINALSSTATETARGET")
                f.write(sstate_hardcode_cmd)
            bb.utils.copyfile(fixmefn, sstatefixmedir + "/fixmepath")
            return

        bb.note("Replacing fixme paths in sstate package: %s" % (sstate_hardcode_cmd))
        subprocess.check_call(sstate_hardcode_cmd, shell=True)

        # Need to remove this or we'd copy it into the target directory and may
        # conflict with another writer
        os.remove(fixmefn)
}


python sstate_init () {
def sstate_init(task, d):
    ss = {}
    ss['task'] = task
    ss['dirs'] = []
    ss['plaindirs'] = []
    ss['lockfiles'] = []
    ss['lockfiles-shared'] = []
    return ss
}


python sstate_install () {
def sstate_install(ss, d):
    import oe.path
    import oe.sstatesig
    import subprocess

    sharedfiles = []
    shareddirs = []
    bb.utils.mkdirhier(d.expand("${SSTATE_MANIFESTS}"))

    sstateinst = d.expand("${WORKDIR}/sstate-install-%s/" % ss['task'])

    manifest, d2 = oe.sstatesig.sstate_get_manifest_filename(ss['task'], d)

    if os.access(manifest, os.R_OK):
        bb.fatal("Package already staged (%s)?!" % manifest)

    d.setVar("SSTATE_INST_POSTRM", manifest + ".postrm")

    locks = []
    for lock in ss['lockfiles-shared']:
        locks.append(bb.utils.lockfile(lock, True))
    for lock in ss['lockfiles']:
        locks.append(bb.utils.lockfile(lock))

    for state in ss['dirs']:
        bb.debug(2, "Staging files from %s to %s" % (state[1], state[2]))
        for walkroot, dirs, files in os.walk(state[1]):
            for file in files:
                srcpath = os.path.join(walkroot, file)
                dstpath = srcpath.replace(state[1], state[2])
                #bb.debug(2, "Staging %s to %s" % (srcpath, dstpath))
                sharedfiles.append(dstpath)
            for dir in dirs:
                srcdir = os.path.join(walkroot, dir)
                dstdir = srcdir.replace(state[1], state[2])
                #bb.debug(2, "Staging %s to %s" % (srcdir, dstdir))
                if os.path.islink(srcdir):
                    sharedfiles.append(dstdir)
                    continue
                if not dstdir.endswith("/"):
                    dstdir = dstdir + "/"
                shareddirs.append(dstdir)

    # Check the file list for conflicts against files which already exist
    whitelist = (d.getVar("SSTATE_DUPWHITELIST") or "").split()
    match = []
    for f in sharedfiles:
        if os.path.exists(f) and not os.path.islink(f):
            f = os.path.normpath(f)
            realmatch = True
            for w in whitelist:
                w = os.path.normpath(w)
                if f.startswith(w):
                    realmatch = False
                    break
            if realmatch:
                match.append(f)
                sstate_search_cmd = "grep -rlF '%s' %s --exclude=master.list | sed -e 's:^.*/::'" % (f, d.expand("${SSTATE_MANIFESTS}"))
                search_output = subprocess.Popen(sstate_search_cmd, shell=True, stdout=subprocess.PIPE).communicate()[0]
                if search_output:
                    match.append("  (matched in %s)" % search_output.decode('utf-8').rstrip())
                else:
                    match.append("  (not matched to any task)")
    if match:
        bb.error("The recipe %s is trying to install files into a shared " \
          "area when those files already exist. Those files and their manifest " \
          "location are:\n  %s\nPlease verify which recipe should provide the " \
          "above files.\n\nThe build has stopped, as continuing in this scenario WILL " \
          "break things - if not now, possibly in the future (we've seen builds fail " \
          "several months later). If the system knew how to recover from this " \
          "automatically it would, however there are several different scenarios " \
          "which can result in this and we don't know which one this is. It may be " \
          "you have switched providers of something like virtual/kernel (e.g. from " \
          "linux-yocto to linux-yocto-dev), in that case you need to execute the " \
          "clean task for both recipes and it will resolve this error. It may be " \
          "you changed DISTRO_FEATURES from systemd to udev or vice versa. Cleaning " \
          "those recipes should again resolve this error, however switching " \
          "DISTRO_FEATURES on an existing build directory is not supported - you " \
          "should really clean out tmp and rebuild (reusing sstate should be safe). " \
          "It could be the overlapping files detected are harmless in which case " \
          "adding them to SSTATE_DUPWHITELIST may be the correct solution. It could " \
          "also be your build is including two different conflicting versions of " \
          "things (e.g. bluez 4 and bluez 5 and the correct solution for that would " \
          "be to resolve the conflict. If in doubt, please ask on the mailing list, " \
          "sharing the error and filelist above." % \
          (d.getVar('PN'), "\n  ".join(match)))
        bb.fatal("If the above message is too much, the simpler version is you're advised to wipe out tmp and rebuild (reusing sstate is fine). That will likely fix things in most (but not all) cases.")

    if ss['fixmedir'] and os.path.exists(ss['fixmedir'] + "/fixmepath.cmd"):
        sharedfiles.append(ss['fixmedir'] + "/fixmepath.cmd")
        sharedfiles.append(ss['fixmedir'] + "/fixmepath")

    # Write out the manifest
    f = open(manifest, "w")
    for file in sharedfiles:
        f.write(file + "\n")

    # We want to ensure that directories appear at the end of the manifest
    # so that when we test to see if they should be deleted any contents
    # added by the task will have been removed first.
    dirs = sorted(shareddirs, key=len)
    # Must remove children first, which will have a longer path than the parent
    for di in reversed(dirs):
        f.write(di + "\n")
    f.close()

    # Append to the list of manifests for this PACKAGE_ARCH

    i = d2.expand("${SSTATE_MANIFESTS}/index-${SSTATE_MANMACH}")
    l = bb.utils.lockfile(i + ".lock")
    filedata = d.getVar("STAMP") + " " + d2.getVar("SSTATE_MANFILEPREFIX") + " " + d.getVar("WORKDIR") + "\n"
    manifests = []
    if os.path.exists(i):
        with open(i, "r") as f:
            manifests = f.readlines()
    if filedata not in manifests:
        with open(i, "a+") as f:
            f.write(filedata)
    bb.utils.unlockfile(l)

    # Run the actual file install
    for state in ss['dirs']:
        if os.path.exists(state[1]):
            oe.path.copyhardlinktree(state[1], state[2])

    for postinst in (d.getVar('SSTATEPOSTINSTFUNCS') or '').split():
        # All hooks should run in the SSTATE_INSTDIR
        bb.build.exec_func(postinst, d, (sstateinst,))

    for lock in locks:
        bb.utils.unlockfile(lock)
}


python sstate_installpkg () {
def sstate_installpkg(ss, d):
    from oe.gpg_sign import get_signer

    sstateinst = d.expand("${WORKDIR}/sstate-install-%s/" % ss['task'])
    sstatefetch = d.getVar('SSTATE_PKGNAME') + '_' + ss['task'] + ".tgz"
    d.appendVar('SSTATE_PKG', '_'+ ss['task'] + ".tgz")
    sstatepkg = d.getVar('SSTATE_PKG')

    if not os.path.exists(sstatepkg):
        pstaging_fetch(sstatefetch, d)

    if not os.path.isfile(sstatepkg):
        bb.note("Sstate package %s does not exist" % sstatepkg)
        return False

    sstate_clean(ss, d)

    d.setVar('SSTATE_INSTDIR', sstateinst)

    if bb.utils.to_boolean(d.getVar("SSTATE_VERIFY_SIG"), False):
        signer = get_signer(d, 'local')
        if not signer.verify(sstatepkg + '.sig'):
            bb.warn("Cannot verify signature on sstate package %s, skipping acceleration..." % sstatepkg)
            return False

    # Empty sstateinst directory, ensure its clean
    if os.path.exists(sstateinst):
        oe.path.remove(sstateinst)
    bb.utils.mkdirhier(sstateinst)

    sstateinst = d.getVar("SSTATE_INSTDIR")
    d.setVar('SSTATE_FIXMEDIR', ss['fixmedir'])

    for f in (d.getVar('SSTATEPREINSTFUNCS') or '').split() + ['sstate_unpack_package']:
        # All hooks should run in the SSTATE_INSTDIR
        bb.build.exec_func(f, d, (sstateinst,))

    return sstate_installpkgdir(ss, d)
}


python sstate_installpkgdir () {
def sstate_installpkgdir(ss, d):
    import oe.path
    import subprocess

    sstateinst = d.getVar("SSTATE_INSTDIR")
    d.setVar('SSTATE_FIXMEDIR', ss['fixmedir'])

    for f in (d.getVar('SSTATEPOSTUNPACKFUNCS') or '').split():
        # All hooks should run in the SSTATE_INSTDIR
        bb.build.exec_func(f, d, (sstateinst,))

    def prepdir(dir):
        # remove dir if it exists, ensure any parent directories do exist
        if os.path.exists(dir):
            oe.path.remove(dir)
        bb.utils.mkdirhier(dir)
        oe.path.remove(dir)

    for state in ss['dirs']:
        prepdir(state[1])
        os.rename(sstateinst + state[0], state[1])
    sstate_install(ss, d)

    for plain in ss['plaindirs']:
        workdir = d.getVar('WORKDIR')
        sharedworkdir = os.path.join(d.getVar('TMPDIR'), "work-shared")
        src = sstateinst + "/" + plain.replace(workdir, '')
        if sharedworkdir in plain:
            src = sstateinst + "/" + plain.replace(sharedworkdir, '')
        dest = plain
        bb.utils.mkdirhier(src)
        prepdir(dest)
        os.rename(src, dest)

    return True
}


python sstate_package () {
def sstate_package(ss, d):
    import oe.path

    tmpdir = d.getVar('TMPDIR')

    sstatebuild = d.expand("${WORKDIR}/sstate-build-%s/" % ss['task'])
    d.appendVar('SSTATE_PKG', '_'+ ss['task'] + ".tgz")
    bb.utils.remove(sstatebuild, recurse=True)
    bb.utils.mkdirhier(sstatebuild)
    for state in ss['dirs']:
        if not os.path.exists(state[1]):
            continue
        srcbase = state[0].rstrip("/").rsplit('/', 1)[0]
        # Find and error for absolute symlinks. We could attempt to relocate but its not
        # clear where the symlink is relative to in this context. We could add that markup
        # to sstate tasks but there aren't many of these so better just avoid them entirely.
        for walkroot, dirs, files in os.walk(state[1]):
            for file in files + dirs:
                srcpath = os.path.join(walkroot, file)
                if not os.path.islink(srcpath):
                    continue
                link = os.readlink(srcpath)
                if not os.path.isabs(link):
                    continue
                if not link.startswith(tmpdir):
                    continue
                bb.error("sstate found an absolute path symlink %s pointing at %s. Please replace this with a relative link." % (srcpath, link))
        bb.debug(2, "Preparing tree %s for packaging at %s" % (state[1], sstatebuild + state[0]))
        os.rename(state[1], sstatebuild + state[0])

    workdir = d.getVar('WORKDIR')
    sharedworkdir = os.path.join(d.getVar('TMPDIR'), "work-shared")
    for plain in ss['plaindirs']:
        pdir = plain.replace(workdir, sstatebuild)
        if sharedworkdir in plain:
            pdir = plain.replace(sharedworkdir, sstatebuild)
        bb.utils.mkdirhier(plain)
        bb.utils.mkdirhier(pdir)
        os.rename(plain, pdir)

    d.setVar('SSTATE_BUILDDIR', sstatebuild)
    d.setVar('SSTATE_INSTDIR', sstatebuild)

    if d.getVar('SSTATE_SKIP_CREATION') == '1':
        return

    sstate_create_package = ['sstate_report_unihash', 'sstate_create_package']
    if d.getVar('SSTATE_SIG_KEY'):
        sstate_create_package.append('sstate_sign_package')

    for f in (d.getVar('SSTATECREATEFUNCS') or '').split() + \
             sstate_create_package + \
             (d.getVar('SSTATEPOSTCREATEFUNCS') or '').split():
        # All hooks should run in SSTATE_BUILDDIR.
        bb.build.exec_func(f, d, (sstatebuild,))

    # SSTATE_PKG may have been changed by sstate_report_unihash
    bb.siggen.dump_this_task(d.getVar('SSTATE_PKG') + ".siginfo", d)

    return
}


python sstate_report_unihash () {
    report_unihash = getattr(bb.parse.siggen, 'report_unihash', None)

    if report_unihash:
        ss = sstate_state_fromvars(d)
        report_unihash(os.getcwd(), ss['task'], d)
}


python sstate_setscene () {
def sstate_setscene(d):
    shared_state = sstate_state_fromvars(d)
    accelerate = sstate_installpkg(shared_state, d)
    if not accelerate:
        bb.fatal("No suitable staging package found")
}


python sstate_sign_package () {
    from oe.gpg_sign import get_signer


    signer = get_signer(d, 'local')
    sstate_pkg = d.getVar('SSTATE_PKG')
    if os.path.exists(sstate_pkg + '.sig'):
        os.unlink(sstate_pkg + '.sig')
    signer.detach_sign(sstate_pkg, d.getVar('SSTATE_SIG_KEY', False), None,
                       d.getVar('SSTATE_SIG_PASSPHRASE'), armor=False)
}


python sstate_state_fromvars () {
def sstate_state_fromvars(d, task = None):
    if task is None:
        task = d.getVar('BB_CURRENTTASK')
        if not task:
            bb.fatal("sstate code running without task context?!")
        task = task.replace("_setscene", "")

    if task.startswith("do_"):
        task = task[3:]
    inputs = (d.getVarFlag("do_" + task, 'sstate-inputdirs') or "").split()
    outputs = (d.getVarFlag("do_" + task, 'sstate-outputdirs') or "").split()
    plaindirs = (d.getVarFlag("do_" + task, 'sstate-plaindirs') or "").split()
    lockfiles = (d.getVarFlag("do_" + task, 'sstate-lockfile') or "").split()
    lockfilesshared = (d.getVarFlag("do_" + task, 'sstate-lockfile-shared') or "").split()
    interceptfuncs = (d.getVarFlag("do_" + task, 'sstate-interceptfuncs') or "").split()
    fixmedir = d.getVarFlag("do_" + task, 'sstate-fixmedir') or ""
    if not task or len(inputs) != len(outputs):
        bb.fatal("sstate variables not setup correctly?!")

    if task == "populate_lic":
        d.setVar("SSTATE_PKGSPEC", "${SSTATE_SWSPEC}")
        d.setVar("SSTATE_EXTRAPATH", "")
        d.setVar('SSTATE_EXTRAPATHWILDCARD', "")

    ss = sstate_init(task, d)
    for i in range(len(inputs)):
        sstate_add(ss, inputs[i], outputs[i], d)
    ss['lockfiles'] = lockfiles
    ss['lockfiles-shared'] = lockfilesshared
    ss['plaindirs'] = plaindirs
    ss['interceptfuncs'] = interceptfuncs
    ss['fixmedir'] = fixmedir
    return ss
}


python sstate_task_postfunc () {
    shared_state = sstate_state_fromvars(d)

    for intercept in shared_state['interceptfuncs']:
        bb.build.exec_func(intercept, d, (d.getVar("WORKDIR"),))

    omask = os.umask(0o002)
    if omask != 0o002:
       bb.note("Using umask 0o002 (not %0o) for sstate packaging" % omask)
    sstate_package(shared_state, d)
    os.umask(omask)

    sstateinst = d.getVar("SSTATE_INSTDIR")
    d.setVar('SSTATE_FIXMEDIR', shared_state['fixmedir'])

    sstate_installpkgdir(shared_state, d)

    bb.utils.remove(d.getVar("SSTATE_BUILDDIR"), recurse=True)
}


python sstate_task_prefunc () {
    shared_state = sstate_state_fromvars(d)
    sstate_clean(shared_state, d)
}


python staging_copydir () {
def staging_copydir(c, target, dest, seendirs):
    if dest not in seendirs:
        bb.utils.mkdirhier(dest)
        seendirs.add(dest)
}


python staging_copyfile () {
def staging_copyfile(c, target, dest, postinsts, seendirs):
    import errno

    destdir = os.path.dirname(dest)
    if destdir not in seendirs:
        bb.utils.mkdirhier(destdir)
        seendirs.add(destdir)
    if "/usr/bin/postinst-" in c:
        postinsts.append(dest)
    if os.path.islink(c):
        linkto = os.readlink(c)
        if os.path.lexists(dest):
            if not os.path.islink(dest):
                raise OSError(errno.EEXIST, "Link %s already exists as a file" % dest, dest)
            if os.readlink(dest) == linkto:
                return dest
            raise OSError(errno.EEXIST, "Link %s already exists to a different location? (%s vs %s)" % (dest, os.readlink(dest), linkto), dest)
        os.symlink(linkto, dest)
        #bb.warn(c)
    else:
        try:
            os.link(c, dest)
        except OSError as err:
            if err.errno == errno.EXDEV:
                bb.utils.copyfile(c, dest)
            else:
                raise
    return dest
}


python staging_populate_sysroot_dir () {
def staging_populate_sysroot_dir(targetsysroot, nativesysroot, native, d):
    import glob
    import subprocess
    import errno

    fixme = []
    postinsts = []
    seendirs = set()
    stagingdir = d.getVar("STAGING_DIR")
    if native:
        pkgarchs = ['${BUILD_ARCH}', '${BUILD_ARCH}_*']
        targetdir = nativesysroot
    else:
        pkgarchs = ['${MACHINE_ARCH}']
        pkgarchs = pkgarchs + list(reversed(d.getVar("PACKAGE_EXTRA_ARCHS").split()))
        pkgarchs.append('allarch')
        targetdir = targetsysroot

    bb.utils.mkdirhier(targetdir)
    for pkgarch in pkgarchs:
        for manifest in glob.glob(d.expand("${SSTATE_MANIFESTS}/manifest-%s-*.populate_sysroot" % pkgarch)):
            if manifest.endswith("-initial.populate_sysroot"):
                # skip libgcc-initial due to file overlap
                continue
            if not native and (manifest.endswith("-native.populate_sysroot") or "nativesdk-" in manifest):
                continue
            if native and not (manifest.endswith("-native.populate_sysroot") or manifest.endswith("-cross.populate_sysroot") or "-cross-" in manifest):
                continue
            tmanifest = targetdir + "/" + os.path.basename(manifest)
            if os.path.exists(tmanifest):
                continue
            try:
                os.link(manifest, tmanifest)
            except OSError as err:
                if err.errno == errno.EXDEV:
                    bb.utils.copyfile(manifest, tmanifest)
                else:
                    raise
            with open(manifest, "r") as f:
                for l in f:
                    l = l.strip()
                    if l.endswith("/fixmepath"):
                        fixme.append(l)
                        continue
                    if l.endswith("/fixmepath.cmd"):
                        continue
                    dest = l.replace(stagingdir, "")
                    dest = targetdir + "/" + "/".join(dest.split("/")[3:])
                    if l.endswith("/"):
                        staging_copydir(l, targetdir, dest, seendirs)
                        continue
                    try:
                        staging_copyfile(l, targetdir, dest, postinsts, seendirs)
                    except FileExistsError:
                        continue

    staging_processfixme(fixme, targetdir, targetsysroot, nativesysroot, d)
    for p in postinsts:
        subprocess.check_output(p, shell=True, stderr=subprocess.STDOUT)

#
# Manifests here are complicated. The main sysroot area has the unpacked sstate
# which us unrelocated and tracked by the main sstate manifests. Each recipe
# specific sysroot has manifests for each dependency that is installed there.
# The task hash is used to tell whether the data needs to be reinstalled. We
# use a symlink to point to the currently installed hash. There is also a
# "complete" stamp file which is used to mark if installation completed. If
# something fails (e.g. a postinst), this won't get written and we would
# remove and reinstall the dependency. This also means partially installed
# dependencies should get cleaned up correctly.
#
}


python staging_processfixme () {
def staging_processfixme(fixme, target, recipesysroot, recipesysrootnative, d):
    import subprocess

    if not fixme:
        return
    cmd = "sed -e 's:^[^/]*/:%s/:g' %s | xargs sed -i -e 's:FIXMESTAGINGDIRTARGET:%s:g; s:FIXMESTAGINGDIRHOST:%s:g'" % (target, " ".join(fixme), recipesysroot, recipesysrootnative)
    for fixmevar in ['PSEUDO_SYSROOT', 'HOSTTOOLS_DIR', 'PKGDATA_DIR', 'PSEUDO_LOCALSTATEDIR', 'LOGFIFO']:
        fixme_path = d.getVar(fixmevar)
        cmd += " -e 's:FIXME_%s:%s:g'" % (fixmevar, fixme_path)
    bb.debug(2, cmd)
    subprocess.check_output(cmd, shell=True, stderr=subprocess.STDOUT)

}


python staging_taskhandler () {
    bbtasks = e.tasklist
    for task in bbtasks:
        deps = d.getVarFlag(task, "depends")
        if deps and "populate_sysroot" in deps:
            d.appendVarFlag(task, "prefuncs", " extend_recipe_sysroot")
}


python sysroot_strip () {
    inhibit_sysroot = d.getVar('INHIBIT_SYSROOT_STRIP')
    if inhibit_sysroot and oe.types.boolean(inhibit_sysroot):
        return

    dstdir = d.getVar('SYSROOT_DESTDIR')
    pn = d.getVar('PN')
    libdir = os.path.abspath(dstdir + os.sep + d.getVar("libdir"))
    base_libdir = os.path.abspath(dstdir + os.sep + d.getVar("base_libdir"))
    qa_already_stripped = 'already-stripped' in (d.getVar('INSANE_SKIP_' + pn) or "").split()
    strip_cmd = d.getVar("STRIP")

    oe.package.strip_execs(pn, dstdir, strip_cmd, libdir, base_libdir, d,
                           qa_already_stripped=qa_already_stripped)
}


python uninative_changeinterp () {
    import subprocess
    import stat
    import oe.qa

    if not (bb.data.inherits_class('native', d) or bb.data.inherits_class('crosssdk', d) or bb.data.inherits_class('cross', d)):
        return

    sstateinst = d.getVar('SSTATE_INSTDIR')
    for walkroot, dirs, files in os.walk(sstateinst):
        for file in files:
            if file.endswith(".so") or ".so." in file:
                continue
            f = os.path.join(walkroot, file)
            if os.path.islink(f):
                continue
            s = os.stat(f)
            if not ((s[stat.ST_MODE] & stat.S_IXUSR) or (s[stat.ST_MODE] & stat.S_IXGRP) or (s[stat.ST_MODE] & stat.S_IXOTH)):
                continue
            elf = oe.qa.ELFFile(f)
            try:
                elf.open()
            except oe.qa.NotELFFileError:
                continue
            if not elf.isDynamic():
                continue

            subprocess.check_output(("patchelf-uninative", "--set-interpreter", d.getVar("UNINATIVE_LOADER"), f), stderr=subprocess.STDOUT)
}


python uninative_event_enable () {
    """
    This event handler is called in the workers and is responsible for setting
    up uninative if a loader is found.
    """
    enable_uninative(d)
}


python uninative_event_fetchloader () {
    """
    This event fires on the parent and will try to fetch the tarball if the
    loader isn't already present.
    """

    chksum = d.getVarFlag("UNINATIVE_CHECKSUM", d.getVar("BUILD_ARCH"))
    if not chksum:
        bb.fatal("Uninative selected but not configured correctly, please set UNINATIVE_CHECKSUM[%s]" % d.getVar("BUILD_ARCH"))

    loader = d.getVar("UNINATIVE_LOADER")
    loaderchksum = loader + ".chksum"
    if os.path.exists(loader) and os.path.exists(loaderchksum):
        with open(loaderchksum, "r") as f:
            readchksum = f.read().strip()
        if readchksum == chksum:
            return

    import subprocess
    try:
        # Save and restore cwd as Fetch.download() does a chdir()
        olddir = os.getcwd()

        tarball = d.getVar("UNINATIVE_TARBALL")
        tarballdir = os.path.join(d.getVar("UNINATIVE_DLDIR"), chksum)
        tarballpath = os.path.join(tarballdir, tarball)

        if not os.path.exists(tarballpath + ".done"):
            bb.utils.mkdirhier(tarballdir)
            if d.getVar("UNINATIVE_URL") == "unset":
                bb.fatal("Uninative selected but not configured, please set UNINATIVE_URL")

            localdata = bb.data.createCopy(d)
            localdata.setVar('FILESPATH', "")
            localdata.setVar('DL_DIR', tarballdir)
            # Our games with path manipulation of DL_DIR mean standard PREMIRRORS don't work
            # and we can't easily put 'chksum' into the url path from a url parameter with
            # the current fetcher url handling
            ownmirror = d.getVar('SOURCE_MIRROR_URL')
            if ownmirror:
                localdata.appendVar("PREMIRRORS", " ${UNINATIVE_URL}${UNINATIVE_TARBALL} ${SOURCE_MIRROR_URL}/uninative/%s/${UNINATIVE_TARBALL}" % chksum)

            srcuri = d.expand("${UNINATIVE_URL}${UNINATIVE_TARBALL};sha256sum=%s" % chksum)
            bb.note("Fetching uninative binary shim from %s" % srcuri)

            fetcher = bb.fetch2.Fetch([srcuri], localdata, cache=False)
            fetcher.download()
            localpath = fetcher.localpath(srcuri)
            if localpath != tarballpath and os.path.exists(localpath) and not os.path.exists(tarballpath):
                # Follow the symlink behavior from the bitbake fetch2.
                # This will cover the case where an existing symlink is broken
                # as well as if there are two processes trying to create it
                # at the same time.
                if os.path.islink(tarballpath):
                    # Broken symbolic link
                    os.unlink(tarballpath)

                # Deal with two processes trying to make symlink at once
                try:
                    os.symlink(localpath, tarballpath)
                except FileExistsError:
                    pass

        # ldd output is "ldd (Ubuntu GLIBC 2.23-0ubuntu10) 2.23", extract last option from first line
        glibcver = subprocess.check_output(["ldd", "--version"]).decode('utf-8').split('\n')[0].split()[-1]
        if bb.utils.vercmp_string(d.getVar("UNINATIVE_MAXGLIBCVERSION"), glibcver) < 0:
            raise RuntimeError("Your host glibc verson (%s) is newer than that in uninative (%s). Disabling uninative so that sstate is not corrupted." % (glibcver, d.getVar("UNINATIVE_MAXGLIBCVERSION")))

        cmd = d.expand("\
mkdir -p ${UNINATIVE_STAGING_DIR}-uninative; \
cd ${UNINATIVE_STAGING_DIR}-uninative; \
tar -xJf ${UNINATIVE_DLDIR}/%s/${UNINATIVE_TARBALL}; \
${UNINATIVE_STAGING_DIR}-uninative/relocate_sdk.py \
  ${UNINATIVE_STAGING_DIR}-uninative/${BUILD_ARCH}-linux \
  ${UNINATIVE_LOADER} \
  ${UNINATIVE_LOADER} \
  ${UNINATIVE_STAGING_DIR}-uninative/${BUILD_ARCH}-linux/${bindir_native}/patchelf-uninative \
  ${UNINATIVE_STAGING_DIR}-uninative/${BUILD_ARCH}-linux${base_libdir_native}/libc*.so" % chksum)
        subprocess.check_output(cmd, shell=True)

        with open(loaderchksum, "w") as f:
            f.write(chksum)

        enable_uninative(d)

    except RuntimeError as e:
        bb.warn(str(e))
    except bb.fetch2.BBFetchException as exc:
        bb.warn("Disabling uninative as unable to fetch uninative tarball: %s" % str(exc))
        bb.warn("To build your own uninative loader, please bitbake uninative-tarball and set UNINATIVE_TARBALL appropriately.")
    except subprocess.CalledProcessError as exc:
        bb.warn("Disabling uninative as unable to install uninative tarball: %s" % str(exc))
        bb.warn("To build your own uninative loader, please bitbake uninative-tarball and set UNINATIVE_TARBALL appropriately.")
    finally:
        os.chdir(olddir)
}


python virt_bbappend_distrocheck () {
    skip_check = e.data.getVar('SKIP_META_VIRT_SANITY_CHECK') == "1"
    if 'virtualization' not in e.data.getVar('DISTRO_FEATURES').split() and not skip_check:
        bb.warn("You have included the meta-virtualization layer, but \
'virtualization' has not been enabled in your DISTRO_FEATURES. Some bbappend files \
may not take effect. See the meta-virtualization README for details on enabling \
virtualization support.")
}


python write_task_data () {
def write_task_data(status, logfile, e, d):
    bn = d.getVar('BUILDNAME')
    bsdir = os.path.join(d.getVar('BUILDSTATS_BASE'), bn)
    with open(os.path.join(logfile), "a") as f:
        elapsedtime = get_timedata("__timedata_task", d, e.time)
        if elapsedtime:
            f.write(d.expand("${PF}: %s\n" % e.task))
            f.write(d.expand("Elapsed time: %0.2f seconds\n" % elapsedtime))
            cpu, iostats, resources, childres = get_process_cputime(os.getpid())
            if cpu:
                f.write("utime: %s\n" % cpu['utime'])
                f.write("stime: %s\n" % cpu['stime'])
                f.write("cutime: %s\n" % cpu['cutime'])
                f.write("cstime: %s\n" % cpu['cstime'])
            for i in iostats:
                f.write("IO %s: %s\n" % (i, iostats[i]))
            rusages = ["ru_utime", "ru_stime", "ru_maxrss", "ru_minflt", "ru_majflt", "ru_inblock", "ru_oublock", "ru_nvcsw", "ru_nivcsw"]
            for i in rusages:
                f.write("rusage %s: %s\n" % (i, getattr(resources, i)))
            for i in rusages:
                f.write("Child rusage %s: %s\n" % (i, getattr(childres, i)))
        if status is "passed":
            f.write("Status: PASSED \n")
        else:
            f.write("Status: FAILED \n")
        f.write("Ended: %0.2f \n" % e.time)
}

